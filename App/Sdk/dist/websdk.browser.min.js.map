{"version":3,"sources":["websdk.browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_parsePrivacy","iq","list","items","getElementsByTagName","i","length","item","jid","getAttribute","order","type","n","_parseNameFromJidFn","name","_parseGroupBlacklist","affiliation","nick","_setText","valueDom","v","textContent","text","_version","_code","code","_utils","utils","_msg","_message","_msgHash","Queue","PAGELIMIT","pageLimitKey","Date","getTime","window","URL","webkitURL","mozURL","msURL","XDomainRequest","prototype","oldsend","send","apply","arguments","readyState","Strophe","Request","_newXHR","xhr","xmlrequest","overrideMimeType","onreadystatechange","func","bind","Websocket","_closeSocket","socket","me","setTimeout","close","e","_onMessage","message","WebIM","config","isDebug","console","log","ts","data","elem","indexOf","DOMParser","parseFromString","documentElement","see_uri","_conn","_changeConnectStatus","Status","REDIRECT","reset","service","_connect","_doDisconnect","search","_handleStreamStart","_streamWrap","_check_streamerror","ERROR","disconnecting","firstChild","nodeName","xmlInput","rawInput","serialize","_dataRecv","_listenNetwork","onlineCallback","offlineCallback","addEventListener","attachEvent","document","body","_parseRoom","result","rooms","roomJid","tmp","split","room","roomId","push","_parseRoomOccupants","occupants","_parseResponseMessage","msginfo","parseMsgData","errorMsg","msgBodies","msgBody","childNodes","childNode","nodeType","ElementType","TEXT","jsondata","wholeText","nodeValue","replace","eval","delayTags","delayTag","delayMsgTime","delayTimeStamp","childrens","child","domain","tempstr","findex","substring","atindex","_parseFriend","queryTag","conn","from","rouster","subscription","friend","ask","groups","forEachChild","group","getText","subscribe","toJid","subscribed","_login","options","accessToken","access_token","stringify","onError","WEBIM_CONNCTION_OPEN_USERGRID_ERROR","context","accessTokenExpires","expires_in","stropheConn","isOpening","isOpened","Connection","url","inactivity","maxRetries","pollingTime","callback","status","msg","_loginCallback","route","connect","wait","hold","_parseMessageType","msgtype","receiveinfo","namespaceURI","inviteinfo","_handleMessageQueue","hasOwnProperty","conflict","error","CONNFAIL","WEBIM_CONNCTION_SERVER_CLOSE_ERROR","reconnect","ATTACHED","CONNECTED","intervalId","setInterval","handelSendQueue","handleMessage","handleReceivedMessage","handleInviteMessage","handlePresence","handlePing","handleIqRoster","handleIqPrivacy","handleIq","addHandler","STATUS_OPENED","supportRecMessage","WEBIM_MESSAGE_REC_TEXT","WEBIM_MESSAGE_REC_EMOJI","isCanDownLoadFile","WEBIM_MESSAGE_REC_PHOTO","WEBIM_MESSAGE_REC_AUDIO_FILE","supportSedMessage","WEBIM_MESSAGE_SED_TEXT","isCanUploadFile","notifyVersion","retry","heartBeat","isAutoLogin","setPresence","onOpened","canReceive","canSend","DISCONNECTING","stopHeartBeat","STATUS_CLOSING","DISCONNECTED","Demo","autoReconnectNumTotal","autoReconnectNumMax","WEBIM_CONNCTION_DISCONNECTED","STATUS_CLOSED","clear","onClosed","AUTHFAIL","WEBIM_CONNCTION_AUTH_ERROR","STATUS_ERROR","WEBIM_CONNCTION_SERVER_ERROR","status_now","_getJid","appKey","to","resource","_getJidByName","_validCheck","user","WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR","devInfos","WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR","orgName","appName","toLowerCase","isMultiLoginSessions","Math","floor","random","toFixed","userId","_getXmppUrl","baseUrl","https","test","prefix","base","suffix","isSupportWss","WebSocket","_handlePageLimit","localStorage","keyValue","setItem","_clearPageSign","_getPageCount","sum","o","connection","location","protocol","heartBeatWait","autoReconnectInterval","STATUS_INIT","sendQueue","pop","sendReceiptsMessage","listen","emptyfn","onTextMessage","onEmojiMessage","onPictureMessage","onAudioMessage","onVideoMessage","onFileMessage","onLocationMessage","onCmdMessage","onPresence","onRoster","onReceivedMessage","onInviteMessage","onOffline","onOnline","onConfirmPop","onUpdateMyGroupList","onUpdateMyRoster","onBlacklistUpdate","isNeed","navigator","userAgent","heartBeatID","ping","clearInterval","dom","$msg","xmlns","sendCommand","tree","cacheReceiptsMessage","open","total","api","NotifyError","lan","nomorethan","reslogatonetime","reload","pass","apiUrl","pwd","suc","STATUS_DOLOGIN_IM","restTokenData","res","error_description","WEBIM_CONNCTION_OPEN_ERROR","STATUS_DOLOGIN_USERGRID","loginJson","grant_type","username","password","timestamp","loginfo","dataType","success","ajax","attach","WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR","sid","WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR","rid","WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR","wind","reason","isClosed","isClosing","disconnect","handler","ns","fail","$iq","t","up","failFn","ele","WEBIM_CONNCTION_NOTIFYVERSION_ERROR","sendIQ","presence_type","fromUser","toUser","info","fromJid","chatroom","showTags","showTag","show","statusTags","statusTag","priorityTags","priorityTag","priority","destroy","members","member","role","kickedMember","actor","actorNick","kicked","toNick","groupJid","userJid","groupName","original_type","reflectUser","slice","lastIndexOf","getBlacklist","curJid","iqresult","errorCode","errorText","errorBool","textDOM","msgDatas","too","extmsg","ext","chattype","typeEl","bodies","receiveMsg","emojibody","parseTextMessage","Emoji","isemoji","delay","rwidth","rheight","size","width","height","secret","filename","thumb","thumb_secret","file_length","filetype","addr","lat","lng","action","WEBIM_CONNCTION_CALLBACK_INNER_ERROR","mid","rcv","innerHTML","innerText","Function","form","invitemsg","reasonDom","reasonMsg","xmsg","roomid","roomjid","getUniqueId","cdate","offdate","offset","hexd","parseInt","toString","isWindowSDK","doQuery","encodeURI","chatType","response","Object","addRoster","removeRoster","getRoster","completeFn","WEBIM_CONNCTION_GETROSTER_ERROR","pres","$pres","unsubscribe","unsubscribed","createRoom","roomiq","err","roomName","NS","MUC_OWNER","joinPublicGroup","room_nick","errorFn","WEBIM_CONNCTION_JOINROOM_ERROR","MUC","listRooms","server","DISCO_ITEMS","WEBIM_CONNCTION_GETROOM_ERROR","queryRoomMember","mem","WEBIM_CONNCTION_GETROOMMEMBER_ERROR","queryRoomInfo","DISCO_INFO","settings","features","fields","fieldValues","field","fieldVar","fieldSimplify","WEBIM_CONNCTION_GETROOMINFO_ERROR","queryRoomOccupants","WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR","attrs","setUserSig","desc","getPresence","WEBIM_CONNCTION_PING_ERROR","key","errorType","statusCode","WEBIM_CONNCTION_CLIENT_LOGOUT","init","getChatRooms","isCanSetRequestHeader","WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR","token","WEBIM_CONNCTION_LOAD_CHATROOM_ERROR","pageInfo","pagenum","pagesize","opts","headers","Authorization","joinChatRoom","WEBIM_CONNCTION_JOINCHATROOM_ERROR","quitChatRoom","WEBIM_CONNCTION_QUITCHATROOM_ERROR","_onReceiveInviteFromGroup","title","group_id","agree","reject","_onReceiveInviteAcceptionFromGroup","_onReceiveInviteDeclineFromGroup","_onAutoAcceptInvitationFromGroup","group_name","_onLeaveGroup","_onReceiveJoinGroupApplication","_onReceiveAcceptionFromGroup","_onReceiveRejectionFromGroup","_onUpdateMyGroupList","_onUpdateMyRoster","that","closed","sucFn","errFn","addToBlackList","blacklist","piece","keys","len","value","removeFromBlackList","_getGroupJid","addToGroupBlackList","getGroupBlacklist","removeGroupMemberFromBlacklist","changeGroupSubject","var","subject","description","destroyGroup","leaveGroupBySelf","msgInfo","errInfo","leaveGroup","addGroupMembers","acceptInviteFromGroup","rejectInviteFromGroup","createGroup","toRoom","x","setAttribute","optionsPublic","optionsMembersOnly","optionsModerate","optionsAllowInvites","cnode","str","cefQuery","request","persistent","onSuccess","onFailure","__WEBPACK_LOCAL_MODULE_0__","__WEBPACK_LOCAL_MODULE_1__","__WEBPACK_LOCAL_MODULE_2__","__WEBPACK_LOCAL_MODULE_3__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_LOCAL_MODULE_4__","__WEBPACK_LOCAL_MODULE_5__","__WEBPACK_LOCAL_MODULE_6__","__WEBPACK_LOCAL_MODULE_7__","__WEBPACK_LOCAL_MODULE_8__","keyStr","obj","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","isNaN","charAt","decode","String","fromCharCode","core_sha1","j","olda","oldb","oldc","oldd","olde","w","Array","a","b","d","rol","safe_add","sha1_ft","sha1_kt","core_hmac_sha1","bkey","str2binb","ipad","opad","hash","concat","y","lsw","msw","num","cnt","bin","mask","binb2str","binb2b64","binarray","triplet","tab","b64_hmac_sha1","b64_sha1","s","str_hmac_sha1","str_sha1","bit_rol","str2binl","binl2str","binl2hex","hex_tab","md5_cmn","q","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","hexdigest","utf16to8","out","addCookies","cookies","cookieName","cookieObj","isObj","cookieValue","expires","path","escape","unescape","cookie","_slice","_concat","_args","isArray","arg","elt","Number","ceil","SHA1","Base64","MD5","$build","Builder","VERSION","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","blockquote","br","cite","em","img","li","ol","span","strong","ul","css","validTag","tag","validAttribute","attribute","validCSS","style","CONNECTING","AUTHENTICATING","CONNTIMEOUT","LogLevel","DEBUG","INFO","WARN","FATAL","NORMAL","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","addNamespace","elemName","isTagEqual","el","tagName","_xmlGenerator","_makeGenerator","doc","undefined","implementation","createDocument","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","ActiveXObject","xmlElement","k","node","xmlTextNode","attr","xmlescape","xmlunescape","createTextNode","xmlHtmlNode","html","parser","async","loadXML","copyElement","createHtml","cssAttrs","cssName","cssValue","cssText","join","createDocumentFragment","escapeNode","unescapeNode","getNodeFromJid","getDomainFromJid","bare","getBareJidFromJid","parts","splice","getResourceFromJid","level","debug","warn","fatal","_requestId","_connectionPlugins","addConnectionPlugin","ptype","nodeTree","parentNode","moreattrs","removeAttribute","impNode","xmlGen","importNode","newElem","h","fragment","xhtml","Handler","matchBare","isMatch","nsMatch","elem_type","run","sourceURL","line","fileName","trace","lineNumber","stack","TimedHandler","period","lastCalled","proto","_proto","Bosh","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","_authentication","_idleTimeout","_disconnectTimeout","authenticated","connected","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","_onIdle","F","_reset","_requests","pause","resume","uuid","r","authcid","authzid","servtype","connect_callback","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","removeItem","xmlOutput","rawOutput","nextValidRid","_queueData","_send","flush","clearTimeout","errback","timeout","timeoutHandler","expectedFrom","fulljid","stanza","deleteTimedHandler","acceptable","iqtype","addTimedHandler","deleteHandler","element","_sendRestart","thand","handRef","hand","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","_abortAllRequests","condition","plugin","statusChanged","req","raw","_reqToData","strip","_emptyQueue","cond","newList","mechanisms","_connect_cb","_callback","bodyWrap","conncheck","sasl_scram_sha1","sasl_plain","sasl_digest_md5","sasl_anonymous","legacy_auth","hasFeatures","getElementsByTagNameNS","mech","matched","found_authentication","_no_auth_received","authenticate","higher","swap","mechanism_found","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","mechanism","isClientFirst","onChallenge","_auth1_cb","challenge","_auth2_cb","serverSignature","attribMatch","matches","match","streamfeature_handlers","wrapper","_sasl_auth1_cb","_sasl_bind_cb","jidNode","_sasl_session_cb","since","now","SASLMechanism","_connection","Error","SASLAnonymous","SASLPlain","auth_str","SASLSHA1","test_cnonce","cnonce","nonce","salt","iter","Hi","U","U_old","clientKey","serverKey","clientSignature","responseText","authMessage","substr","SASLMD5","_quote","realm","host","qop","digest_uri","cred","A1","A2","SASLOAuthBearer","SASLExternal","core","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","getResponse","responseXML","XMLHttpRequest","errors","_buildBody","keepalive","_cacheSession","xml:lang","content","ver","xmpp:version","xmlns:xmpp","_onRequestStateChange","_throttledRequestHandler","session","parse","getItem","typ","_sendTerminate","_hitError","reqStatus","xmpp:restart","time_elapsed","reqIs0","reqIs1","_removeRequest","_restartRequest","_processRequest","self","primaryTimeout","secondaryTimeout","requestCompletedWithServerError","contentType","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","header","backoff","min","pow","abs","new_service","pathname","_buildStream","version","connectstatus","errorString","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","streamStart","string","CLOSED","closeString","rawStanza","start","startString","n_callback","requirejs","__WEBPACK_AMD_REQUIRE_ARRAY__","build","connIndex","uploadIndex","downloadIndex","msgIndex","statusIndex","WEBIM_CONNCTION_ATTACH_ERROR","WEBIM_CONNCTION_ATTACH_USERGRID_ERROR","WEBIM_CONNCTION_REOPEN_ERROR","WEBIM_CONNCTION_IQ_ERROR","WEBIM_CONNCTION_CROSSDOMAIN_ERROR","WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES","WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR","WEBIM_CONNCTION_AJAX_ERROR","WEBIM_CONNCTION_CLIENT_OFFLINE","WEBIM_UPLOADFILE_BROWSER_ERROR","WEBIM_UPLOADFILE_ERROR","WEBIM_UPLOADFILE_NO_LOGIN","WEBIM_UPLOADFILE_NO_FILE","WEBIM_DOWNLOADFILE_ERROR","WEBIM_DOWNLOADFILE_NO_LOGIN","WEBIM_DOWNLOADFILE_BROWSER_ERROR","WEBIM_MESSAGE_REC_TEXT_ERROR","WEBIM_MESSAGE_REC_EMOTION","WEBIM_MESSAGE_REC_AUDIO","WEBIM_MESSAGE_REC_VEDIO","WEBIM_MESSAGE_REC_VEDIO_FILE","WEBIM_MESSAGE_REC_FILE","WEBIM_MESSAGE_SED_EMOTION","WEBIM_MESSAGE_SED_PHOTO","WEBIM_MESSAGE_SED_AUDIO","WEBIM_MESSAGE_SED_AUDIO_FILE","WEBIM_MESSAGE_SED_VEDIO","WEBIM_MESSAGE_SED_VEDIO_FILE","WEBIM_MESSAGE_SED_FILE","EMPTYFN","WEBIM_FILESIZE_LIMIT","_createStandardXHR","_createActiveXHR","_xmlrequest","crossDomain","temp","onload","xmlDoc","ontimeout","_hasFlash","ex","plugins","_tmpUtilXHR","_hasFormData","FormData","_hasBlob","Blob","_isCanSetRequestHeader","_hasOverrideMimeType","_isCanUploadFileAsync","_isCanUploadFile","_isCanDownLoadFile","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","TypeError","prop","hasFormData","hasBlob","hasOverrideMimeType","isCanUploadFileAsync","notSupportList","ua","l","getIEVersion","tridentMap","4","5","6","7","json","arr","iterate","isArr","registerUser","restUrl","userjson","nickname","userinfo","login","getFileUrl","fileInputId","uri","fileObj","getElementById","createObjectURL","fileItems","files","u","pos1","pos2","pos","max","index","getFileSize","file","fileSize","select","fileobject","GetFile","Size","hasFlash","trim","parseEmoji","map","emoji","face","parseLink","reg","parseJSON","requireNonComma","depth","comma","parseUploadResponse","parseDownloadResponse","uploadFile","onFileUploadProgress","onFileUploadComplete","onFileUploadError","onFileUploadCanceled","acc","uploadUrl","flashUpload","upload","formData","append","download","onFileDownloadComplete","onFileDownloadError","method","resType","responseType","mimeType","innerHeaer","X-Requested-With","Accept","share-secret","faces","emessage","expr","tmsg","existEmoji","emojiStr","restMsgIndex","tempData","Hours","getHours","Minutes","getMinutes","Seconds","getSeconds","Milliseconds","getMilliseconds","getObjectKey","val","Message","setGroup","txt","set","opt","roomType","cmd","audio","video","_Message","weichat","originType","jsonstr","_tmpComplete","_complete","entities","file_len","thumbnail","Array_h","array","at","end","remove","count","separator","_array_h","_index","ret","head","tail","empty"],"mappings":"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","file":"websdk.browser.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebIM\"] = factory();\n\telse\n\t\troot[\"WebIM\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// ;\n\t// (function (window, undefined) {\n\n\t__webpack_require__(2);\n\n\tvar _version = '1.1.3';\n\tvar _code = __webpack_require__(3).code;\n\tvar _utils = __webpack_require__(4).utils;\n\tvar _msg = __webpack_require__(5);\n\tvar _message = _msg._msg;\n\tvar _msgHash = {};\n\tvar Queue = __webpack_require__(6).Queue;\n\n\tvar PAGELIMIT = 2;\n\tvar pageLimitKey = new Date().getTime();\n\n\twindow.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n\tif (window.XDomainRequest) {\n\t    XDomainRequest.prototype.oldsend = XDomainRequest.prototype.send;\n\t    XDomainRequest.prototype.send = function () {\n\t        XDomainRequest.prototype.oldsend.apply(this, arguments);\n\t        this.readyState = 2;\n\t    };\n\t}\n\n\tStrophe.Request.prototype._newXHR = function () {\n\t    var xhr = _utils.xmlrequest(true);\n\t    if (xhr.overrideMimeType) {\n\t        xhr.overrideMimeType('text/xml');\n\t    }\n\t    // use Function.bind() to prepend ourselves as an argument\n\t    xhr.onreadystatechange = this.func.bind(null, this);\n\t    return xhr;\n\t};\n\n\tStrophe.Websocket.prototype._closeSocket = function () {\n\t    if (this.socket) {\n\t        var me = this;\n\t        setTimeout(function () {\n\t            try {\n\t                me.socket.close();\n\t            } catch (e) {\n\t            }\n\t        }, 0);\n\t    } else {\n\t        this.socket = null;\n\t    }\n\t};\n\n\t/**\n\t *\n\t * Strophe.Websocket has a bug while logout:\n\t * 1.send: <presence xmlns='jabber:client' type='unavailable'/> is ok;\n\t * 2.send: <close xmlns='urn:ietf:params:xml:ns:xmpp-framing'/> will cause a problem,log as follows:\n\t * WebSocket connection to 'ws://im-api.hyphenate.io/ws/' failed: Data frame received after close_connect @ strophe.js:5292connect @ strophe.js:2491_login @ websdk-1.1.2.js:278suc @ websdk-1.1.2.js:636xhr.onreadystatechange @ websdk-1.1.2.js:2582\n\t * 3 \"Websocket error [object Event]\"\n\t * _changeConnectStatus\n\t * onError Object {type: 7, msg: \"The WebSocket connection could not be established or was disconnected.\", reconnect: true}\n\t *\n\t * this will trigger socket.onError, therefore _doDisconnect again.\n\t * Fix it by overide  _onMessage\n\t */\n\tStrophe.Websocket.prototype._onMessage = function (message) {\n\t    WebIM && WebIM.config.isDebug && console.log(WebIM.utils.ts() + 'recv:', message.data);\n\t    var elem, data;\n\t    // check for closing stream\n\t    // var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\t    // if (message.data === close) {\n\t    //     this._conn.rawInput(close);\n\t    //     this._conn.xmlInput(message);\n\t    //     if (!this._conn.disconnecting) {\n\t    //         this._conn._doDisconnect();\n\t    //     }\n\t    //     return;\n\t    //\n\t    // send and receive close xml: <close xmlns='urn:ietf:params:xml:ns:xmpp-framing'/>\n\t    // so we can't judge whether message.data equals close by === simply.\n\t    if (message.data.indexOf(\"<close \") === 0) {\n\t        elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\t        var see_uri = elem.getAttribute(\"see-other-uri\");\n\t        if (see_uri) {\n\t            this._conn._changeConnectStatus(Strophe.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\t            this._conn.reset();\n\t            this._conn.service = see_uri;\n\t            this._connect();\n\t        } else {\n\t            // if (!this._conn.disconnecting) {\n\t            this._conn._doDisconnect(\"receive <close> from server\");\n\t            // }\n\t        }\n\t        return;\n\t    } else if (message.data.search(\"<open \") === 0) {\n\t        // This handles stream restarts\n\t        elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\t        if (!this._handleStreamStart(elem)) {\n\t            return;\n\t        }\n\t    } else {\n\t        data = this._streamWrap(message.data);\n\t        elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\t    }\n\n\t    if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n\t        return;\n\t    }\n\n\t    //handle unavailable presence stanza before disconnecting\n\t    if (this._conn.disconnecting &&\n\t        elem.firstChild.nodeName === \"presence\" &&\n\t        elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n\t        this._conn.xmlInput(elem);\n\t        this._conn.rawInput(Strophe.serialize(elem));\n\t        // if we are already disconnecting we will ignore the unavailable stanza and\n\t        // wait for the </stream:stream> tag before we close the connection\n\t        return;\n\t    }\n\t    this._conn._dataRecv(elem, message.data);\n\t};\n\n\n\tvar _listenNetwork = function (onlineCallback, offlineCallback) {\n\n\t    if (window.addEventListener) {\n\t        window.addEventListener('online', onlineCallback);\n\t        window.addEventListener('offline', offlineCallback);\n\n\t    } else if (window.attachEvent) {\n\t        if (document.body) {\n\t            document.body.attachEvent('ononline', onlineCallback);\n\t            document.body.attachEvent('onoffline', offlineCallback);\n\t        } else {\n\t            window.attachEvent('load', function () {\n\t                document.body.attachEvent('ononline', onlineCallback);\n\t                document.body.attachEvent('onoffline', offlineCallback);\n\t            });\n\t        }\n\t    } else {\n\t        /*var onlineTmp = window.ononline;\n\t         var offlineTmp = window.onoffline;\n\n\t         window.attachEvent('ononline', function () {\n\t         try {\n\t         typeof onlineTmp === 'function' && onlineTmp();\n\t         } catch ( e ) {}\n\t         onlineCallback();\n\t         });\n\t         window.attachEvent('onoffline', function () {\n\t         try {\n\t         typeof offlineTmp === 'function' && offlineTmp();\n\t         } catch ( e ) {}\n\t         offlineCallback();\n\t         });*/\n\t    }\n\t};\n\n\tvar _parseRoom = function (result) {\n\t    var rooms = [];\n\t    var items = result.getElementsByTagName('item');\n\t    if (items) {\n\t        for (var i = 0; i < items.length; i++) {\n\t            var item = items[i];\n\t            var roomJid = item.getAttribute('jid');\n\t            var tmp = roomJid.split('@')[0];\n\t            var room = {\n\t                jid: roomJid,\n\t                name: item.getAttribute('name'),\n\t                roomId: tmp.split('_')[1]\n\t            };\n\t            rooms.push(room);\n\t        }\n\t    }\n\t    return rooms;\n\t};\n\n\tvar _parseRoomOccupants = function (result) {\n\t    var occupants = [];\n\t    var items = result.getElementsByTagName('item');\n\t    if (items) {\n\t        for (var i = 0; i < items.length; i++) {\n\t            var item = items[i];\n\t            var room = {\n\t                jid: item.getAttribute('jid'),\n\t                name: item.getAttribute('name')\n\t            };\n\t            occupants.push(room);\n\t        }\n\t    }\n\t    return occupants;\n\t};\n\n\tvar _parseResponseMessage = function (msginfo) {\n\t    var parseMsgData = {errorMsg: true, data: []};\n\n\t    var msgBodies = msginfo.getElementsByTagName('body');\n\t    if (msgBodies) {\n\t        for (var i = 0; i < msgBodies.length; i++) {\n\t            var msgBody = msgBodies[i];\n\t            var childNodes = msgBody.childNodes;\n\t            if (childNodes && childNodes.length > 0) {\n\t                var childNode = msgBody.childNodes[0];\n\t                if (childNode.nodeType == Strophe.ElementType.TEXT) {\n\t                    var jsondata = childNode.wholeText || childNode.nodeValue;\n\t                    jsondata = jsondata.replace('\\n', '<br>');\n\t                    try {\n\t                        var data = eval('(' + jsondata + ')');\n\t                        parseMsgData.errorMsg = false;\n\t                        parseMsgData.data = [data];\n\t                    } catch (e) {\n\t                    }\n\t                }\n\t            }\n\t        }\n\n\t        var delayTags = msginfo.getElementsByTagName('delay');\n\t        if (delayTags && delayTags.length > 0) {\n\t            var delayTag = delayTags[0];\n\t            var delayMsgTime = delayTag.getAttribute('stamp');\n\t            if (delayMsgTime) {\n\t                parseMsgData.delayTimeStamp = delayMsgTime;\n\t            }\n\t        }\n\t    } else {\n\t        var childrens = msginfo.childNodes;\n\t        if (childrens && childrens.length > 0) {\n\t            var child = msginfo.childNodes[0];\n\t            if (child.nodeType == Strophe.ElementType.TEXT) {\n\t                try {\n\t                    var data = eval('(' + child.nodeValue + ')');\n\t                    parseMsgData.errorMsg = false;\n\t                    parseMsgData.data = [data];\n\t                } catch (e) {\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return parseMsgData;\n\t};\n\n\tvar _parseNameFromJidFn = function (jid, domain) {\n\t    domain = domain || '';\n\t    var tempstr = jid;\n\t    var findex = tempstr.indexOf('_');\n\n\t    if (findex !== -1) {\n\t        tempstr = tempstr.substring(findex + 1);\n\t    }\n\t    var atindex = tempstr.indexOf('@' + domain);\n\t    if (atindex !== -1) {\n\t        tempstr = tempstr.substring(0, atindex);\n\t    }\n\t    return tempstr;\n\t};\n\n\tvar _parseFriend = function (queryTag, conn, from) {\n\t    var rouster = [];\n\t    var items = queryTag.getElementsByTagName('item');\n\t    if (items) {\n\t        for (var i = 0; i < items.length; i++) {\n\t            var item = items[i];\n\t            var jid = item.getAttribute('jid');\n\t            if (!jid) {\n\t                continue;\n\t            }\n\t            var subscription = item.getAttribute('subscription');\n\t            var friend = {\n\t                subscription: subscription,\n\t                jid: jid\n\t            };\n\t            var ask = item.getAttribute('ask');\n\t            if (ask) {\n\t                friend.ask = ask;\n\t            }\n\t            var name = item.getAttribute('name');\n\t            if (name) {\n\t                friend.name = name;\n\t            } else {\n\t                var n = _parseNameFromJidFn(jid);\n\t                friend.name = n;\n\t            }\n\t            var groups = [];\n\t            Strophe.forEachChild(item, 'group', function (group) {\n\t                groups.push(Strophe.getText(group));\n\t            });\n\t            friend.groups = groups;\n\t            rouster.push(friend);\n\t            // B同意之后 -> B订阅A\n\t            if (conn && (subscription == 'from')) {\n\t                conn.subscribe({\n\t                    toJid: jid\n\t                });\n\t            }\n\n\t            if (conn && (subscription == 'to')) {\n\t                conn.subscribed({\n\t                    toJid: jid\n\t                });\n\t            }\n\t        }\n\t    }\n\t    return rouster;\n\t};\n\n\tvar _login = function (options, conn) {\n\t    var accessToken = options.access_token || '';\n\t    if (accessToken == '') {\n\t        var loginfo = _utils.stringify(options);\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_OPEN_USERGRID_ERROR,\n\t            data: options\n\t        });\n\t        return;\n\t    }\n\t    conn.context.accessToken = options.access_token;\n\t    conn.context.accessTokenExpires = options.expires_in;\n\t    var stropheConn = null;\n\t    if (conn.isOpening() && conn.context.stropheConn) {\n\t        stropheConn = conn.context.stropheConn;\n\t    } else if (conn.isOpened() && conn.context.stropheConn) {\n\t        // return;\n\t        stropheConn = new Strophe.Connection(conn.url, {\n\t            inactivity: conn.inactivity,\n\t            maxRetries: conn.maxRetries,\n\t            pollingTime: conn.pollingTime\n\t        });\n\t    } else {\n\t        stropheConn = new Strophe.Connection(conn.url, {\n\t            inactivity: conn.inactivity,\n\t            maxRetries: conn.maxRetries,\n\t            pollingTime: conn.pollingTime\n\t        });\n\t    }\n\t    var callback = function (status, msg) {\n\t        _loginCallback(status, msg, conn);\n\t    };\n\n\t    conn.context.stropheConn = stropheConn;\n\t    if (conn.route) {\n\t        stropheConn.connect(conn.context.jid, '$t$' + accessToken, callback, conn.wait, conn.hold, conn.route);\n\t    } else {\n\t        stropheConn.connect(conn.context.jid, '$t$' + accessToken, callback, conn.wait, conn.hold);\n\t    }\n\t};\n\n\tvar _parseMessageType = function (msginfo) {\n\t    var msgtype = 'normal';\n\t    var receiveinfo = msginfo.getElementsByTagName('received');\n\t    if (receiveinfo && receiveinfo.length > 0 && receiveinfo[0].namespaceURI === 'urn:xmpp:receipts') {\n\t        msgtype = 'received';\n\t    } else {\n\t        var inviteinfo = msginfo.getElementsByTagName('invite');\n\t        if (inviteinfo && inviteinfo.length > 0) {\n\t            msgtype = 'invite';\n\t        }\n\t    }\n\t    return msgtype;\n\t};\n\n\tvar _handleMessageQueue = function (conn) {\n\t    for (var i in _msgHash) {\n\t        if (_msgHash.hasOwnProperty(i)) {\n\t            _msgHash[i].send(conn);\n\t        }\n\t    }\n\t};\n\n\tvar _loginCallback = function (status, msg, conn) {\n\t    var conflict, error;\n\n\t    if (msg === 'conflict') {\n\t        conflict = true;\n\t    }\n\n\t    if (status == Strophe.Status.CONNFAIL) {\n\t        //client offline, ping/pong timeout, server quit, server offline\n\t        error = {\n\t            type: _code.WEBIM_CONNCTION_SERVER_CLOSE_ERROR,\n\t            msg: msg,\n\t            reconnect: true\n\t        };\n\n\t        conflict && (error.conflict = true);\n\t        conn.onError(error);\n\t    } else if (status == Strophe.Status.ATTACHED || status == Strophe.Status.CONNECTED) {\n\t        // client should limit the speed of sending ack messages  up to 5/s\n\t        conn.intervalId = setInterval(function () {\n\t            conn.handelSendQueue();\n\t        }, 200);\n\t        var handleMessage = function (msginfo) {\n\t            var type = _parseMessageType(msginfo);\n\n\t            if ('received' === type) {\n\t                conn.handleReceivedMessage(msginfo);\n\t                return true;\n\t            } else if ('invite' === type) {\n\t                conn.handleInviteMessage(msginfo);\n\t                return true;\n\t            } else {\n\t                conn.handleMessage(msginfo);\n\t                return true;\n\t            }\n\t        };\n\t        var handlePresence = function (msginfo) {\n\t            conn.handlePresence(msginfo);\n\t            return true;\n\t        };\n\t        var handlePing = function (msginfo) {\n\t            conn.handlePing(msginfo);\n\t            return true;\n\t        };\n\t        var handleIqRoster = function (msginfo) {\n\t            conn.handleIqRoster(msginfo);\n\t            return true;\n\t        };\n\t        var handleIqPrivacy = function (msginfo) {\n\t            conn.handleIqPrivacy(msginfo);\n\t            return true;\n\t        };\n\t        var handleIq = function (msginfo) {\n\t            conn.handleIq(msginfo);\n\t            return true;\n\t        };\n\n\t        conn.addHandler(handleMessage, null, 'message', null, null, null);\n\t        conn.addHandler(handlePresence, null, 'presence', null, null, null);\n\t        conn.addHandler(handlePing, 'urn:xmpp:ping', 'iq', 'get', null, null);\n\t        conn.addHandler(handleIqRoster, 'jabber:iq:roster', 'iq', 'set', null, null);\n\t        conn.addHandler(handleIqPrivacy, 'jabber:iq:privacy', 'iq', 'set', null, null);\n\t        conn.addHandler(handleIq, null, 'iq', null, null, null);\n\n\t        conn.context.status = _code.STATUS_OPENED;\n\n\t        var supportRecMessage = [\n\t            _code.WEBIM_MESSAGE_REC_TEXT,\n\t            _code.WEBIM_MESSAGE_REC_EMOJI];\n\n\t        if (_utils.isCanDownLoadFile) {\n\t            supportRecMessage.push(_code.WEBIM_MESSAGE_REC_PHOTO);\n\t            supportRecMessage.push(_code.WEBIM_MESSAGE_REC_AUDIO_FILE);\n\t        }\n\t        var supportSedMessage = [_code.WEBIM_MESSAGE_SED_TEXT];\n\t        if (_utils.isCanUploadFile) {\n\t            supportSedMessage.push(_code.WEBIM_MESSAGE_REC_PHOTO);\n\t            supportSedMessage.push(_code.WEBIM_MESSAGE_REC_AUDIO_FILE);\n\t        }\n\t        conn.notifyVersion();\n\t        conn.retry && _handleMessageQueue(conn);\n\t        conn.heartBeat();\n\t        conn.isAutoLogin && conn.setPresence();\n\t        conn.onOpened({\n\t            canReceive: supportRecMessage,\n\t            canSend: supportSedMessage,\n\t            accessToken: conn.context.accessToken\n\t        });\n\t    } else if (status == Strophe.Status.DISCONNECTING) {\n\t        if (conn.isOpened()) {\n\t            conn.stopHeartBeat();\n\t            conn.context.status = _code.STATUS_CLOSING;\n\n\t            error = {\n\t                type: _code.WEBIM_CONNCTION_SERVER_CLOSE_ERROR,\n\t                msg: msg,\n\t                reconnect: true\n\t            };\n\n\t            conflict && (error.conflict = true);\n\t            conn.onError(error);\n\t        }\n\t    } else if (status == Strophe.Status.DISCONNECTED) {\n\t        if (conn.isOpened()) {\n\t            if (Demo.conn.autoReconnectNumTotal < Demo.conn.autoReconnectNumMax) {\n\t                Demo.conn.reconnect();\n\t                return;\n\t            } else {\n\t                error = {\n\t                    type: _code.WEBIM_CONNCTION_DISCONNECTED\n\t                };\n\t                conn.onError(error);\n\t            }\n\t        }\n\t        conn.context.status = _code.STATUS_CLOSED;\n\t        conn.clear();\n\t        conn.onClosed();\n\t    } else if (status == Strophe.Status.AUTHFAIL) {\n\t        error = {\n\t            type: _code.WEBIM_CONNCTION_AUTH_ERROR\n\t        };\n\n\t        conflict && (error.conflict = true);\n\t        conn.onError(error);\n\t        conn.clear();\n\t    } else if (status == Strophe.Status.ERROR) {\n\t        conn.context.status = _code.STATUS_ERROR;\n\t        error = {\n\t            type: _code.WEBIM_CONNCTION_SERVER_ERROR\n\t        };\n\n\t        conflict && (error.conflict = true);\n\t        conn.onError(error);\n\t    }\n\t    conn.context.status_now = status;\n\t};\n\n\tvar _getJid = function (options, conn) {\n\t    var jid = options.toJid || '';\n\n\t    if (jid === '') {\n\t        var appKey = conn.context.appKey || '';\n\t        var toJid = appKey + '_' + options.to + '@' + conn.domain;\n\n\t        if (options.resource) {\n\t            toJid = toJid + '/' + options.resource;\n\t        }\n\t        jid = toJid;\n\t    }\n\t    return jid;\n\t};\n\n\tvar _getJidByName = function (name, conn) {\n\t    var options = {\n\t        to: name\n\t    };\n\t    return _getJid(options, conn);\n\t};\n\n\tvar _validCheck = function (options, conn) {\n\t    options = options || {};\n\n\t    if (options.user == '') {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR\n\t        });\n\t        return false;\n\t    }\n\n\t    var user = (options.user + '') || '';\n\t    var appKey = options.appKey || '';\n\t    var devInfos = appKey.split('#');\n\n\t    if (devInfos.length !== 2) {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\n\t        });\n\t        return false;\n\t    }\n\t    var orgName = devInfos[0];\n\t    var appName = devInfos[1];\n\n\t    if (!orgName) {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\n\t        });\n\t        return false;\n\t    }\n\t    if (!appName) {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\n\t        });\n\t        return false;\n\t    }\n\n\t    var jid = appKey + '_' + user.toLowerCase() + '@' + conn.domain,\n\t        resource = options.resource || 'webim';\n\n\t    if (conn.isMultiLoginSessions) {\n\t        resource += user + new Date().getTime() + Math.floor(Math.random().toFixed(6) * 1000000);\n\t    }\n\t    conn.context.jid = jid + '/' + resource;\n\t    /*jid: {appkey}_{username}@domain/resource*/\n\t    conn.context.userId = user;\n\t    conn.context.appKey = appKey;\n\t    conn.context.appName = appName;\n\t    conn.context.orgName = orgName;\n\n\t    return true;\n\t};\n\n\tvar _getXmppUrl = function (baseUrl, https) {\n\t    if (/^(ws|http)s?:\\/\\/?/.test(baseUrl)) {\n\t        return baseUrl;\n\t    }\n\n\t    var url = {\n\t        prefix: 'http',\n\t        base: '://' + baseUrl,\n\t        suffix: '/http-bind/'\n\t    };\n\n\t    if (https && _utils.isSupportWss) {\n\t        url.prefix = 'wss';\n\t        url.suffix = '/ws/';\n\t    } else {\n\t        if (https) {\n\t            url.prefix = 'https';\n\t        } else if (window.WebSocket) {\n\t            url.prefix = 'ws';\n\t            url.suffix = '/ws/';\n\t        }\n\t    }\n\n\t    return url.prefix + url.base + url.suffix;\n\t};\n\n\n\tvar _handlePageLimit = function () {\n\t    if (WebIM.config.isMultiLoginSessions && window.localStorage) {\n\t        var keyValue = 'empagecount' + pageLimitKey;\n\n\t        window.addEventListener('storage', function () {\n\t            window.localStorage.setItem(keyValue, Demo.user);\n\t        });\n\n\t        _clearPageSign();\n\t        window.localStorage.setItem(keyValue, Demo.user);\n\t    }\n\t};\n\n\tvar _clearPageSign = function () {\n\t    if (window.localStorage) {\n\t        try {\n\t            window.localStorage.clear();\n\t        } catch (e) {\n\t        }\n\t    }\n\t};\n\n\tvar _getPageCount = function () {\n\t    var sum = 0;\n\n\t    if (WebIM.config.isMultiLoginSessions && window.localStorage) {\n\t        for (var o in localStorage) {\n\t            if (/^empagecount/.test(o) && Demo.user == localStorage[o]) {\n\t                sum++;\n\t            }\n\t        }\n\t    }\n\t    console.log(sum);\n\t    return sum;\n\t};\n\n\t//class\n\tvar connection = function (options) {\n\t    if (!this instanceof connection) {\n\t        return new connection(options);\n\t    }\n\n\t    var options = options || {};\n\n\t    this.isMultiLoginSessions = options.isMultiLoginSessions || false;\n\t    this.wait = options.wait || 30;\n\t    this.retry = options.retry || false;\n\t    this.https = options.https || location.protocol === 'https:';\n\t    this.url = _getXmppUrl(options.url, this.https);\n\t    this.hold = options.hold || 1;\n\t    this.route = options.route || null;\n\t    this.domain = options.domain || 'hyphenate.io';\n\t    this.inactivity = options.inactivity || 30;\n\t    this.heartBeatWait = options.heartBeatWait || 4500;\n\t    this.maxRetries = options.maxRetries || 5;\n\t    this.isAutoLogin = options.isAutoLogin === false ? false : true;\n\t    this.pollingTime = options.pollingTime || 800;\n\t    this.stropheConn = false;\n\t    this.autoReconnectNumMax = options.autoReconnectNumMax || 0;\n\t    this.autoReconnectNumTotal = 0;\n\t    this.autoReconnectInterval = options.autoReconnectInterval || 0;\n\t    this.context = {status: _code.STATUS_INIT};\n\t    //todo 接收的事件，放到数组里的时候，加上g.isInBackground字段。每帧执行一个事件的时候，如果g.isInBackground=true,就pass\n\t    this.sendQueue = new Queue();  //接收到的事件队列\n\t    this.intervalId = null;\n\t};\n\n\tconnection.prototype.handelSendQueue = function () {\n\t    var options = this.sendQueue.pop();\n\t    if (options !== null) {\n\t        this.sendReceiptsMessage(options);\n\t    }\n\t};\n\tconnection.prototype.listen = function (options) {\n\t    options.url && (this.url = _getXmppUrl(options.url, this.https));\n\t    this.onOpened = options.onOpened || _utils.emptyfn;\n\t    this.onClosed = options.onClosed || _utils.emptyfn;\n\t    this.onTextMessage = options.onTextMessage || _utils.emptyfn;\n\t    this.onEmojiMessage = options.onEmojiMessage || _utils.emptyfn;\n\t    this.onPictureMessage = options.onPictureMessage || _utils.emptyfn;\n\t    this.onAudioMessage = options.onAudioMessage || _utils.emptyfn;\n\t    this.onVideoMessage = options.onVideoMessage || _utils.emptyfn;\n\t    this.onFileMessage = options.onFileMessage || _utils.emptyfn;\n\t    this.onLocationMessage = options.onLocationMessage || _utils.emptyfn;\n\t    this.onCmdMessage = options.onCmdMessage || _utils.emptyfn;\n\t    this.onPresence = options.onPresence || _utils.emptyfn;\n\t    this.onRoster = options.onRoster || _utils.emptyfn;\n\t    this.onError = options.onError || _utils.emptyfn;\n\t    this.onReceivedMessage = options.onReceivedMessage || _utils.emptyfn;\n\t    this.onInviteMessage = options.onInviteMessage || _utils.emptyfn;\n\t    this.onOffline = options.onOffline || _utils.emptyfn;\n\t    this.onOnline = options.onOnline || _utils.emptyfn;\n\t    this.onConfirmPop = options.onConfirmPop || _utils.emptyfn;\n\t    //for WindowSDK\n\t    this.onUpdateMyGroupList = options.onUpdateMyGroupList || _utils.emptyfn;\n\t    this.onUpdateMyRoster = options.onUpdateMyRoster || _utils.emptyfn;\n\t    //\n\t    this.onBlacklistUpdate = options.onBlacklistUpdate || _utils.emptyfn;\n\n\t    _listenNetwork(this.onOnline, this.onOffline);\n\t};\n\n\tconnection.prototype.heartBeat = function () {\n\t    var me = this;\n\t    //IE8: strophe auto switch from ws to BOSH, need heartbeat\n\t    var isNeed = !/^ws|wss/.test(me.url) || /mobile/.test(navigator.userAgent);\n\n\t    if (this.heartBeatID || !isNeed) {\n\t        return;\n\t    }\n\n\t    var options = {\n\t        toJid: this.domain,\n\t        type: 'normal'\n\t    };\n\t    this.heartBeatID = setInterval(function () {\n\t        me.ping(options);\n\t    }, this.heartBeatWait);\n\t};\n\n\tconnection.prototype.stopHeartBeat = function () {\n\t    if (typeof this.heartBeatID == \"number\") {\n\t        this.heartBeatID = clearInterval(this.heartBeatID);\n\t    }\n\t};\n\n\tconnection.prototype.sendReceiptsMessage = function (options) {\n\t    var dom = $msg({\n\t        from: this.context.jid || '',\n\t        to: this.domain,\n\t        id: options.id || ''\n\t    }).c('received', {\n\t        xmlns: 'urn:xmpp:receipts',\n\t        id: options.id || ''\n\t    });\n\t    this.sendCommand(dom.tree());\n\t};\n\n\tconnection.prototype.cacheReceiptsMessage = function (options) {\n\t    this.sendQueue.push(options);\n\t};\n\n\tconnection.prototype.open = function (options) {\n\n\t    _handlePageLimit();\n\n\t    setTimeout(function () {\n\t        var total = _getPageCount();\n\t        if (total > PAGELIMIT) {\n\t            Demo.api.NotifyError(Demo.lan.nomorethan + PAGELIMIT + Demo.lan.reslogatonetime);\n\t            setTimeout(function () {\n\t                location.reload();\n\t            }, 500);\n\t        }\n\t    }, 50);\n\n\t    var pass = _validCheck(options, this);\n\n\t    if (!pass) {\n\t        return;\n\t    }\n\n\t    var conn = this;\n\n\t    if (conn.isOpening() || conn.isOpened()) {\n\t        return;\n\t    }\n\n\t    if (options.accessToken) {\n\t        options.access_token = options.accessToken;\n\t        _login(options, conn);\n\t    } else {\n\t        var apiUrl = options.apiUrl;\n\t        var userId = this.context.userId;\n\t        var pwd = options.pwd || '';\n\t        var appName = this.context.appName;\n\t        var orgName = this.context.orgName;\n\n\t        var suc = function (data, xhr) {\n\t            conn.context.status = _code.STATUS_DOLOGIN_IM;\n\t            conn.context.restTokenData = data;\n\t            _login(data, conn);\n\t        };\n\t        var error = function (res, xhr, msg) {\n\t            conn.clear();\n\n\t            if (res.error && res.error_description) {\n\t                conn.onError({\n\t                    type: _code.WEBIM_CONNCTION_OPEN_USERGRID_ERROR,\n\t                    data: res,\n\t                    xhr: xhr\n\t                });\n\t            } else {\n\t                conn.onError({\n\t                    type: _code.WEBIM_CONNCTION_OPEN_ERROR,\n\t                    data: res,\n\t                    xhr: xhr\n\t                });\n\t            }\n\t        };\n\n\t        this.context.status = _code.STATUS_DOLOGIN_USERGRID;\n\n\t        var loginJson = {\n\t            grant_type: 'password',\n\t            username: userId,\n\t            password: pwd,\n\t            timestamp: +new Date()\n\t        };\n\t        var loginfo = _utils.stringify(loginJson);\n\n\t        var options = {\n\t            url: apiUrl + '/' + orgName + '/' + appName + '/token',\n\t            dataType: 'json',\n\t            data: loginfo,\n\t            success: suc || _utils.emptyfn,\n\t            error: error || _utils.emptyfn\n\t        };\n\t        _utils.ajax(options);\n\t    }\n\n\n\t};\n\n\t// attach to xmpp server for BOSH\n\tconnection.prototype.attach = function (options) {\n\t    var pass = _validCheck(options, this);\n\n\t    if (!pass) {\n\t        return;\n\t    }\n\n\t    options = options || {};\n\n\t    var accessToken = options.accessToken || '';\n\t    if (accessToken == '') {\n\t        this.onError({\n\t            type: _code.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR\n\t        });\n\t        return;\n\t    }\n\n\t    var sid = options.sid || '';\n\t    if (sid === '') {\n\t        this.onError({\n\t            type: _code.WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR\n\t        });\n\t        return;\n\t    }\n\n\t    var rid = options.rid || '';\n\t    if (rid === '') {\n\t        this.onError({\n\t            type: _code.WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR\n\t        });\n\t        return;\n\t    }\n\n\t    var stropheConn = new Strophe.Connection(this.url, {\n\t        inactivity: this.inactivity,\n\t        maxRetries: this.maxRetries,\n\t        pollingTime: this.pollingTime,\n\t        heartBeatWait: this.heartBeatWait\n\t    });\n\n\t    this.context.accessToken = accessToken;\n\t    this.context.stropheConn = stropheConn;\n\t    this.context.status = _code.STATUS_DOLOGIN_IM;\n\n\t    var conn = this;\n\t    var callback = function (status, msg) {\n\t        _loginCallback(status, msg, conn);\n\t    };\n\n\t    var jid = this.context.jid;\n\t    var wait = this.wait;\n\t    var hold = this.hold;\n\t    var wind = this.wind || 5;\n\t    stropheConn.attach(jid, sid, rid, callback, wait, hold, wind);\n\t};\n\n\tconnection.prototype.close = function (reason) {\n\t    this.stopHeartBeat();\n\n\t    var status = this.context.status;\n\t    if (status == _code.STATUS_INIT) {\n\t        return;\n\t    }\n\n\t    if (this.isClosed() || this.isClosing()) {\n\t        return;\n\t    }\n\n\t    this.context.status = _code.STATUS_CLOSING;\n\t    this.context.stropheConn.disconnect(reason);\n\t};\n\n\tconnection.prototype.addHandler = function (handler, ns, name, type, id, from, options) {\n\t    this.context.stropheConn.addHandler(handler, ns, name, type, id, from, options);\n\t};\n\n\tconnection.prototype.notifyVersion = function (suc, fail) {\n\t    var jid = _getJid({}, this);\n\t    var dom = $iq({\n\t        from: this.context.jid || ''\n\t        , to: this.domain\n\t        , type: 'result'\n\t    })\n\t        .c('query', {xmlns: 'jabber:iq:version'})\n\t        .c('name')\n\t        .t('hyphenate')\n\t        .up()\n\t        .c('version')\n\t        .t(_version)\n\t        .up()\n\t        .c('os')\n\t        .t('webim');\n\n\t    var suc = suc || _utils.emptyfn;\n\t    var error = fail || this.onError;\n\t    var failFn = function (ele) {\n\t        error({\n\t            type: _code.WEBIM_CONNCTION_NOTIFYVERSION_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    this.context.stropheConn.sendIQ(dom.tree(), suc, failFn);\n\t    return;\n\t};\n\n\t// handle all types of presence message\n\tconnection.prototype.handlePresence = function (msginfo) {\n\t    if (this.isClosed()) {\n\t        return;\n\t    }\n\t    var from = msginfo.getAttribute('from') || '';\n\t    var to = msginfo.getAttribute('to') || '';\n\t    var type = msginfo.getAttribute('type') || '';\n\t    var presence_type = msginfo.getAttribute('presence_type') || '';\n\t    var fromUser = _parseNameFromJidFn(from);\n\t    var toUser = _parseNameFromJidFn(to);\n\t    var info = {\n\t        from: fromUser,\n\t        to: toUser,\n\t        fromJid: from,\n\t        toJid: to,\n\t        type: type,\n\t        chatroom: msginfo.getElementsByTagName('roomtype').length ? true : false\n\t    };\n\n\t    var showTags = msginfo.getElementsByTagName('show');\n\t    if (showTags && showTags.length > 0) {\n\t        var showTag = showTags[0];\n\t        info.show = Strophe.getText(showTag);\n\t    }\n\t    var statusTags = msginfo.getElementsByTagName('status');\n\t    if (statusTags && statusTags.length > 0) {\n\t        var statusTag = statusTags[0];\n\t        info.status = Strophe.getText(statusTag);\n\t        info.code = statusTag.getAttribute('code');\n\t    }\n\n\t    var priorityTags = msginfo.getElementsByTagName('priority');\n\t    if (priorityTags && priorityTags.length > 0) {\n\t        var priorityTag = priorityTags[0];\n\t        info.priority = Strophe.getText(priorityTag);\n\t    }\n\n\t    var error = msginfo.getElementsByTagName('error');\n\t    if (error && error.length > 0) {\n\t        var error = error[0];\n\t        info.error = {\n\t            code: error.getAttribute('code')\n\t        };\n\t    }\n\n\t    var destroy = msginfo.getElementsByTagName('destroy');\n\t    if (destroy && destroy.length > 0) {\n\t        var destroy = destroy[0];\n\t        info.destroy = true;\n\n\t        var reason = destroy.getElementsByTagName('reason');\n\t        if (reason && reason.length > 0) {\n\t            info.reason = Strophe.getText(reason[0]);\n\t        }\n\t    }\n\n\t    // <item affiliation=\"member\" jid=\"hyphenatedemo#chatdemoui_lwz2@hyphenate.io\" role=\"none\">\n\t    //     <actor nick=\"liuwz\"/>\n\t    // </item>\n\t    // one record once a time\n\t    // kick info: actor / member\n\t    var members = msginfo.getElementsByTagName('item');\n\t    if (members && members.length > 0) {\n\t        var member = members[0];\n\t        var role = member.getAttribute('role');\n\t        var jid = member.getAttribute('jid');\n\t        // dismissed by group\n\t        if (role == 'none' && jid) {\n\t            var kickedMember = _parseNameFromJidFn(jid);\n\t            var actor = member.getElementsByTagName('actor')[0];\n\t            var actorNick = actor.getAttribute('nick');\n\t            info.actor = actorNick;\n\t            info.kicked = kickedMember;\n\t        }\n\t        // Service Acknowledges Room Creation `createGroupACK`\n\t        if (role == 'moderator' && info.code == '201') {\n\t            // info.type = 'createGroupACK';\n\t            info.type = 'joinPublicGroupSuccess';\n\t        }\n\t    }\n\n\t    // from message : apply to join group\n\t    // <message from=\"hyphenatedemo#chatdemoui_lwz4@hyphenate.io/mobile\" id=\"259151681747419640\" to=\"hyphenatedemo#chatdemoui_liuwz@hyphenate.io\" xmlns=\"jabber:client\">\n\t    //     <x xmlns=\"http://jabber.org/protocol/muc#user\">\n\t    //         <apply from=\"hyphenatedemo#chatdemoui_lwz4@hyphenate.io\" to=\"hyphenatedemo#chatdemoui_1477733677560@conference.hyphenate.io\" toNick=\"lwzlwzlwz\">\n\t    //             <reason>qwe</reason>\n\t    //         </apply>\n\t    //     </x>\n\t    // </message>\n\t    var apply = msginfo.getElementsByTagName('apply');\n\t    if (apply && apply.length > 0) {\n\t        apply = apply[0];\n\t        var toNick = apply.getAttribute('toNick');\n\t        var groupJid = apply.getAttribute('to');\n\t        var userJid = apply.getAttribute('from');\n\t        var groupName = _parseNameFromJidFn(groupJid);\n\t        var userName = _parseNameFromJidFn(userJid);\n\t        info.toNick = toNick;\n\t        info.groupName = groupName;\n\t        info.type = 'joinGroupNotifications';\n\t        var reason = apply.getElementsByTagName('reason');\n\t        if (reason && reason.length > 0) {\n\t            info.reason = Strophe.getText(reason[0]);\n\t        }\n\t    }\n\n\n\t    if (info.chatroom) {\n\t        // diff the\n\t        info.presence_type = presence_type;\n\t        info.original_type = info.type;\n\t        var reflectUser = from.slice(from.lastIndexOf('/') + 1);\n\n\t        if (reflectUser === this.context.userId) {\n\t            if (info.type === '' && !info.code) {\n\t                info.type = 'joinChatRoomSuccess';\n\t            } else if (presence_type === 'unavailable' || info.type === 'unavailable') {\n\t                if (!info.status) {// logout successfully.\n\t                    info.type = 'leaveChatRoom';\n\t                } else if (info.code == 110) {// logout or dismissied by admin.\n\t                    info.type = 'leaveChatRoom';\n\t                } else if (info.error && info.error.code == 406) {// The chat room is full.\n\t                    info.type = 'reachChatRoomCapacity';\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        info.presence_type = presence_type;\n\t        info.original_type = type;\n\n\t        if (info.type) {\n\n\t        } else if (type == \"\" && !info.status && !info.error) {\n\t            info.type = 'joinPublicGroupSuccess';\n\t        } else if (presence_type === 'unavailable' || type === 'unavailable') {// There is no roomtype when a chat room is deleted.\n\t            if (info.destroy) {// Group or Chat room Deleted.\n\t                info.type = 'deleteGroupChat';\n\t            } else if (info.code == 307 || info.code == 321) {// Dismissed by group.\n\t                info.type = 'leaveGroup';\n\t            }\n\t        }\n\t    }\n\t    this.onPresence(info, msginfo);\n\t};\n\n\tconnection.prototype.handlePing = function (e) {\n\t    if (this.isClosed()) {\n\t        return;\n\t    }\n\t    var id = e.getAttribute('id');\n\t    var from = e.getAttribute('from');\n\t    var to = e.getAttribute('to');\n\t    var dom = $iq({\n\t        from: to\n\t        , to: from\n\t        , id: id\n\t        , type: 'result'\n\t    });\n\t    this.sendCommand(dom.tree());\n\t};\n\n\tconnection.prototype.handleIq = function (iq) {\n\t    return true;\n\t};\n\n\tconnection.prototype.handleIqPrivacy = function (msginfo) {\n\t    var list = msginfo.getElementsByTagName('list');\n\t    if (list.length == 0) {\n\t        return;\n\t    }\n\t    this.getBlacklist();\n\t};\n\n\tconnection.prototype.handleIqRoster = function (e) {\n\t    var id = e.getAttribute('id');\n\t    var from = e.getAttribute('from') || '';\n\t    var name = _parseNameFromJidFn(from);\n\t    var curJid = this.context.jid;\n\t    var curUser = this.context.userId;\n\n\t    var iqresult = $iq({type: 'result', id: id, from: curJid});\n\t    this.sendCommand(iqresult.tree());\n\n\t    var msgBodies = e.getElementsByTagName('query');\n\t    if (msgBodies && msgBodies.length > 0) {\n\t        var queryTag = msgBodies[0];\n\t        var rouster = _parseFriend(queryTag, this, from);\n\t        this.onRoster(rouster);\n\t    }\n\t    return true;\n\t};\n\n\tconnection.prototype.handleMessage = function (msginfo) {\n\t    if (this.isClosed()) {\n\t        return;\n\t    }\n\n\t    var id = msginfo.getAttribute('id') || '';\n\n\t    // cache ack into sendQueue first , handelSendQueue will do the send thing with the speed of  5/s\n\t    this.cacheReceiptsMessage({\n\t        id: id\n\t    });\n\t    var parseMsgData = _parseResponseMessage(msginfo);\n\t    if (parseMsgData.errorMsg) {\n\t        this.handlePresence(msginfo);\n\t        return;\n\t    }\n\t    // send error\n\t    var error = msginfo.getElementsByTagName('error');\n\t    var errorCode = '';\n\t    var errorText = '';\n\t    var errorBool = false;\n\t    if (error.length > 0) {\n\t        errorBool = true;\n\t        errorCode = error[0].getAttribute('code');\n\t        var textDOM = error[0].getElementsByTagName('text');\n\t        errorText = textDOM[0].textContent || textDOM[0].text;\n\t        log('handle error', errorCode, errorText);\n\t    }\n\n\t    var msgDatas = parseMsgData.data;\n\t    for (var i in msgDatas) {\n\t        if (!msgDatas.hasOwnProperty(i)) {\n\t            continue;\n\t        }\n\t        var msg = msgDatas[i];\n\t        if (!msg.from || !msg.to) {\n\t            continue;\n\t        }\n\n\t        var from = (msg.from + '').toLowerCase();\n\t        var too = (msg.to + '').toLowerCase();\n\t        var extmsg = msg.ext || {};\n\t        var chattype = '';\n\t        var typeEl = msginfo.getElementsByTagName('roomtype');\n\t        if (typeEl.length) {\n\t            chattype = typeEl[0].getAttribute('type') || 'chat';\n\t        } else {\n\t            chattype = msginfo.getAttribute('type') || 'chat';\n\t        }\n\n\t        var msgBodies = msg.bodies;\n\t        if (!msgBodies || msgBodies.length == 0) {\n\t            continue;\n\t        }\n\t        var msgBody = msg.bodies[0];\n\t        var type = msgBody.type;\n\n\t        try {\n\t            switch (type) {\n\t                case 'txt':\n\t                    var receiveMsg = msgBody.msg;\n\t                    var emojibody = _utils.parseTextMessage(receiveMsg, WebIM.Emoji);\n\t                    if (emojibody.isemoji) {\n\t                        var msg = {\n\t                            id: id\n\t                            , type: chattype\n\t                            , from: from\n\t                            , to: too\n\t                            , delay: parseMsgData.delayTimeStamp\n\t                            , data: emojibody.body\n\t                            , ext: extmsg\n\t                        };\n\t                        !msg.delay && delete msg.delay;\n\t                        msg.error = errorBool;\n\t                        msg.errorText = errorText;\n\t                        msg.errorCode = errorCode;\n\t                        this.onEmojiMessage(msg);\n\t                    } else {\n\t                        var msg = {\n\t                            id: id\n\t                            , type: chattype\n\t                            , from: from\n\t                            , to: too\n\t                            , delay: parseMsgData.delayTimeStamp\n\t                            , data: receiveMsg\n\t                            , ext: extmsg\n\t                        };\n\t                        !msg.delay && delete msg.delay;\n\t                        msg.error = errorBool;\n\t                        msg.errorText = errorText;\n\t                        msg.errorCode = errorCode;\n\t                        this.onTextMessage(msg);\n\t                    }\n\t                    break;\n\t                case 'img':\n\t                    var rwidth = 0;\n\t                    var rheight = 0;\n\t                    if (msgBody.size) {\n\t                        rwidth = msgBody.size.width;\n\t                        rheight = msgBody.size.height;\n\t                    }\n\t                    var msg = {\n\t                        id: id\n\t                        , type: chattype\n\t                        , from: from\n\t                        , to: too\n\t                        , url: msgBody.url\n\t                        , secret: msgBody.secret\n\t                        , filename: msgBody.filename\n\t                        , thumb: msgBody.thumb\n\t                        , thumb_secret: msgBody.thumb_secret\n\t                        , file_length: msgBody.file_length || ''\n\t                        , width: rwidth\n\t                        , height: rheight\n\t                        , filetype: msgBody.filetype || ''\n\t                        , accessToken: this.context.accessToken || ''\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onPictureMessage(msg);\n\t                    break;\n\t                case 'audio':\n\t                    var msg = {\n\t                        id: id\n\t                        , type: chattype\n\t                        , from: from\n\t                        , to: too\n\t                        , url: msgBody.url\n\t                        , secret: msgBody.secret\n\t                        , filename: msgBody.filename\n\t                        , length: msgBody.length || ''\n\t                        , file_length: msgBody.file_length || ''\n\t                        , filetype: msgBody.filetype || ''\n\t                        , accessToken: this.context.accessToken || ''\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onAudioMessage(msg);\n\t                    break;\n\t                case 'file':\n\t                    var msg = {\n\t                        id: id\n\t                        , type: chattype\n\t                        , from: from\n\t                        , to: too\n\t                        , url: msgBody.url\n\t                        , secret: msgBody.secret\n\t                        , filename: msgBody.filename\n\t                        , file_length: msgBody.file_length\n\t                        , accessToken: this.context.accessToken || ''\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onFileMessage(msg);\n\t                    break;\n\t                case 'loc':\n\t                    var msg = {\n\t                        id: id\n\t                        , type: chattype\n\t                        , from: from\n\t                        , to: too\n\t                        , addr: msgBody.addr\n\t                        , lat: msgBody.lat\n\t                        , lng: msgBody.lng\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onLocationMessage(msg);\n\t                    break;\n\t                case 'video':\n\t                    var msg = {\n\t                        id: id\n\t                        , type: chattype\n\t                        , from: from\n\t                        , to: too\n\t                        , url: msgBody.url\n\t                        , secret: msgBody.secret\n\t                        , filename: msgBody.filename\n\t                        , file_length: msgBody.file_length\n\t                        , accessToken: this.context.accessToken || ''\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onVideoMessage(msg);\n\t                    break;\n\t                case 'cmd':\n\t                    var msg = {\n\t                        id: id\n\t                        , from: from\n\t                        , to: too\n\t                        , action: msgBody.action\n\t                        , ext: extmsg\n\t                        , delay: parseMsgData.delayTimeStamp\n\t                    };\n\t                    !msg.delay && delete msg.delay;\n\t                    msg.error = errorBool;\n\t                    msg.errorText = errorText;\n\t                    msg.errorCode = errorCode;\n\t                    this.onCmdMessage(msg);\n\t                    break;\n\t            }\n\t            ;\n\t        } catch (e) {\n\t            this.onError({\n\t                type: _code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR\n\t                , data: e\n\t            });\n\t        }\n\t    }\n\t};\n\n\tconnection.prototype.handleReceivedMessage = function (message) {\n\t    try {\n\t        this.onReceivedMessage(message);\n\t    } catch (e) {\n\t        this.onError({\n\t            type: _code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR\n\t            , data: e\n\t        });\n\t    }\n\n\t    var rcv = message.getElementsByTagName('received'),\n\t        id,\n\t        mid;\n\n\t    if (rcv.length > 0) {\n\t        if (rcv[0].childNodes && rcv[0].childNodes.length > 0) {\n\t            id = rcv[0].childNodes[0].nodeValue;\n\t        } else {\n\t            id = rcv[0].innerHTML || rcv[0].innerText;\n\t        }\n\t        mid = rcv[0].getAttribute('mid');\n\t    }\n\n\t    if (_msgHash[id]) {\n\t        try {\n\t            _msgHash[id].msg.success instanceof Function && _msgHash[id].msg.success(id, mid);\n\t        } catch (e) {\n\t            this.onError({\n\t                type: _code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR\n\t                , data: e\n\t            });\n\t        }\n\t        delete _msgHash[id];\n\t    }\n\t};\n\n\tconnection.prototype.handleInviteMessage = function (message) {\n\t    var form = null;\n\t    var invitemsg = message.getElementsByTagName('invite');\n\t    var reasonDom = message.getElementsByTagName('reason')[0];\n\t    var reasonMsg = reasonDom.textContent;\n\t    var id = message.getAttribute('id') || '';\n\t    this.sendReceiptsMessage({\n\t        id: id\n\t    });\n\n\t    if (invitemsg && invitemsg.length > 0) {\n\t        var fromJid = invitemsg[0].getAttribute('from');\n\t        form = _parseNameFromJidFn(fromJid);\n\t    }\n\t    var xmsg = message.getElementsByTagName('x');\n\t    var roomid = null;\n\t    if (xmsg && xmsg.length > 0) {\n\t        for (var i = 0; i < xmsg.length; i++) {\n\t            if ('jabber:x:conference' === xmsg[i].namespaceURI) {\n\t                var roomjid = xmsg[i].getAttribute('jid');\n\t                roomid = _parseNameFromJidFn(roomjid);\n\t            }\n\t        }\n\t    }\n\t    this.onInviteMessage({\n\t        type: 'invite',\n\t        from: form,\n\t        roomid: roomid,\n\t        reason: reasonMsg\n\t    });\n\t};\n\n\tconnection.prototype.sendCommand = function (dom, id) {\n\t    if (this.isOpened()) {\n\t        this.context.stropheConn.send(dom);\n\t    } else {\n\t        this.onError({\n\t            type: _code.WEBIM_CONNCTION_DISCONNECTED,\n\t            reconnect: true\n\t        });\n\t    }\n\t};\n\n\tconnection.prototype.getUniqueId = function (prefix) {\n\t    var cdate = new Date();\n\t    var offdate = new Date(2010, 1, 1);\n\t    var offset = cdate.getTime() - offdate.getTime();\n\t    var hexd = parseInt(offset).toString(16);\n\n\t    if (typeof prefix === 'string' || typeof prefix === 'number') {\n\t        return prefix + '_' + hexd;\n\t    } else {\n\t        return 'WEBIM_' + hexd;\n\t    }\n\t};\n\n\tconnection.prototype.send = function (message) {\n\t    if (WebIM.config.isWindowSDK) {\n\t        WebIM.doQuery('{\"type\":\"sendMessage\",\"to\":\"' + message.to + '\",\"message_type\":\"' + message.type + '\",\"msg\":\"' + encodeURI(message.msg) + '\",\"chatType\":\"' + message.chatType + '\"}',\n\t            function (response) {\n\t            },\n\t            function (code, msg) {\n\t                Demo.api.NotifyError('send:' + code + \" - \" + msg);\n\t            });\n\t    } else {\n\t        if (Object.prototype.toString.call(message) === '[object Object]') {\n\t            var appKey = this.context.appKey || '';\n\t            var toJid = appKey + '_' + message.to + '@' + this.domain;\n\n\t            if (message.group) {\n\t                toJid = appKey + '_' + message.to + '@conference.' + this.domain;\n\t            }\n\t            if (message.resource) {\n\t                toJid = toJid + '/' + message.resource;\n\t            }\n\n\t            message.toJid = toJid;\n\t            message.id = message.id || this.getUniqueId();\n\t            _msgHash[message.id] = new _message(message);\n\t            _msgHash[message.id].send(this);\n\t        } else if (typeof message === 'string') {\n\t            _msgHash[message] && _msgHash[message].send(this);\n\t        }\n\t    }\n\t};\n\n\tconnection.prototype.addRoster = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var name = options.name || '';\n\t    var groups = options.groups || '';\n\n\t    var iq = $iq({type: 'set'});\n\t    iq.c('query', {xmlns: 'jabber:iq:roster'});\n\t    iq.c('item', {jid: jid, name: name});\n\n\t    if (groups) {\n\t        for (var i = 0; i < groups.length; i++) {\n\t            iq.c('group').t(groups[i]).up();\n\t        }\n\t    }\n\t    var suc = options.success || _utils.emptyfn;\n\t    var error = options.error || _utils.emptyfn;\n\t    this.context.stropheConn.sendIQ(iq.tree(), suc, error);\n\t};\n\n\tconnection.prototype.removeRoster = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var iq = $iq({type: 'set'}).c('query', {xmlns: 'jabber:iq:roster'}).c('item', {\n\t        jid: jid,\n\t        subscription: 'remove'\n\t    });\n\n\t    var suc = options.success || _utils.emptyfn;\n\t    var error = options.error || _utils.emptyfn;\n\t    this.context.stropheConn.sendIQ(iq, suc, error);\n\t};\n\n\tconnection.prototype.getRoster = function (options) {\n\t    var conn = this;\n\t    var dom = $iq({\n\t        type: 'get'\n\t    }).c('query', {xmlns: 'jabber:iq:roster'});\n\n\t    var options = options || {};\n\t    var suc = options.success || this.onRoster;\n\t    var completeFn = function (ele) {\n\t        var rouster = [];\n\t        var msgBodies = ele.getElementsByTagName('query');\n\t        if (msgBodies && msgBodies.length > 0) {\n\t            var queryTag = msgBodies[0];\n\t            rouster = _parseFriend(queryTag);\n\t        }\n\t        suc(rouster, ele);\n\t    };\n\t    var error = options.error || this.onError;\n\t    var failFn = function (ele) {\n\t        error({\n\t            type: _code.WEBIM_CONNCTION_GETROSTER_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    if (this.isOpened()) {\n\t        this.context.stropheConn.sendIQ(dom.tree(), completeFn, failFn);\n\t    } else {\n\t        error({\n\t            type: _code.WEBIM_CONNCTION_DISCONNECTED\n\t        });\n\t    }\n\t};\n\n\tconnection.prototype.subscribe = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var pres = $pres({to: jid, type: 'subscribe'});\n\t    if (options.message) {\n\t        pres.c('status').t(options.message).up();\n\t    }\n\t    if (options.nick) {\n\t        pres.c('nick', {'xmlns': 'http://jabber.org/protocol/nick'}).t(options.nick);\n\t    }\n\t    this.sendCommand(pres.tree());\n\t};\n\n\tconnection.prototype.subscribed = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var pres = $pres({to: jid, type: 'subscribed'});\n\n\t    if (options.message) {\n\t        pres.c('status').t(options.message).up();\n\t    }\n\t    this.sendCommand(pres.tree());\n\t};\n\n\tconnection.prototype.unsubscribe = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var pres = $pres({to: jid, type: 'unsubscribe'});\n\n\t    if (options.message) {\n\t        pres.c('status').t(options.message);\n\t    }\n\t    this.sendCommand(pres.tree());\n\t};\n\n\tconnection.prototype.unsubscribed = function (options) {\n\t    var jid = _getJid(options, this);\n\t    var pres = $pres({to: jid, type: 'unsubscribed'});\n\n\t    if (options.message) {\n\t        pres.c('status').t(options.message).up();\n\t    }\n\t    this.sendCommand(pres.tree());\n\t};\n\n\tconnection.prototype.createRoom = function (options) {\n\t    var suc = options.success || _utils.emptyfn;\n\t    var err = options.error || _utils.emptyfn;\n\t    var roomiq;\n\n\t    roomiq = $iq({\n\t        to: options.roomName,\n\t        type: 'set'\n\t    })\n\t        .c('query', {xmlns: Strophe.NS.MUC_OWNER})\n\t        .c('x', {xmlns: 'jabber:x:data', type: 'submit'});\n\n\t    return this.context.stropheConn.sendIQ(roomiq.tree(), suc, err);\n\t};\n\n\tconnection.prototype.joinPublicGroup = function (options) {\n\t    var roomJid = this.context.appKey + '_' + options.roomId + '@conference.' + this.domain;\n\t    var room_nick = roomJid + '/' + this.context.userId;\n\t    var suc = options.success || _utils.emptyfn;\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_JOINROOM_ERROR,\n\t            data: ele\n\t        });\n\t    };\n\t    var iq = $pres({\n\t        from: this.context.jid,\n\t        to: room_nick\n\t    })\n\t        .c('x', {xmlns: Strophe.NS.MUC});\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), suc, errorFn);\n\t};\n\n\tconnection.prototype.listRooms = function (options) {\n\t    var iq = $iq({\n\t        to: options.server || 'conference.' + this.domain,\n\t        from: this.context.jid,\n\t        type: 'get'\n\t    })\n\t        .c('query', {xmlns: Strophe.NS.DISCO_ITEMS});\n\n\t    var suc = options.success || _utils.emptyfn;\n\t    var error = options.error || this.onError;\n\t    var completeFn = function (result) {\n\t        var rooms = [];\n\t        rooms = _parseRoom(result);\n\t        try {\n\t            suc(rooms);\n\t        } catch (e) {\n\t            error({\n\t                type: _code.WEBIM_CONNCTION_GETROOM_ERROR,\n\t                data: e\n\t            });\n\t        }\n\t    };\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_GETROOM_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    this.context.stropheConn.sendIQ(iq.tree(), completeFn, errorFn);\n\t};\n\n\tconnection.prototype.queryRoomMember = function (options) {\n\t    var domain = this.domain;\n\t    var members = [];\n\t    var iq = $iq({\n\t        to: this.context.appKey + '_' + options.roomId + '@conference.' + this.domain\n\t        , type: 'get'\n\t    })\n\t        .c('query', {xmlns: Strophe.NS.MUC + '#admin'})\n\t        .c('item', {affiliation: 'member'});\n\n\t    var suc = options.success || _utils.emptyfn;\n\t    var completeFn = function (result) {\n\t        var items = result.getElementsByTagName('item');\n\n\t        if (items) {\n\t            for (var i = 0; i < items.length; i++) {\n\t                var item = items[i];\n\t                var mem = {\n\t                    jid: item.getAttribute('jid')\n\t                    , affiliation: 'member'\n\t                };\n\t                members.push(mem);\n\t            }\n\t        }\n\t        suc(members);\n\t    };\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_GETROOMMEMBER_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    this.context.stropheConn.sendIQ(iq.tree(), completeFn, errorFn);\n\t};\n\n\tconnection.prototype.queryRoomInfo = function (options) {\n\t    var domain = this.domain;\n\t    var iq = $iq({\n\t        to: this.context.appKey + '_' + options.roomId + '@conference.' + domain,\n\t        type: 'get'\n\t    }).c('query', {xmlns: Strophe.NS.DISCO_INFO});\n\n\t    var suc = options.success || _utils.emptyfn;\n\t    var members = [];\n\n\t    var completeFn = function (result) {\n\t        var settings = '';\n\t        var features = result.getElementsByTagName('feature');\n\t        if (features) {\n\t            settings = features[1].getAttribute('var') + '|' + features[3].getAttribute('var') + '|' + features[4].getAttribute('var');\n\t        }\n\t        switch (settings) {\n\t            case 'muc_public|muc_membersonly|muc_notallowinvites':\n\t                settings = 'PUBLIC_JOIN_APPROVAL';\n\t                break;\n\t            case 'muc_public|muc_open|muc_notallowinvites':\n\t                settings = 'PUBLIC_JOIN_OPEN';\n\t                break;\n\t            case 'muc_hidden|muc_membersonly|muc_allowinvites':\n\t                settings = 'PRIVATE_MEMBER_INVITE';\n\t                break;\n\t            case 'muc_hidden|muc_membersonly|muc_notallowinvites':\n\t                settings = 'PRIVATE_OWNER_INVITE';\n\t                break;\n\t        }\n\t        var owner = '';\n\t        var fields = result.getElementsByTagName('field');\n\t        var fieldValues = {};\n\t        if (fields) {\n\t            for (var i = 0; i < fields.length; i++) {\n\t                var field = fields[i];\n\t                var fieldVar = field.getAttribute('var');\n\t                var fieldSimplify = fieldVar.split('_')[1];\n\t                switch (fieldVar) {\n\t                    case 'muc#roominfo_occupants':\n\t                    case 'muc#roominfo_maxusers':\n\t                    case 'muc#roominfo_affiliations':\n\t                    case 'muc#roominfo_description':\n\t                        fieldValues[fieldSimplify] = (field.textContent || field.text || '');\n\t                        break;\n\t                    case 'muc#roominfo_owner':\n\t                        var mem = {\n\t                            jid: (field.textContent || field.text) + '@' + domain\n\t                            , affiliation: 'owner'\n\t                        };\n\t                        members.push(mem);\n\t                        fieldValues[fieldSimplify] = (field.textContent || field.text);\n\t                        break;\n\t                }\n\n\t                // if (field.getAttribute('label') === 'owner') {\n\t                //     var mem = {\n\t                //         jid: (field.textContent || field.text) + '@' + domain\n\t                //         , affiliation: 'owner'\n\t                //     };\n\t                //     members.push(mem);\n\t                //     break;\n\t                // }\n\t            }\n\t            fieldValues['name'] = (result.getElementsByTagName('identity')[0]).getAttribute('name');\n\t        }\n\t        log(settings, members, fieldValues);\n\t        suc(settings, members, fieldValues);\n\t    };\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_GETROOMINFO_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    this.context.stropheConn.sendIQ(iq.tree(), completeFn, errorFn);\n\t};\n\n\tconnection.prototype.queryRoomOccupants = function (options) {\n\t    var suc = options.success || _utils.emptyfn;\n\t    var completeFn = function (result) {\n\t        var occupants = [];\n\t        occupants = _parseRoomOccupants(result);\n\t        suc(occupants);\n\t    }\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    var attrs = {\n\t        xmlns: Strophe.NS.DISCO_ITEMS\n\t    };\n\t    var info = $iq({\n\t        from: this.context.jid\n\t        , to: this.context.appKey + '_' + options.roomId + '@conference.' + this.domain\n\t        , type: 'get'\n\t    }).c('query', attrs);\n\t    this.context.stropheConn.sendIQ(info.tree(), completeFn, errorFn);\n\t};\n\n\tconnection.prototype.setUserSig = function (desc) {\n\t    var dom = $pres({xmlns: 'jabber:client'});\n\t    desc = desc || '';\n\t    dom.c('status').t(desc);\n\t    this.sendCommand(dom.tree());\n\t};\n\n\tconnection.prototype.setPresence = function (type, status) {\n\t    var dom = $pres({xmlns: 'jabber:client'});\n\t    if (type) {\n\t        if (status) {\n\t            dom.c('show').t(type);\n\t            dom.up().c('status').t(status);\n\t        } else {\n\t            dom.c('show').t(type);\n\t        }\n\t    }\n\t    this.sendCommand(dom.tree());\n\t};\n\n\tconnection.prototype.getPresence = function () {\n\t    var dom = $pres({xmlns: 'jabber:client'});\n\t    var conn = this;\n\t    this.sendCommand(dom.tree());\n\t};\n\n\tconnection.prototype.ping = function (options) {\n\t    var options = options || {};\n\t    var jid = _getJid(options, this);\n\n\t    var dom = $iq({\n\t        from: this.context.jid || ''\n\t        , to: jid\n\t        , type: 'get'\n\t    }).c('ping', {xmlns: 'urn:xmpp:ping'});\n\n\t    var suc = options.success || _utils.emptyfn;\n\t    var error = options.error || this.onError;\n\t    var failFn = function (ele) {\n\t        error({\n\t            type: _code.WEBIM_CONNCTION_PING_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    if (this.isOpened()) {\n\t        this.context.stropheConn.sendIQ(dom.tree(), suc, failFn);\n\t    } else {\n\t        error({\n\t            type: _code.WEBIM_CONNCTION_DISCONNECTED\n\t        });\n\t    }\n\t    return;\n\t};\n\n\tconnection.prototype.isOpened = function () {\n\t    return this.context.status == _code.STATUS_OPENED;\n\t};\n\n\tconnection.prototype.isOpening = function () {\n\t    var status = this.context.status;\n\t    return status == _code.STATUS_DOLOGIN_USERGRID || status == _code.STATUS_DOLOGIN_IM;\n\t};\n\n\tconnection.prototype.isClosing = function () {\n\t    return this.context.status == _code.STATUS_CLOSING;\n\t};\n\n\tconnection.prototype.isClosed = function () {\n\t    return this.context.status == _code.STATUS_CLOSED;\n\t};\n\n\tconnection.prototype.clear = function () {\n\t    var key = this.context.appKey;\n\t    if (this.errorType != WebIM.statusCode.WEBIM_CONNCTION_DISCONNECTED) {\n\t        this.context = {\n\t            status: _code.STATUS_INIT,\n\t            appKey: key\n\t        };\n\t    }\n\t    if (this.intervalId) {\n\t        clearInterval(this.intervalId);\n\t    }\n\t    if (this.errorType == WebIM.statusCode.WEBIM_CONNCTION_CLIENT_LOGOUT || this.errorType == -1) {\n\t        Demo.api.init();\n\t    }\n\t};\n\n\tconnection.prototype.getChatRooms = function (options) {\n\n\t    if (!_utils.isCanSetRequestHeader) {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR\n\t        });\n\t        return;\n\t    }\n\n\t    var conn = this,\n\t        token = options.accessToken || this.context.accessToken;\n\n\t    if (token) {\n\t        var apiUrl = options.apiUrl;\n\t        var appName = this.context.appName;\n\t        var orgName = this.context.orgName;\n\n\t        if (!appName || !orgName) {\n\t            conn.onError({\n\t                type: _code.WEBIM_CONNCTION_AUTH_ERROR\n\t            });\n\t            return;\n\t        }\n\n\t        var suc = function (data, xhr) {\n\t            typeof options.success === 'function' && options.success(data);\n\t        };\n\n\t        var error = function (res, xhr, msg) {\n\t            if (res.error && res.error_description) {\n\t                conn.onError({\n\t                    type: _code.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR,\n\t                    msg: res.error_description,\n\t                    data: res,\n\t                    xhr: xhr\n\t                });\n\t            }\n\t        };\n\n\t        var pageInfo = {\n\t            pagenum: parseInt(options.pagenum) || 1,\n\t            pagesize: parseInt(options.pagesize) || 20\n\t        };\n\n\t        var opts = {\n\t            url: apiUrl + '/' + orgName + '/' + appName + '/chatrooms',\n\t            dataType: 'json',\n\t            type: 'GET',\n\t            headers: {'Authorization': 'Bearer ' + token},\n\t            data: pageInfo,\n\t            success: suc || _utils.emptyfn,\n\t            error: error || _utils.emptyfn\n\t        };\n\t        _utils.ajax(opts);\n\t    } else {\n\t        conn.onError({\n\t            type: _code.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR\n\t        });\n\t    }\n\n\t};\n\n\tconnection.prototype.joinChatRoom = function (options) {\n\t    var roomJid = this.context.appKey + '_' + options.roomId + '@conference.' + this.domain;\n\t    var room_nick = roomJid + '/' + this.context.userId;\n\t    var suc = options.success || _utils.emptyfn;\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_JOINCHATROOM_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\n\t    var iq = $pres({\n\t        from: this.context.jid,\n\t        to: room_nick\n\t    })\n\t        .c('x', {xmlns: Strophe.NS.MUC + '#user'})\n\t        .c('item', {affiliation: 'member', role: 'participant'})\n\t        .up().up()\n\t        .c('roomtype', {xmlns: 'hyphenate:x:roomtype', type: 'chatroom'});\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), suc, errorFn);\n\t};\n\n\tconnection.prototype.quitChatRoom = function (options) {\n\t    var roomJid = this.context.appKey + '_' + options.roomId + '@conference.' + this.domain;\n\t    var room_nick = roomJid + '/' + this.context.userId;\n\t    var suc = options.success || _utils.emptyfn;\n\t    var err = options.error || _utils.emptyfn;\n\t    var errorFn = function (ele) {\n\t        err({\n\t            type: _code.WEBIM_CONNCTION_QUITCHATROOM_ERROR\n\t            , data: ele\n\t        });\n\t    };\n\t    var iq = $pres({\n\t        from: this.context.jid,\n\t        to: room_nick,\n\t        type: 'unavailable'\n\t    })\n\t        .c('x', {xmlns: Strophe.NS.MUC + '#user'})\n\t        .c('item', {affiliation: 'none', role: 'none'})\n\t        .up().up()\n\t        .c('roomtype', {xmlns: 'hyphenate:x:roomtype', type: 'chatroom'});\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), suc, errorFn);\n\t};\n\n\tconnection.prototype._onReceiveInviteFromGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group invitation\",\n\t        msg: info.user + \" invites you to join into group:\" + info.group_id,\n\t        agree: function agree() {\n\t            WebIM.doQuery('{\"type\":\"acceptInvitationFromGroup\",\"id\":\"' + info.group_id + '\",\"user\":\"' + info.user + '\"}', function (response) {\n\t            }, function (code, msg) {\n\t                Demo.api.NotifyError(\"acceptInvitationFromGroup error:\" + msg);\n\t            });\n\n\t        },\n\t        reject: function reject() {\n\t            WebIM.doQuery('{\"type\":\"declineInvitationFromGroup\",\"id\":\"' + info.group_id + '\",\"user\":\"' + info.user + '\"}', function (response) {\n\t            }, function (code, msg) {\n\t                Demo.api.NotifyError(\"declineInvitationFromGroup error:\" + msg);\n\t            });\n\t        }\n\t    };\n\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onReceiveInviteAcceptionFromGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group invitation response\",\n\t        msg: info.user + \" agreed to join into group:\" + info.group_id,\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onReceiveInviteDeclineFromGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group invitation response\",\n\t        msg: info.user + \" rejected to join into group:\" + info.group_id,\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onAutoAcceptInvitationFromGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group invitation\",\n\t        msg: \"You had joined into the group:\" + info.group_name + \" automatically.Inviter:\" + info.user,\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onLeaveGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group notification\",\n\t        msg: \"You have been out of the group:\" + info.group_id + \".Reason:\" + info.msg,\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onReceiveJoinGroupApplication = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group join application\",\n\t        msg: info.user + \" applys to join into group:\" + info.group_id,\n\t        agree: function agree() {\n\t            WebIM.doQuery('{\"type\":\"acceptJoinGroupApplication\",\"id\":\"' + info.group_id + '\",\"user\":\"' + info.user + '\"}', function (response) {\n\t            }, function (code, msg) {\n\t                Demo.api.NotifyError(\"acceptJoinGroupApplication error:\" + msg);\n\t            });\n\t        },\n\t        reject: function reject() {\n\t            WebIM.doQuery('{\"type\":\"declineJoinGroupApplication\",\"id\":\"' + info.group_id + '\",\"user\":\"' + info.user + '\"}', function (response) {\n\t            }, function (code, msg) {\n\t                Demo.api.NotifyError(\"declineJoinGroupApplication error:\" + msg);\n\t            });\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onReceiveAcceptionFromGroup = function (info) {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group notification\",\n\t        msg: \"You had joined into the group:\" + info.group_name + \".\",\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onReceiveRejectionFromGroup = function () {\n\t    info = eval('(' + info + ')');\n\t    var options = {\n\t        title: \"Group notification\",\n\t        msg: \"You have been rejected to join into the group:\" + info.group_name + \".\",\n\t        agree: function agree() {\n\t        }\n\t    };\n\t    this.onConfirmPop(options);\n\t};\n\tconnection.prototype._onUpdateMyGroupList = function (options) {\n\t    this.onUpdateMyGroupList(options);\n\t};\n\tconnection.prototype._onUpdateMyRoster = function (options) {\n\t    this.onUpdateMyRoster(options);\n\t};\n\tconnection.prototype.reconnect = function () {\n\t    var that = this;\n\t    setTimeout(function () {\n\t        _login(that.context.restTokenData, that);\n\t    }, (this.autoReconnectNumTotal == 0 ? 0 : this.autoReconnectInterval) * 1000);\n\t    this.autoReconnectNumTotal++;\n\t};\n\tconnection.prototype.closed = function () {\n\t    Demo.api.init();\n\t};\n\n\t// used for blacklist\n\tfunction _parsePrivacy(iq) {\n\t    var list = [];\n\t    var items = iq.getElementsByTagName('item');\n\n\t    if (items) {\n\t        for (var i = 0; i < items.length; i++) {\n\t            var item = items[i];\n\t            var jid = item.getAttribute('value');\n\t            var order = item.getAttribute('order');\n\t            var type = item.getAttribute('type');\n\t            if (!jid) {\n\t                continue;\n\t            }\n\t            var n = _parseNameFromJidFn(jid);\n\t            list[n] = {\n\t                type: type,\n\t                order: order,\n\t                jid: jid,\n\t                name: n\n\t            };\n\t        }\n\t    }\n\t    return list;\n\t};\n\n\t// used for blacklist\n\tconnection.prototype.getBlacklist = function (options) {\n\t    options = (options || {});\n\t    var iq = $iq({type: 'get'});\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var me = this;\n\n\t    iq.c('query', {xmlns: 'jabber:iq:privacy'})\n\t        .c('list', {name: 'special'});\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (iq) {\n\t        me.onBlacklistUpdate(_parsePrivacy(iq));\n\t        sucFn();\n\t    }, function () {\n\t        me.onBlacklistUpdate([]);\n\t        errFn();\n\t    });\n\t};\n\n\t// used for blacklist\n\tconnection.prototype.addToBlackList = function (options) {\n\t    var iq = $iq({type: 'set'});\n\t    var blacklist = options.list || {};\n\t    var type = options.type || 'jid';\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var piece = iq.c('query', {xmlns: 'jabber:iq:privacy'})\n\t        .c('list', {name: 'special'});\n\n\t    var keys = Object.keys(blacklist);\n\t    var len = keys.length;\n\t    var order = 2;\n\n\t    for (var i = 0; i < len; i++) {\n\t        var item = blacklist[keys[i]];\n\t        var type = item.type || 'jid';\n\t        var jid = item.jid;\n\n\t        piece = piece.c('item', {action: 'deny', order: order++, type: type, value: jid})\n\t            .c('message');\n\t        if (i !== len - 1) {\n\t            piece = piece.up().up();\n\t        }\n\t    }\n\n\t    // log('addToBlackList', blacklist, piece.tree());\n\t    this.context.stropheConn.sendIQ(piece.tree(), sucFn, errFn);\n\t};\n\n\t// used for blacklist\n\tconnection.prototype.removeFromBlackList = function (options) {\n\n\t    var iq = $iq({type: 'set'});\n\t    var blacklist = options.list || {};\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var piece = iq.c('query', {xmlns: 'jabber:iq:privacy'})\n\t        .c('list', {name: 'special'});\n\n\t    var keys = Object.keys(blacklist);\n\t    var len = keys.length;\n\n\t    for (var i = 0; i < len; i++) {\n\t        var item = blacklist[keys[i]];\n\t        var type = item.type || 'jid';\n\t        var jid = item.jid;\n\t        var order = item.order;\n\n\t        piece = piece.c('item', {action: 'deny', order: order, type: type, value: jid})\n\t            .c('message');\n\t        if (i !== len - 1) {\n\t            piece = piece.up().up();\n\t        }\n\t    }\n\n\t    // log('removeFromBlackList', blacklist, piece.tree());\n\t    this.context.stropheConn.sendIQ(piece.tree(), sucFn, errFn);\n\t};\n\n\tconnection.prototype._getGroupJid = function (to) {\n\t    var appKey = this.context.appKey || '';\n\t    return appKey + '_' + to + '@conference.' + this.domain;\n\t}\n\t;\n\n\t// used for blacklist\n\tconnection.prototype.addToGroupBlackList = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var jid = _getJid(options, this);\n\t    var affiliation = 'admin';//options.affiliation || 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('item', {\n\t            affiliation: 'outcast',\n\t            jid: jid\n\t        });\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), sucFn, errFn);\n\t};\n\n\tfunction _parseGroupBlacklist(iq) {\n\t    var list = {};\n\t    var items = iq.getElementsByTagName('item');\n\n\t    if (items) {\n\t        for (var i = 0; i < items.length; i++) {\n\t            var item = items[i];\n\t            var jid = item.getAttribute('jid');\n\t            var affiliation = item.getAttribute('affiliation');\n\t            var nick = item.getAttribute('nick');\n\t            if (!jid) {\n\t                continue;\n\t            }\n\t            var n = _parseNameFromJidFn(jid);\n\t            list[n] = {\n\t                jid: jid,\n\t                affiliation: affiliation,\n\t                nick: nick,\n\t                name: n\n\t            };\n\t        }\n\t    }\n\t    return list;\n\t}\n\n\t// used for blacklist\n\tconnection.prototype.getGroupBlacklist = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\n\t    // var jid = _getJid(options, this);\n\t    var affiliation = 'admin';//options.affiliation || 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'get', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('item', {\n\t            affiliation: 'outcast',\n\t        });\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msginfo) {\n\t        log('getGroupBlackList');\n\t        sucFn(_parseGroupBlacklist(msginfo));\n\t    }, function () {\n\t        errFn();\n\t    });\n\t};\n\n\t// used for blacklist\n\tconnection.prototype.removeGroupMemberFromBlacklist = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\n\t    var jid = _getJid(options, this);\n\t    var affiliation = 'admin';//options.affiliation || 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('item', {\n\t            affiliation: 'member',\n\t            jid: jid\n\t        });\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msginfo) {\n\t        sucFn();\n\t    }, function () {\n\t        errFn();\n\t    });\n\t};\n\n\t/**\n\t * changeGroupSubject 修改群名称\n\t *\n\t * @param options\n\t */\n\t// <iq to='hyphenatedemo#chatdemoui_roomid@conference.hyphenate.io' type='set' id='3940489311' xmlns='jabber:client'>\n\t//     <query xmlns='http://jabber.org/protocol/muc#owner'>\n\t//         <x type='submit' xmlns='jabber:x:data'>\n\t//             <field var='FORM_TYPE'><value>http://jabber.org/protocol/muc#roomconfig</value></field>\n\t//             <field var='muc#roomconfig_roomname'><value>Room Name</value></field>\n\t//         </x>\n\t//     </query>\n\t// </iq>\n\tconnection.prototype.changeGroupSubject = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\n\t    // must be `owner`\n\t    var affiliation = 'owner';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('x', {type: 'submit', xmlns: 'jabber:x:data'})\n\t        .c('field', {var: 'FORM_TYPE'})\n\t        .c('value')\n\t        .t('http://jabber.org/protocol/muc#roomconfig')\n\t        .up().up()\n\t        .c('field', {var: 'muc#roomconfig_roomname'})\n\t        .c('value')\n\t        .t(options.subject)\n\t        .up().up()\n\t        .c('field', {var: 'muc#roomconfig_roomdesc'})\n\t        .c('value')\n\t        .t(options.description);\n\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msginfo) {\n\t        sucFn();\n\t    }, function () {\n\t        errFn();\n\t    });\n\t};\n\n\t/**\n\t * destroyGroup 删除群组\n\t *\n\t * @param options\n\t */\n\t// <iq id=\"9BEF5D20-841A-4048-B33A-F3F871120E58\" to=\"hyphenatedemo#chatdemoui_1477462231499@conference.hyphenate.io\" type=\"set\">\n\t//     <query xmlns=\"http://jabber.org/protocol/muc#owner\">\n\t//         <destroy/>\n\t//     </query>\n\t// </iq>\n\tconnection.prototype.destroyGroup = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\n\t    // must be `owner`\n\t    var affiliation = 'owner';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('destroy');\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msginfo) {\n\t        sucFn();\n\t    }, function () {\n\t        errFn();\n\t    });\n\t};\n\n\t/**\n\t * leaveGroupBySelf 主动离开群组\n\t *\n\t * @param options\n\t */\n\t// <iq id=\"5CD33172-7B62-41B7-98BC-CE6EF840C4F6_hyphenate_occupants_change_affiliation\" to=\"hyphenatedemo#chatdemoui_1477481609392@conference.hyphenate.io\" type=\"set\">\n\t//     <query xmlns=\"http://jabber.org/protocol/muc#admin\">\n\t//         <item affiliation=\"none\" jid=\"hyphenatedemo#chatdemoui_lwz2@hyphenate.io\"/>\n\t//     </query>\n\t// </iq>\n\tconnection.prototype.leaveGroupBySelf = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\n\t    // must be `owner`\n\t    var jid = _getJid(options, this);\n\t    var affiliation = 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\n\t    iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t        .c('item', {\n\t            affiliation: 'none',\n\t            jid: jid\n\t        });\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msgInfo) {\n\t        sucFn(msgInfo);\n\t    }, function (errInfo) {\n\t        errFn(errInfo);\n\t    });\n\t};\n\n\t/**\n\t * leaveGroup 被踢出群组\n\t *\n\t * @param options\n\t */\n\t// <iq id=\"9fb25cf4-1183-43c9-961e-9df70e300de4:sendIQ\" to=\"hyphenatedemo#chatdemoui_1477481597120@conference.hyphenate.io\" type=\"set\" xmlns=\"jabber:client\">\n\t//     <query xmlns=\"http://jabber.org/protocol/muc#admin\">\n\t//         <item affiliation=\"none\" jid=\"hyphenatedemo#chatdemoui_lwz4@hyphenate.io\"/>\n\t//         <item jid=\"hyphenatedemo#chatdemoui_lwz4@hyphenate.io\" role=\"none\"/>\n\t//         <item affiliation=\"none\" jid=\"hyphenatedemo#chatdemoui_lwz2@hyphenate.io\"/>\n\t//         <item jid=\"hyphenatedemo#chatdemoui_lwz2@hyphenate.io\" role=\"none\"/>\n\t//     </query>\n\t// </iq>\n\tconnection.prototype.leaveGroup = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var list = options.list || [];\n\t    var affiliation = 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\t    var piece = iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t    var keys = Object.keys(list);\n\t    var len = keys.length;\n\n\t    for (var i = 0; i < len; i++) {\n\t        var name = list[keys[i]];\n\t        var jid = _getJidByName(name, this);\n\n\t        piece = piece.c('item', {\n\t            affiliation: 'none',\n\t            jid: jid\n\t        }).up().c('item', {\n\t            role: 'none',\n\t            jid: jid,\n\t        }).up();\n\t    }\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msgInfo) {\n\t        sucFn(msgInfo);\n\t    }, function (errInfo) {\n\t        errFn(errInfo);\n\t    });\n\t};\n\n\t/**\n\t * addGroupMembers 添加群组成员\n\t *\n\t * @param options\n\t */\n\t// <iq id=\"09DFB1E5-C939-4C43-B5A7-8000DA0E3B73_hyphenate_occupants_change_affiliation\" to=\"hyphenatedemo#chatdemoui_1477482739698@conference.hyphenate.io\" type=\"set\">\n\t//     <query xmlns=\"http://jabber.org/protocol/muc#admin\">\n\t//         <item affiliation=\"member\" jid=\"hyphenatedemo#chatdemoui_lwz2@hyphenate.io\"/>\n\t//     </query>\n\t// </iq>\n\tconnection.prototype.addGroupMembers = function (options) {\n\t    var sucFn = options.success || _utils.emptyfn;\n\t    var errFn = options.error || _utils.emptyfn;\n\t    var list = options.list || [];\n\t    var affiliation = 'admin';\n\t    var to = this._getGroupJid(options.roomId);\n\t    var iq = $iq({type: 'set', to: to});\n\t    var piece = iq.c('query', {xmlns: 'http://jabber.org/protocol/muc#' + affiliation})\n\t    var keys = Object.keys(list);\n\t    var len = keys.length;\n\n\t    for (var i = 0; i < len; i++) {\n\t        var name = list[keys[i]];\n\t        var jid = _getJidByName(name, this);\n\n\t        piece = piece.c('item', {\n\t            affiliation: 'member',\n\t            jid: jid\n\t        }).up();\n\t    }\n\n\t    this.context.stropheConn.sendIQ(iq.tree(), function (msgInfo) {\n\t        sucFn(msgInfo);\n\t    }, function (errInfo) {\n\t        errFn(errInfo);\n\t    });\n\t};\n\n\t/**\n\t * acceptInviteFromGroup 接受加入申请\n\t *\n\t * @param options\n\t */\n\tconnection.prototype.acceptInviteFromGroup = function (options) {\n\t    options.success = function () {\n\t        // then send sendAcceptInviteMessage\n\t        // connection.prototype.sendAcceptInviteMessage(optoins);\n\t    };\n\t    this.addGroupMembers(options);\n\t};\n\n\t/**\n\t * rejectInviteFromGroup 拒绝加入申请\n\t *\n\t * throw request for now 暂时不处理，直接丢弃\n\t *\n\t * @param options\n\t */\n\tconnection.prototype.rejectInviteFromGroup = function (options) {\n\t};\n\n\t/**\n\t * createGroup 创建群组\n\t *\n\t * 1. 创建申请 -> 得到房主身份\n\t * 2. 获取房主信息 -> 得到房间form\n\t * 3. 完善房间form -> 创建成功\n\t * 4. 添加房间成员\n\t * 5. 消息通知成员\n\t * @param options\n\t */\n\tconnection.prototype.createGroup = function (options) {\n\t    var roomId = +new Date();\n\t    var toRoom = this._getGroupJid(roomId);\n\t    var to = toRoom + '/' + this.context.userId;\n\n\t    var pres = $pres({to: to})\n\t        .c('x', {xmlns: 'http://jabber.org/protocol/muc'}).up()\n\t        .c('create', {xmlns: 'http://jabber.org/protocol/muc'}).up();\n\t    // .c('c', {\n\t    //     hash: 'sha-1',\n\t    //     node: 'https://github.com/robbiehanson/XMPPFramework',\n\t    //     ver: 'k6gP4Ua5m4uu9YorAG0LRXM+kZY=',\n\t    //     xmlns: 'http://jabber.org/protocol/caps'\n\t    // }).up();\n\n\t    // createGroupACK\n\t    this.sendCommand(pres.tree());\n\n\t    var me = this;\n\t    // timeout hack for create group async\n\t    setTimeout(function () {\n\t        // Creating a Reserved Room\n\t        var iq = $iq({type: 'get', to: toRoom})\n\t            .c('query', {xmlns: 'http://jabber.org/protocol/muc#owner'});\n\n\t        // Strophe.info('step 1 ----------');\n\t        // Strophe.info(options);\n\t        me.context.stropheConn.sendIQ(iq.tree(), function (msgInfo) {\n\t            // log(msgInfo);\n\n\t            // for ie hack\n\t            if ('setAttribute' in msgInfo) {\n\t                // Strophe.info('step 3 ----------');\n\t                var x = msgInfo.getElementsByTagName('x')[0];\n\t                x.setAttribute('type', 'submit');\n\t            } else {\n\t                // Strophe.info('step 4 ----------');\n\t                Strophe.forEachChild(msgInfo, 'x', function (field) {\n\t                    field.setAttribute('type', 'submit');\n\t                });\n\t            }\n\n\t            // var rcv = msgInfo.getElementsByTagName('x');\n\t            // var v;\n\t            // if (rcv.length > 0) {\n\t            //     if (rcv[0].childNodes && rcv[0].childNodes.length > 0) {\n\t            //         v = rcv[0].childNodes[0].nodeValue;\n\t            //     } else {\n\t            //         v = rcv[0].innerHTML || rcv[0].innerText\n\t            //     }\n\t            //     mid = rcv[0].getAttribute('mid');\n\t            // }\n\t            Strophe.info('step 5 ----------');\n\t            Strophe.forEachChild(x, 'field', function (field) {\n\t                var fieldVar = field.getAttribute('var');\n\t                var valueDom = field.getElementsByTagName('value')[0];\n\t                Strophe.info(fieldVar);\n\t                switch (fieldVar) {\n\t                    case 'muc#roomconfig_roomname':\n\t                        _setText(valueDom, options.subject || '');\n\t                        break;\n\t                    case 'muc#roomconfig_roomdesc':\n\t                        _setText(valueDom, options.description || '');\n\t                        break;\n\t                    case 'muc#roomconfig_publicroom': // public 1\n\t                        _setText(valueDom, +options.optionsPublic);\n\t                        break;\n\t                    case 'muc#roomconfig_membersonly':\n\t                        _setText(valueDom, +options.optionsMembersOnly);\n\t                        break;\n\t                    case 'muc#roomconfig_moderatedroom':\n\t                        _setText(valueDom, +options.optionsModerate);\n\t                        break;\n\t                    case 'muc#roomconfig_persistentroom':\n\t                        _setText(valueDom, 1);\n\t                        break;\n\t                    case 'muc#roomconfig_allowinvites':\n\t                        _setText(valueDom, +options.optionsAllowInvites);\n\t                        break;\n\t                    case 'muc#roomconfig_allowvisitornickchange':\n\t                        _setText(valueDom, 0);\n\t                        break;\n\t                    case 'muc#roomconfig_allowvisitorstatus':\n\t                        _setText(valueDom, 0);\n\t                        break;\n\t                    case 'allow_private_messages':\n\t                        _setText(valueDom, 0);\n\t                        break;\n\t                    case 'allow_private_messages_from_visitors':\n\t                        _setText(valueDom, 'nobody');\n\t                        break;\n\t                    default:\n\t                        break;\n\t                }\n\t                // log(valueDom);\n\t            });\n\n\t            var iq = $iq({to: toRoom, type: 'set'})\n\t                .c('query', {xmlns: 'http://jabber.org/protocol/muc#owner'})\n\t                .cnode(x);\n\n\t            // log(iq.tree());\n\n\t            me.context.stropheConn.sendIQ(iq.tree(), function (msgInfo) {\n\t                // sucFn(msgInfo);\n\n\t                me.addGroupMembers({\n\t                    list: options.members,\n\t                    roomId: roomId\n\t                });\n\t            }, function (errInfo) {\n\t                // errFn(errInfo);\n\t            });\n\t            // sucFn(msgInfo);\n\t        }, function (errInfo) {\n\t            // errFn(errInfo);\n\t        });\n\t    }, 1000);\n\t};\n\n\tfunction _setText(valueDom, v) {\n\t    if ('textContent' in valueDom) {\n\t        valueDom.textContent = v;\n\t    } else if ('text' in valueDom) {\n\t        valueDom.text = v;\n\t    } else {\n\t        // Strophe.info('_setText 4 ----------');\n\t        // valueDom.innerHTML = v;\n\t    }\n\t}\n\n\n\twindow.WebIM = typeof WebIM !== 'undefined' ? WebIM : {};\n\tWebIM.connection = connection;\n\tWebIM.utils = _utils;\n\tWebIM.statusCode = _code;\n\tWebIM.message = _msg.message;\n\tWebIM.doQuery = function (str, suc, fail) {\n\t    if (typeof window.cefQuery === 'undefined') {\n\t        return;\n\t    }\n\t    window.cefQuery({\n\t            request: str,\n\t            persistent: false,\n\t            onSuccess: suc,\n\t            onFailure: fail\n\t        }\n\t    );\n\t};\n\t// })(window, undefined);\n\n\tmodule.exports = WebIM;\n\n\tif (false) {\n\t    module.hot.accept();\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_LOCAL_MODULE_0__;var __WEBPACK_LOCAL_MODULE_1__;var __WEBPACK_LOCAL_MODULE_2__;var __WEBPACK_LOCAL_MODULE_3__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_4__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_5__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_6__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_7__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_8__;/** File: strophe.js\n\t *  A JavaScript library for XMPP BOSH/XMPP over Websocket.\n\t *\n\t *  This is the JavaScript version of the Strophe library.  Since JavaScript\n\t *  had no facilities for persistent TCP connections, this library uses\n\t *  Bidirectional-streams Over Synchronous HTTP (BOSH) to emulate\n\t *  a persistent, stateful, two-way connection to an XMPP server.  More\n\t *  information on BOSH can be found in XEP 124.\n\t *\n\t *  This version of Strophe also works with WebSockets.\n\t *  For more information on XMPP-over WebSocket see this RFC:\n\t *  http://tools.ietf.org/html/rfc7395\n\t */\n\n\t/* All of the Strophe globals are defined in this special function below so\n\t * that references to the globals become closures.  This will ensure that\n\t * on page reload, these references will still be available to callbacks\n\t * that are still executing.\n\t */\n\n\t/* jshint ignore:start */\n\t(function (callback) {\n\t    /* jshint ignore:end */\n\n\t// This code was written by Tyler Akins and has been placed in the\n\t// public domain.  It would be nice if you left this header intact.\n\t// Base64 code from Tyler Akins -- http://rumkin.com\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_LOCAL_MODULE_0__ = function () {\n\t                return factory();\n\t            }.call(exports, __webpack_require__, exports, module));\n\t        } else {\n\t            // Browser globals\n\t            root.Base64 = factory();\n\t        }\n\t    }(this, function () {\n\t        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\t        var obj = {\n\t            /**\n\t             * Encodes a string in base64\n\t             * @param {String} input The string to encode in base64.\n\t             */\n\t            encode: function (input) {\n\t                var output = \"\";\n\t                var chr1, chr2, chr3;\n\t                var enc1, enc2, enc3, enc4;\n\t                var i = 0;\n\n\t                do {\n\t                    chr1 = input.charCodeAt(i++);\n\t                    chr2 = input.charCodeAt(i++);\n\t                    chr3 = input.charCodeAt(i++);\n\n\t                    enc1 = chr1 >> 2;\n\t                    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t                    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t                    enc4 = chr3 & 63;\n\n\t                    if (isNaN(chr2)) {\n\t                        enc2 = ((chr1 & 3) << 4);\n\t                        enc3 = enc4 = 64;\n\t                    } else if (isNaN(chr3)) {\n\t                        enc4 = 64;\n\t                    }\n\n\t                    output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n\t                        keyStr.charAt(enc3) + keyStr.charAt(enc4);\n\t                } while (i < input.length);\n\n\t                return output;\n\t            },\n\n\t            /**\n\t             * Decodes a base64 string.\n\t             * @param {String} input The string to decode.\n\t             */\n\t            decode: function (input) {\n\t                var output = \"\";\n\t                var chr1, chr2, chr3;\n\t                var enc1, enc2, enc3, enc4;\n\t                var i = 0;\n\n\t                // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\t                input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n\t                do {\n\t                    enc1 = keyStr.indexOf(input.charAt(i++));\n\t                    enc2 = keyStr.indexOf(input.charAt(i++));\n\t                    enc3 = keyStr.indexOf(input.charAt(i++));\n\t                    enc4 = keyStr.indexOf(input.charAt(i++));\n\n\t                    chr1 = (enc1 << 2) | (enc2 >> 4);\n\t                    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t                    chr3 = ((enc3 & 3) << 6) | enc4;\n\n\t                    output = output + String.fromCharCode(chr1);\n\n\t                    if (enc3 != 64) {\n\t                        output = output + String.fromCharCode(chr2);\n\t                    }\n\t                    if (enc4 != 64) {\n\t                        output = output + String.fromCharCode(chr3);\n\t                    }\n\t                } while (i < input.length);\n\n\t                return output;\n\t            }\n\t        };\n\t        return obj;\n\t    }));\n\n\t    /*\n\t     * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n\t     * in FIPS PUB 180-1\n\t     * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n\t     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\t     * Distributed under the BSD License\n\t     * See http://pajhome.org.uk/crypt/md5 for details.\n\t     */\n\n\t    /* jshint undef: true, unused: true:, noarg: true, latedef: true */\n\t    /* global define */\n\n\t    /* Some functions and variables have been stripped for use with Strophe */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_LOCAL_MODULE_1__ = function () {\n\t                return factory();\n\t            }.call(exports, __webpack_require__, exports, module));\n\t        } else {\n\t            // Browser globals\n\t            root.SHA1 = factory();\n\t        }\n\t    }(this, function () {\n\n\t        /*\n\t         * Calculate the SHA-1 of an array of big-endian words, and a bit length\n\t         */\n\t        function core_sha1(x, len) {\n\t            /* append padding */\n\t            x[len >> 5] |= 0x80 << (24 - len % 32);\n\t            x[((len + 64 >> 9) << 4) + 15] = len;\n\n\t            var w = new Array(80);\n\t            var a = 1732584193;\n\t            var b = -271733879;\n\t            var c = -1732584194;\n\t            var d = 271733878;\n\t            var e = -1009589776;\n\n\t            var i, j, t, olda, oldb, oldc, oldd, olde;\n\t            for (i = 0; i < x.length; i += 16) {\n\t                olda = a;\n\t                oldb = b;\n\t                oldc = c;\n\t                oldd = d;\n\t                olde = e;\n\n\t                for (j = 0; j < 80; j++) {\n\t                    if (j < 16) {\n\t                        w[j] = x[i + j];\n\t                    }\n\t                    else {\n\t                        w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n\t                    }\n\t                    t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n\t                        safe_add(safe_add(e, w[j]), sha1_kt(j)));\n\t                    e = d;\n\t                    d = c;\n\t                    c = rol(b, 30);\n\t                    b = a;\n\t                    a = t;\n\t                }\n\n\t                a = safe_add(a, olda);\n\t                b = safe_add(b, oldb);\n\t                c = safe_add(c, oldc);\n\t                d = safe_add(d, oldd);\n\t                e = safe_add(e, olde);\n\t            }\n\t            return [a, b, c, d, e];\n\t        }\n\n\t        /*\n\t         * Perform the appropriate triplet combination function for the current\n\t         * iteration\n\t         */\n\t        function sha1_ft(t, b, c, d) {\n\t            if (t < 20) {\n\t                return (b & c) | ((~b) & d);\n\t            }\n\t            if (t < 40) {\n\t                return b ^ c ^ d;\n\t            }\n\t            if (t < 60) {\n\t                return (b & c) | (b & d) | (c & d);\n\t            }\n\t            return b ^ c ^ d;\n\t        }\n\n\t        /*\n\t         * Determine the appropriate additive constant for the current iteration\n\t         */\n\t        function sha1_kt(t) {\n\t            return (t < 20) ? 1518500249 : (t < 40) ? 1859775393 :\n\t                (t < 60) ? -1894007588 : -899497514;\n\t        }\n\n\t        /*\n\t         * Calculate the HMAC-SHA1 of a key and some data\n\t         */\n\t        function core_hmac_sha1(key, data) {\n\t            var bkey = str2binb(key);\n\t            if (bkey.length > 16) {\n\t                bkey = core_sha1(bkey, key.length * 8);\n\t            }\n\n\t            var ipad = new Array(16), opad = new Array(16);\n\t            for (var i = 0; i < 16; i++) {\n\t                ipad[i] = bkey[i] ^ 0x36363636;\n\t                opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t            }\n\n\t            var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n\t            return core_sha1(opad.concat(hash), 512 + 160);\n\t        }\n\n\t        /*\n\t         * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t         * to work around bugs in some JS interpreters.\n\t         */\n\t        function safe_add(x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t            var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        }\n\n\t        /*\n\t         * Bitwise rotate a 32-bit number to the left.\n\t         */\n\t        function rol(num, cnt) {\n\t            return (num << cnt) | (num >>> (32 - cnt));\n\t        }\n\n\t        /*\n\t         * Convert an 8-bit or 16-bit string to an array of big-endian words\n\t         * In 8-bit function, characters >255 have their hi-byte silently ignored.\n\t         */\n\t        function str2binb(str) {\n\t            var bin = [];\n\t            var mask = 255;\n\t            for (var i = 0; i < str.length * 8; i += 8) {\n\t                bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << (24 - i % 32);\n\t            }\n\t            return bin;\n\t        }\n\n\t        /*\n\t         * Convert an array of big-endian words to a string\n\t         */\n\t        function binb2str(bin) {\n\t            var str = \"\";\n\t            var mask = 255;\n\t            for (var i = 0; i < bin.length * 32; i += 8) {\n\t                str += String.fromCharCode((bin[i >> 5] >>> (24 - i % 32)) & mask);\n\t            }\n\t            return str;\n\t        }\n\n\t        /*\n\t         * Convert an array of big-endian words to a base-64 string\n\t         */\n\t        function binb2b64(binarray) {\n\t            var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t            var str = \"\";\n\t            var triplet, j;\n\t            for (var i = 0; i < binarray.length * 4; i += 3) {\n\t                triplet = (((binarray[i >> 2] >> 8 * (3 - i % 4)) & 0xFF) << 16) |\n\t                    (((binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4)) & 0xFF) << 8 ) |\n\t                    ((binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4)) & 0xFF);\n\t                for (j = 0; j < 4; j++) {\n\t                    if (i * 8 + j * 6 > binarray.length * 32) {\n\t                        str += \"=\";\n\t                    }\n\t                    else {\n\t                        str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);\n\t                    }\n\t                }\n\t            }\n\t            return str;\n\t        }\n\n\t        /*\n\t         * These are the functions you'll usually want to call\n\t         * They take string arguments and return either hex or base-64 encoded strings\n\t         */\n\t        return {\n\t            b64_hmac_sha1: function (key, data) {\n\t                return binb2b64(core_hmac_sha1(key, data));\n\t            },\n\t            b64_sha1: function (s) {\n\t                return binb2b64(core_sha1(str2binb(s), s.length * 8));\n\t            },\n\t            binb2str: binb2str,\n\t            core_hmac_sha1: core_hmac_sha1,\n\t            str_hmac_sha1: function (key, data) {\n\t                return binb2str(core_hmac_sha1(key, data));\n\t            },\n\t            str_sha1: function (s) {\n\t                return binb2str(core_sha1(str2binb(s), s.length * 8));\n\t            },\n\t        };\n\t    }));\n\n\t    /*\n\t     * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n\t     * Digest Algorithm, as defined in RFC 1321.\n\t     * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n\t     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\t     * Distributed under the BSD License\n\t     * See http://pajhome.org.uk/crypt/md5 for more info.\n\t     */\n\n\t    /*\n\t     * Everything that isn't used by Strophe has been stripped here!\n\t     */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_LOCAL_MODULE_2__ = function () {\n\t                return factory();\n\t            }.call(exports, __webpack_require__, exports, module));\n\t        } else {\n\t            // Browser globals\n\t            root.MD5 = factory();\n\t        }\n\t    }(this, function (b) {\n\t        /*\n\t         * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t         * to work around bugs in some JS interpreters.\n\t         */\n\t        var safe_add = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t            var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\n\t        /*\n\t         * Bitwise rotate a 32-bit number to the left.\n\t         */\n\t        var bit_rol = function (num, cnt) {\n\t            return (num << cnt) | (num >>> (32 - cnt));\n\t        };\n\n\t        /*\n\t         * Convert a string to an array of little-endian words\n\t         */\n\t        var str2binl = function (str) {\n\t            var bin = [];\n\t            for (var i = 0; i < str.length * 8; i += 8) {\n\t                bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << (i % 32);\n\t            }\n\t            return bin;\n\t        };\n\n\t        /*\n\t         * Convert an array of little-endian words to a string\n\t         */\n\t        var binl2str = function (bin) {\n\t            var str = \"\";\n\t            for (var i = 0; i < bin.length * 32; i += 8) {\n\t                str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & 255);\n\t            }\n\t            return str;\n\t        };\n\n\t        /*\n\t         * Convert an array of little-endian words to a hex string.\n\t         */\n\t        var binl2hex = function (binarray) {\n\t            var hex_tab = \"0123456789abcdef\";\n\t            var str = \"\";\n\t            for (var i = 0; i < binarray.length * 4; i++) {\n\t                str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +\n\t                    hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8  )) & 0xF);\n\t            }\n\t            return str;\n\t        };\n\n\t        /*\n\t         * These functions implement the four basic operations the algorithm uses.\n\t         */\n\t        var md5_cmn = function (q, a, b, x, s, t) {\n\t            return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n\t        };\n\n\t        var md5_ff = function (a, b, c, d, x, s, t) {\n\t            return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t        };\n\n\t        var md5_gg = function (a, b, c, d, x, s, t) {\n\t            return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t        };\n\n\t        var md5_hh = function (a, b, c, d, x, s, t) {\n\t            return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n\t        };\n\n\t        var md5_ii = function (a, b, c, d, x, s, t) {\n\t            return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t        };\n\n\t        /*\n\t         * Calculate the MD5 of an array of little-endian words, and a bit length\n\t         */\n\t        var core_md5 = function (x, len) {\n\t            /* append padding */\n\t            x[len >> 5] |= 0x80 << ((len) % 32);\n\t            x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\t            var a = 1732584193;\n\t            var b = -271733879;\n\t            var c = -1732584194;\n\t            var d = 271733878;\n\n\t            var olda, oldb, oldc, oldd;\n\t            for (var i = 0; i < x.length; i += 16) {\n\t                olda = a;\n\t                oldb = b;\n\t                oldc = c;\n\t                oldd = d;\n\n\t                a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n\t                d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t                c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t                b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t                a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t                d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t                c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t                b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t                a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t                d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t                c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n\t                b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t                a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t                d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t                c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t                b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t                a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t                d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t                c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t                b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n\t                a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t                d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t                c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t                b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t                a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t                d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t                c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t                b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t                a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t                d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t                c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t                b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t                a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n\t                d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t                c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t                b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t                a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t                d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t                c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t                b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t                a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t                d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n\t                c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t                b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t                a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t                d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t                c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t                b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t                a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n\t                d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t                c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t                b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t                a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t                d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t                c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t                b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t                a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t                d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t                c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t                b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t                a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t                d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t                c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t                b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t                a = safe_add(a, olda);\n\t                b = safe_add(b, oldb);\n\t                c = safe_add(c, oldc);\n\t                d = safe_add(d, oldd);\n\t            }\n\t            return [a, b, c, d];\n\t        };\n\n\t        var obj = {\n\t            /*\n\t             * These are the functions you'll usually want to call.\n\t             * They take string arguments and return either hex or base-64 encoded\n\t             * strings.\n\t             */\n\t            hexdigest: function (s) {\n\t                return binl2hex(core_md5(str2binl(s), s.length * 8));\n\t            },\n\n\t            hash: function (s) {\n\t                return binl2str(core_md5(str2binl(s), s.length * 8));\n\t            }\n\t        };\n\t        return obj;\n\t    }));\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_LOCAL_MODULE_3__ = function () {\n\t                return factory();\n\t            }.call(exports, __webpack_require__, exports, module));\n\t        } else {\n\t            // Browser globals\n\t            root.stropheUtils = factory();\n\t        }\n\t    }(this, function () {\n\n\t        var utils = {\n\n\t            utf16to8: function (str) {\n\t                var i, c;\n\t                var out = \"\";\n\t                var len = str.length;\n\t                for (i = 0; i < len; i++) {\n\t                    c = str.charCodeAt(i);\n\t                    if ((c >= 0x0000) && (c <= 0x007F)) {\n\t                        out += str.charAt(i);\n\t                    } else if (c > 0x07FF) {\n\t                        out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n\t                        out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n\t                        out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n\t                    } else {\n\t                        out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n\t                        out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n\t                    }\n\t                }\n\t                return out;\n\t            },\n\n\t            addCookies: function (cookies) {\n\t                /* Parameters:\n\t                 *  (Object) cookies - either a map of cookie names\n\t                 *    to string values or to maps of cookie values.\n\t                 *\n\t                 * For example:\n\t                 * { \"myCookie\": \"1234\" }\n\t                 *\n\t                 * or:\n\t                 * { \"myCookie\": {\n\t                 *      \"value\": \"1234\",\n\t                 *      \"domain\": \".example.org\",\n\t                 *      \"path\": \"/\",\n\t                 *      \"expires\": expirationDate\n\t                 *      }\n\t                 *  }\n\t                 *\n\t                 *  These values get passed to Strophe.Connection via\n\t                 *   options.cookies\n\t                 */\n\t                var cookieName, cookieObj, isObj, cookieValue, expires, domain, path;\n\t                for (cookieName in (cookies || {})) {\n\t                    expires = '';\n\t                    domain = '';\n\t                    path = '';\n\t                    cookieObj = cookies[cookieName];\n\t                    isObj = typeof cookieObj == \"object\";\n\t                    cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\t                    if (isObj) {\n\t                        expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n\t                        domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n\t                        path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n\t                    }\n\t                    document.cookie =\n\t                        cookieName + '=' + cookieValue + expires + domain + path;\n\t                }\n\t            }\n\t        };\n\t        return utils;\n\t    }));\n\n\t    /*\n\t     This program is distributed under the terms of the MIT license.\n\t     Please see the LICENSE file for details.\n\n\t     Copyright 2006-2008, OGG, LLC\n\t     */\n\n\t    /* jshint undef: true, unused: true:, noarg: true, latedef: true */\n\t    /* global define */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_LOCAL_MODULE_4__ = (function () {\n\t                return factory();\n\t            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n\t        } else {\n\t            // Browser globals\n\t            return factory();\n\t        }\n\t    }(this, function () {\n\n\t        /** PrivateFunction: Function.prototype.bind\n\t         *  Bind a function to an instance.\n\t         *\n\t         *  This Function object extension method creates a bound method similar\n\t         *  to those in Python.  This means that the 'this' object will point\n\t         *  to the instance you want.  See\n\t         *  <a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind'>MDC's bind() documentation</a> and\n\t         *  <a href='http://benjamin.smedbergs.us/blog/2007-01-03/bound-functions-and-function-imports-in-javascript/'>Bound Functions and Function Imports in JavaScript</a>\n\t         *  for a complete explanation.\n\t         *\n\t         *  This extension already exists in some browsers (namely, Firefox 3), but\n\t         *  we provide it to support those that don't.\n\t         *\n\t         *  Parameters:\n\t         *    (Object) obj - The object that will become 'this' in the bound function.\n\t         *    (Object) argN - An option argument that will be prepended to the\n\t         *      arguments given for the function call\n\t         *\n\t         *  Returns:\n\t         *    The bound function.\n\t         */\n\t        if (!Function.prototype.bind) {\n\t            Function.prototype.bind = function (obj /*, arg1, arg2, ... */) {\n\t                var func = this;\n\t                var _slice = Array.prototype.slice;\n\t                var _concat = Array.prototype.concat;\n\t                var _args = _slice.call(arguments, 1);\n\n\t                return function () {\n\t                    return func.apply(obj ? obj : this,\n\t                        _concat.call(_args,\n\t                            _slice.call(arguments, 0)));\n\t                };\n\t            };\n\t        }\n\n\t        /** PrivateFunction: Array.isArray\n\t         *  This is a polyfill for the ES5 Array.isArray method.\n\t         */\n\t        if (!Array.isArray) {\n\t            Array.isArray = function (arg) {\n\t                return Object.prototype.toString.call(arg) === '[object Array]';\n\t            };\n\t        }\n\n\t        /** PrivateFunction: Array.prototype.indexOf\n\t         *  Return the index of an object in an array.\n\t         *\n\t         *  This function is not supplied by some JavaScript implementations, so\n\t         *  we provide it if it is missing.  This code is from:\n\t         *  http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:indexOf\n\t         *\n\t         *  Parameters:\n\t         *    (Object) elt - The object to look for.\n\t         *    (Integer) from - The index from which to start looking. (optional).\n\t         *\n\t         *  Returns:\n\t         *    The index of elt in the array or -1 if not found.\n\t         */\n\t        if (!Array.prototype.indexOf) {\n\t            Array.prototype.indexOf = function (elt /*, from*/) {\n\t                var len = this.length;\n\n\t                var from = Number(arguments[1]) || 0;\n\t                from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\t                if (from < 0) {\n\t                    from += len;\n\t                }\n\n\t                for (; from < len; from++) {\n\t                    if (from in this && this[from] === elt) {\n\t                        return from;\n\t                    }\n\t                }\n\n\t                return -1;\n\t            };\n\t        }\n\t    }));\n\n\t    /*\n\t     This program is distributed under the terms of the MIT license.\n\t     Please see the LICENSE file for details.\n\n\t     Copyright 2006-2008, OGG, LLC\n\t     */\n\n\t    /* jshint undef: true, unused: true:, noarg: true, latedef: true */\n\t    /*global define, document, window, setTimeout, clearTimeout, console, ActiveXObject, DOMParser */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t                __WEBPACK_LOCAL_MODULE_1__,\n\t                __WEBPACK_LOCAL_MODULE_0__,\n\t                __WEBPACK_LOCAL_MODULE_2__,\n\t                __WEBPACK_LOCAL_MODULE_3__,\n\t                __WEBPACK_LOCAL_MODULE_4__\n\t            ], __WEBPACK_LOCAL_MODULE_5__ = (function () {\n\t                return factory.apply(this, arguments);\n\t            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n\t        } else {\n\t            // Browser globals\n\t            var o = factory(root.SHA1, root.Base64, root.MD5, root.stropheUtils);\n\t            window.Strophe = o.Strophe;\n\t            window.$build = o.$build;\n\t            window.$iq = o.$iq;\n\t            window.$msg = o.$msg;\n\t            window.$pres = o.$pres;\n\t            window.SHA1 = o.SHA1;\n\t            window.Base64 = o.Base64;\n\t            window.MD5 = o.MD5;\n\t            window.b64_hmac_sha1 = o.SHA1.b64_hmac_sha1;\n\t            window.b64_sha1 = o.SHA1.b64_sha1;\n\t            window.str_hmac_sha1 = o.SHA1.str_hmac_sha1;\n\t            window.str_sha1 = o.SHA1.str_sha1;\n\t        }\n\t    }(this, function (SHA1, Base64, MD5, utils) {\n\n\t        var Strophe;\n\n\t        /** Function: $build\n\t         *  Create a Strophe.Builder.\n\t         *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n\t         *\n\t         *  Parameters:\n\t         *    (String) name - The root element name.\n\t         *    (Object) attrs - The attributes for the root element in object notation.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Builder object.\n\t         */\n\t        function $build(name, attrs) {\n\t            return new Strophe.Builder(name, attrs);\n\t        }\n\n\t        /** Function: $msg\n\t         *  Create a Strophe.Builder with a <message/> element as the root.\n\t         *\n\t         *  Parameters:\n\t         *    (Object) attrs - The <message/> element attributes in object notation.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Builder object.\n\t         */\n\t        function $msg(attrs) {\n\t            return new Strophe.Builder(\"message\", attrs);\n\t        }\n\n\t        /** Function: $iq\n\t         *  Create a Strophe.Builder with an <iq/> element as the root.\n\t         *\n\t         *  Parameters:\n\t         *    (Object) attrs - The <iq/> element attributes in object notation.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Builder object.\n\t         */\n\t        function $iq(attrs) {\n\t            return new Strophe.Builder(\"iq\", attrs);\n\t        }\n\n\t        /** Function: $pres\n\t         *  Create a Strophe.Builder with a <presence/> element as the root.\n\t         *\n\t         *  Parameters:\n\t         *    (Object) attrs - The <presence/> element attributes in object notation.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Builder object.\n\t         */\n\t        function $pres(attrs) {\n\t            return new Strophe.Builder(\"presence\", attrs);\n\t        }\n\n\t        /** Class: Strophe\n\t         *  An object container for all Strophe library functions.\n\t         *\n\t         *  This class is just a container for all the objects and constants\n\t         *  used in the library.  It is not meant to be instantiated, but to\n\t         *  provide a namespace for library objects, constants, and functions.\n\t         */\n\t        Strophe = {\n\t            /** Constant: VERSION\n\t             *  The version of the Strophe library. Unreleased builds will have\n\t             *  a version of head-HASH where HASH is a partial revision.\n\t             */\n\t            VERSION: \"1.2.8\",\n\n\t            /** Constants: XMPP Namespace Constants\n\t             *  Common namespace constants from the XMPP RFCs and XEPs.\n\t             *\n\t             *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n\t             *  NS.BOSH - BOSH namespace from XEP 206.\n\t             *  NS.CLIENT - Main XMPP client namespace.\n\t             *  NS.AUTH - Legacy authentication namespace.\n\t             *  NS.ROSTER - Roster operations namespace.\n\t             *  NS.PROFILE - Profile namespace.\n\t             *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n\t             *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n\t             *  NS.MUC - Multi-User Chat namespace from XEP 45.\n\t             *  NS.SASL - XMPP SASL namespace from RFC 3920.\n\t             *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n\t             *  NS.BIND - XMPP Binding namespace from RFC 3920.\n\t             *  NS.SESSION - XMPP Session namespace from RFC 3920.\n\t             *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n\t             *  NS.XHTML - XHTML body namespace from XEP 71.\n\t             */\n\t            NS: {\n\t                HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n\t                BOSH: \"urn:xmpp:xbosh\",\n\t                CLIENT: \"jabber:client\",\n\t                AUTH: \"jabber:iq:auth\",\n\t                ROSTER: \"jabber:iq:roster\",\n\t                PROFILE: \"jabber:iq:profile\",\n\t                DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n\t                DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n\t                MUC: \"http://jabber.org/protocol/muc\",\n\t                SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n\t                STREAM: \"http://etherx.jabber.org/streams\",\n\t                FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n\t                BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n\t                SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n\t                VERSION: \"jabber:iq:version\",\n\t                STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n\t                XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n\t                XHTML: \"http://www.w3.org/1999/xhtml\"\n\t            },\n\n\t            /** Constants: XHTML_IM Namespace\n\t             *  contains allowed tags, tag attributes, and css properties.\n\t             *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n\t             *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n\t             *  allowed tags and their attributes.\n\t             */\n\t            XHTML: {\n\t                tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n\t                attributes: {\n\t                    'a': ['href'],\n\t                    'blockquote': ['style'],\n\t                    'br': [],\n\t                    'cite': ['style'],\n\t                    'em': [],\n\t                    'img': ['src', 'alt', 'style', 'height', 'width'],\n\t                    'li': ['style'],\n\t                    'ol': ['style'],\n\t                    'p': ['style'],\n\t                    'span': ['style'],\n\t                    'strong': [],\n\t                    'ul': ['style'],\n\t                    'body': []\n\t                },\n\t                css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\t                /** Function: XHTML.validTag\n\t                 *\n\t                 * Utility method to determine whether a tag is allowed\n\t                 * in the XHTML_IM namespace.\n\t                 *\n\t                 * XHTML tag names are case sensitive and must be lower case.\n\t                 */\n\t                validTag: function (tag) {\n\t                    for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n\t                        if (tag == Strophe.XHTML.tags[i]) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    return false;\n\t                },\n\t                /** Function: XHTML.validAttribute\n\t                 *\n\t                 * Utility method to determine whether an attribute is allowed\n\t                 * as recommended per XEP-0071\n\t                 *\n\t                 * XHTML attribute names are case sensitive and must be lower case.\n\t                 */\n\t                validAttribute: function (tag, attribute) {\n\t                    if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n\t                        for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n\t                            if (attribute == Strophe.XHTML.attributes[tag][i]) {\n\t                                return true;\n\t                            }\n\t                        }\n\t                    }\n\t                    return false;\n\t                },\n\t                validCSS: function (style) {\n\t                    for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n\t                        if (style == Strophe.XHTML.css[i]) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    return false;\n\t                }\n\t            },\n\n\t            /** Constants: Connection Status Constants\n\t             *  Connection status constants for use by the connection handler\n\t             *  callback.\n\t             *\n\t             *  Status.ERROR - An error has occurred\n\t             *  Status.CONNECTING - The connection is currently being made\n\t             *  Status.CONNFAIL - The connection attempt failed\n\t             *  Status.AUTHENTICATING - The connection is authenticating\n\t             *  Status.AUTHFAIL - The authentication attempt failed\n\t             *  Status.CONNECTED - The connection has succeeded\n\t             *  Status.DISCONNECTED - The connection has been terminated\n\t             *  Status.DISCONNECTING - The connection is currently being terminated\n\t             *  Status.ATTACHED - The connection has been attached\n\t             *  Status.CONNTIMEOUT - The connection has timed out\n\t             */\n\t            Status: {\n\t                ERROR: 0,\n\t                CONNECTING: 1,\n\t                CONNFAIL: 2,\n\t                AUTHENTICATING: 3,\n\t                AUTHFAIL: 4,\n\t                CONNECTED: 5,\n\t                DISCONNECTED: 6,\n\t                DISCONNECTING: 7,\n\t                ATTACHED: 8,\n\t                REDIRECT: 9,\n\t                CONNTIMEOUT: 10\n\t            },\n\n\t            /** Constants: Log Level Constants\n\t             *  Logging level indicators.\n\t             *\n\t             *  LogLevel.DEBUG - Debug output\n\t             *  LogLevel.INFO - Informational output\n\t             *  LogLevel.WARN - Warnings\n\t             *  LogLevel.ERROR - Errors\n\t             *  LogLevel.FATAL - Fatal errors\n\t             */\n\t            LogLevel: {\n\t                DEBUG: 0,\n\t                INFO: 1,\n\t                WARN: 2,\n\t                ERROR: 3,\n\t                FATAL: 4\n\t            },\n\n\t            /** PrivateConstants: DOM Element Type Constants\n\t             *  DOM element types.\n\t             *\n\t             *  ElementType.NORMAL - Normal element.\n\t             *  ElementType.TEXT - Text data element.\n\t             *  ElementType.FRAGMENT - XHTML fragment element.\n\t             */\n\t            ElementType: {\n\t                NORMAL: 1,\n\t                TEXT: 3,\n\t                CDATA: 4,\n\t                FRAGMENT: 11\n\t            },\n\n\t            /** PrivateConstants: Timeout Values\n\t             *  Timeout values for error states.  These values are in seconds.\n\t             *  These should not be changed unless you know exactly what you are\n\t             *  doing.\n\t             *\n\t             *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n\t             *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n\t             *      This defaults to 1.1, and with default wait, 66 seconds.\n\t             *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n\t             *      Strophe can detect early failure, it will consider the request\n\t             *      failed if it doesn't return after\n\t             *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n\t             *      This defaults to 0.1, and with default wait, 6 seconds.\n\t             */\n\t            TIMEOUT: 1.1,\n\t            SECONDARY_TIMEOUT: 0.1,\n\n\t            /** Function: addNamespace\n\t             *  This function is used to extend the current namespaces in\n\t             *  Strophe.NS.  It takes a key and a value with the key being the\n\t             *  name of the new namespace, with its actual value.\n\t             *  For example:\n\t             *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n\t             *\n\t             *  Parameters:\n\t             *    (String) name - The name under which the namespace will be\n\t             *      referenced under Strophe.NS\n\t             *    (String) value - The actual namespace.\n\t             */\n\t            addNamespace: function (name, value) {\n\t                Strophe.NS[name] = value;\n\t            },\n\n\t            /** Function: forEachChild\n\t             *  Map a function over some or all child elements of a given element.\n\t             *\n\t             *  This is a small convenience function for mapping a function over\n\t             *  some or all of the children of an element.  If elemName is null, all\n\t             *  children will be passed to the function, otherwise only children\n\t             *  whose tag names match elemName will be passed.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The element to operate on.\n\t             *    (String) elemName - The child element tag name filter.\n\t             *    (Function) func - The function to apply to each child.  This\n\t             *      function should take a single argument, a DOM element.\n\t             */\n\t            forEachChild: function (elem, elemName, func) {\n\t                var i, childNode;\n\n\t                for (i = 0; i < elem.childNodes.length; i++) {\n\t                    childNode = elem.childNodes[i];\n\t                    if (childNode.nodeType == Strophe.ElementType.NORMAL &&\n\t                        (!elemName || this.isTagEqual(childNode, elemName))) {\n\t                        func(childNode);\n\t                    }\n\t                }\n\t            },\n\n\t            /** Function: isTagEqual\n\t             *  Compare an element's tag name with a string.\n\t             *\n\t             *  This function is case sensitive.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) el - A DOM element.\n\t             *    (String) name - The element name.\n\t             *\n\t             *  Returns:\n\t             *    true if the element's tag name matches _el_, and false\n\t             *    otherwise.\n\t             */\n\t            isTagEqual: function (el, name) {\n\t                return el.tagName == name;\n\t            },\n\n\t            /** PrivateVariable: _xmlGenerator\n\t             *  _Private_ variable that caches a DOM document to\n\t             *  generate elements.\n\t             */\n\t            _xmlGenerator: null,\n\n\t            /** PrivateFunction: _makeGenerator\n\t             *  _Private_ function that creates a dummy XML DOM document to serve as\n\t             *  an element and text node generator.\n\t             */\n\t            _makeGenerator: function () {\n\t                var doc;\n\n\t                // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n\t                // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n\t                // less than 10 in the case of IE9 and below.\n\t                if (document.implementation.createDocument === undefined ||\n\t                    document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n\t                    doc = this._getIEXmlDom();\n\t                    doc.appendChild(doc.createElement('strophe'));\n\t                } else {\n\t                    doc = document.implementation\n\t                        .createDocument('jabber:client', 'strophe', null);\n\t                }\n\n\t                return doc;\n\t            },\n\n\t            /** Function: xmlGenerator\n\t             *  Get the DOM document to generate elements.\n\t             *\n\t             *  Returns:\n\t             *    The currently used DOM document.\n\t             */\n\t            xmlGenerator: function () {\n\t                if (!Strophe._xmlGenerator) {\n\t                    Strophe._xmlGenerator = Strophe._makeGenerator();\n\t                }\n\t                return Strophe._xmlGenerator;\n\t            },\n\n\t            /** PrivateFunction: _getIEXmlDom\n\t             *  Gets IE xml doc object\n\t             *\n\t             *  Returns:\n\t             *    A Microsoft XML DOM Object\n\t             *  See Also:\n\t             *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n\t             */\n\t            _getIEXmlDom: function () {\n\t                var doc = null;\n\t                var docStrings = [\n\t                    \"Msxml2.DOMDocument.6.0\",\n\t                    \"Msxml2.DOMDocument.5.0\",\n\t                    \"Msxml2.DOMDocument.4.0\",\n\t                    \"MSXML2.DOMDocument.3.0\",\n\t                    \"MSXML2.DOMDocument\",\n\t                    \"MSXML.DOMDocument\",\n\t                    \"Microsoft.XMLDOM\"\n\t                ];\n\n\t                for (var d = 0; d < docStrings.length; d++) {\n\t                    if (doc === null) {\n\t                        try {\n\t                            doc = new ActiveXObject(docStrings[d]);\n\t                        } catch (e) {\n\t                            doc = null;\n\t                        }\n\t                    } else {\n\t                        break;\n\t                    }\n\t                }\n\n\t                return doc;\n\t            },\n\n\t            /** Function: xmlElement\n\t             *  Create an XML DOM element.\n\t             *\n\t             *  This function creates an XML DOM element correctly across all\n\t             *  implementations. Note that these are not HTML DOM elements, which\n\t             *  aren't appropriate for XMPP stanzas.\n\t             *\n\t             *  Parameters:\n\t             *    (String) name - The name for the element.\n\t             *    (Array|Object) attrs - An optional array or object containing\n\t             *      key/value pairs to use as element attributes. The object should\n\t             *      be in the format {'key': 'value'} or {key: 'value'}. The array\n\t             *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n\t             *    (String) text - The text child data for the element.\n\t             *\n\t             *  Returns:\n\t             *    A new XML DOM element.\n\t             */\n\t            xmlElement: function (name) {\n\t                if (!name) {\n\t                    return null;\n\t                }\n\n\t                var node = Strophe.xmlGenerator().createElement(name);\n\n\t                // FIXME: this should throw errors if args are the wrong type or\n\t                // there are more than two optional args\n\t                var a, i, k;\n\t                for (a = 1; a < arguments.length; a++) {\n\t                    var arg = arguments[a];\n\t                    if (!arg) {\n\t                        continue;\n\t                    }\n\t                    if (typeof(arg) == \"string\" ||\n\t                        typeof(arg) == \"number\") {\n\t                        node.appendChild(Strophe.xmlTextNode(arg));\n\t                    } else if (typeof(arg) == \"object\" &&\n\t                        typeof(arg.sort) == \"function\") {\n\t                        for (i = 0; i < arg.length; i++) {\n\t                            var attr = arg[i];\n\t                            if (typeof(attr) == \"object\" &&\n\t                                typeof(attr.sort) == \"function\" &&\n\t                                attr[1] !== undefined &&\n\t                                attr[1] !== null) {\n\t                                node.setAttribute(attr[0], attr[1]);\n\t                            }\n\t                        }\n\t                    } else if (typeof(arg) == \"object\") {\n\t                        for (k in arg) {\n\t                            if (arg.hasOwnProperty(k)) {\n\t                                if (arg[k] !== undefined &&\n\t                                    arg[k] !== null) {\n\t                                    node.setAttribute(k, arg[k]);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\n\t                return node;\n\t            },\n\n\t            /*  Function: xmlescape\n\t             *  Excapes invalid xml characters.\n\t             *\n\t             *  Parameters:\n\t             *     (String) text - text to escape.\n\t             *\n\t             *  Returns:\n\t             *      Escaped text.\n\t             */\n\t            xmlescape: function (text) {\n\t                text = text.replace(/\\&/g, \"&amp;\");\n\t                text = text.replace(/</g, \"&lt;\");\n\t                text = text.replace(/>/g, \"&gt;\");\n\t                text = text.replace(/'/g, \"&apos;\");\n\t                text = text.replace(/\"/g, \"&quot;\");\n\t                return text;\n\t            },\n\n\t            /*  Function: xmlunescape\n\t             *  Unexcapes invalid xml characters.\n\t             *\n\t             *  Parameters:\n\t             *     (String) text - text to unescape.\n\t             *\n\t             *  Returns:\n\t             *      Unescaped text.\n\t             */\n\t            xmlunescape: function (text) {\n\t                text = text.replace(/\\&amp;/g, \"&\");\n\t                text = text.replace(/&lt;/g, \"<\");\n\t                text = text.replace(/&gt;/g, \">\");\n\t                text = text.replace(/&apos;/g, \"'\");\n\t                text = text.replace(/&quot;/g, \"\\\"\");\n\t                return text;\n\t            },\n\n\t            /** Function: xmlTextNode\n\t             *  Creates an XML DOM text node.\n\t             *\n\t             *  Provides a cross implementation version of document.createTextNode.\n\t             *\n\t             *  Parameters:\n\t             *    (String) text - The content of the text node.\n\t             *\n\t             *  Returns:\n\t             *    A new XML DOM text node.\n\t             */\n\t            xmlTextNode: function (text) {\n\t                return Strophe.xmlGenerator().createTextNode(text);\n\t            },\n\n\t            /** Function: xmlHtmlNode\n\t             *  Creates an XML DOM html node.\n\t             *\n\t             *  Parameters:\n\t             *    (String) html - The content of the html node.\n\t             *\n\t             *  Returns:\n\t             *    A new XML DOM text node.\n\t             */\n\t            xmlHtmlNode: function (html) {\n\t                var node;\n\t                //ensure text is escaped\n\t                if (window.DOMParser) {\n\t                    var parser = new DOMParser();\n\t                    node = parser.parseFromString(html, \"text/xml\");\n\t                } else {\n\t                    node = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t                    node.async = \"false\";\n\t                    node.loadXML(html);\n\t                }\n\t                return node;\n\t            },\n\n\t            /** Function: getText\n\t             *  Get the concatenation of all text children of an element.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - A DOM element.\n\t             *\n\t             *  Returns:\n\t             *    A String with the concatenated text of all text element children.\n\t             */\n\t            getText: function (elem) {\n\t                if (!elem) {\n\t                    return null;\n\t                }\n\n\t                var str = \"\";\n\t                if (elem.childNodes.length === 0 && elem.nodeType ==\n\t                    Strophe.ElementType.TEXT) {\n\t                    str += elem.nodeValue;\n\t                }\n\n\t                for (var i = 0; i < elem.childNodes.length; i++) {\n\t                    if (elem.childNodes[i].nodeType == Strophe.ElementType.TEXT) {\n\t                        str += elem.childNodes[i].nodeValue;\n\t                    }\n\t                }\n\n\t                return Strophe.xmlescape(str);\n\t            },\n\n\t            /** Function: copyElement\n\t             *  Copy an XML DOM element.\n\t             *\n\t             *  This function copies a DOM element and all its descendants and returns\n\t             *  the new copy.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - A DOM element.\n\t             *\n\t             *  Returns:\n\t             *    A new, copied DOM element tree.\n\t             */\n\t            copyElement: function (elem) {\n\t                var i, el;\n\t                if (elem.nodeType == Strophe.ElementType.NORMAL) {\n\t                    el = Strophe.xmlElement(elem.tagName);\n\n\t                    for (i = 0; i < elem.attributes.length; i++) {\n\t                        el.setAttribute(elem.attributes[i].nodeName,\n\t                            elem.attributes[i].value);\n\t                    }\n\n\t                    for (i = 0; i < elem.childNodes.length; i++) {\n\t                        el.appendChild(Strophe.copyElement(elem.childNodes[i]));\n\t                    }\n\t                } else if (elem.nodeType == Strophe.ElementType.TEXT) {\n\t                    el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n\t                }\n\n\t                return el;\n\t            },\n\n\n\t            /** Function: createHtml\n\t             *  Copy an HTML DOM element into an XML DOM.\n\t             *\n\t             *  This function copies a DOM element and all its descendants and returns\n\t             *  the new copy.\n\t             *\n\t             *  Parameters:\n\t             *    (HTMLElement) elem - A DOM element.\n\t             *\n\t             *  Returns:\n\t             *    A new, copied DOM element tree.\n\t             */\n\t            createHtml: function (elem) {\n\t                var i, el, j, tag, attribute, value, css, cssAttrs, attr, cssName, cssValue;\n\t                if (elem.nodeType == Strophe.ElementType.NORMAL) {\n\t                    tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\t                    if (Strophe.XHTML.validTag(tag)) {\n\t                        try {\n\t                            el = Strophe.xmlElement(tag);\n\t                            for (i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n\t                                attribute = Strophe.XHTML.attributes[tag][i];\n\t                                value = elem.getAttribute(attribute);\n\t                                if (typeof value == 'undefined' || value === null || value === '' || value === false || value === 0) {\n\t                                    continue;\n\t                                }\n\t                                if (attribute == 'style' && typeof value == 'object') {\n\t                                    if (typeof value.cssText != 'undefined') {\n\t                                        value = value.cssText; // we're dealing with IE, need to get CSS out\n\t                                    }\n\t                                }\n\t                                // filter out invalid css styles\n\t                                if (attribute == 'style') {\n\t                                    css = [];\n\t                                    cssAttrs = value.split(';');\n\t                                    for (j = 0; j < cssAttrs.length; j++) {\n\t                                        attr = cssAttrs[j].split(':');\n\t                                        cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\t                                        if (Strophe.XHTML.validCSS(cssName)) {\n\t                                            cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n\t                                            css.push(cssName + ': ' + cssValue);\n\t                                        }\n\t                                    }\n\t                                    if (css.length > 0) {\n\t                                        value = css.join('; ');\n\t                                        el.setAttribute(attribute, value);\n\t                                    }\n\t                                } else {\n\t                                    el.setAttribute(attribute, value);\n\t                                }\n\t                            }\n\n\t                            for (i = 0; i < elem.childNodes.length; i++) {\n\t                                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n\t                            }\n\t                        } catch (e) { // invalid elements\n\t                            el = Strophe.xmlTextNode('');\n\t                        }\n\t                    } else {\n\t                        el = Strophe.xmlGenerator().createDocumentFragment();\n\t                        for (i = 0; i < elem.childNodes.length; i++) {\n\t                            el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n\t                        }\n\t                    }\n\t                } else if (elem.nodeType == Strophe.ElementType.FRAGMENT) {\n\t                    el = Strophe.xmlGenerator().createDocumentFragment();\n\t                    for (i = 0; i < elem.childNodes.length; i++) {\n\t                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n\t                    }\n\t                } else if (elem.nodeType == Strophe.ElementType.TEXT) {\n\t                    el = Strophe.xmlTextNode(elem.nodeValue);\n\t                }\n\n\t                return el;\n\t            },\n\n\t            /** Function: escapeNode\n\t             *  Escape the node part (also called local part) of a JID.\n\t             *\n\t             *  Parameters:\n\t             *    (String) node - A node (or local part).\n\t             *\n\t             *  Returns:\n\t             *    An escaped node (or local part).\n\t             */\n\t            escapeNode: function (node) {\n\t                if (typeof node !== \"string\") {\n\t                    return node;\n\t                }\n\t                return node.replace(/^\\s+|\\s+$/g, '')\n\t                    .replace(/\\\\/g, \"\\\\5c\")\n\t                    .replace(/ /g, \"\\\\20\")\n\t                    .replace(/\\\"/g, \"\\\\22\")\n\t                    .replace(/\\&/g, \"\\\\26\")\n\t                    .replace(/\\'/g, \"\\\\27\")\n\t                    .replace(/\\//g, \"\\\\2f\")\n\t                    .replace(/:/g, \"\\\\3a\")\n\t                    .replace(/</g, \"\\\\3c\")\n\t                    .replace(/>/g, \"\\\\3e\")\n\t                    .replace(/@/g, \"\\\\40\");\n\t            },\n\n\t            /** Function: unescapeNode\n\t             *  Unescape a node part (also called local part) of a JID.\n\t             *\n\t             *  Parameters:\n\t             *    (String) node - A node (or local part).\n\t             *\n\t             *  Returns:\n\t             *    An unescaped node (or local part).\n\t             */\n\t            unescapeNode: function (node) {\n\t                if (typeof node !== \"string\") {\n\t                    return node;\n\t                }\n\t                return node.replace(/\\\\20/g, \" \")\n\t                    .replace(/\\\\22/g, '\"')\n\t                    .replace(/\\\\26/g, \"&\")\n\t                    .replace(/\\\\27/g, \"'\")\n\t                    .replace(/\\\\2f/g, \"/\")\n\t                    .replace(/\\\\3a/g, \":\")\n\t                    .replace(/\\\\3c/g, \"<\")\n\t                    .replace(/\\\\3e/g, \">\")\n\t                    .replace(/\\\\40/g, \"@\")\n\t                    .replace(/\\\\5c/g, \"\\\\\");\n\t            },\n\n\t            /** Function: getNodeFromJid\n\t             *  Get the node portion of a JID String.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - A JID.\n\t             *\n\t             *  Returns:\n\t             *    A String containing the node.\n\t             */\n\t            getNodeFromJid: function (jid) {\n\t                if (jid.indexOf(\"@\") < 0) {\n\t                    return null;\n\t                }\n\t                return jid.split(\"@\")[0];\n\t            },\n\n\t            /** Function: getDomainFromJid\n\t             *  Get the domain portion of a JID String.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - A JID.\n\t             *\n\t             *  Returns:\n\t             *    A String containing the domain.\n\t             */\n\t            getDomainFromJid: function (jid) {\n\t                var bare = Strophe.getBareJidFromJid(jid);\n\t                if (bare.indexOf(\"@\") < 0) {\n\t                    return bare;\n\t                } else {\n\t                    var parts = bare.split(\"@\");\n\t                    parts.splice(0, 1);\n\t                    return parts.join('@');\n\t                }\n\t            },\n\n\t            /** Function: getResourceFromJid\n\t             *  Get the resource portion of a JID String.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - A JID.\n\t             *\n\t             *  Returns:\n\t             *    A String containing the resource.\n\t             */\n\t            getResourceFromJid: function (jid) {\n\t                var s = jid.split(\"/\");\n\t                if (s.length < 2) {\n\t                    return null;\n\t                }\n\t                s.splice(0, 1);\n\t                return s.join('/');\n\t            },\n\n\t            /** Function: getBareJidFromJid\n\t             *  Get the bare JID from a JID String.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - A JID.\n\t             *\n\t             *  Returns:\n\t             *    A String containing the bare JID.\n\t             */\n\t            getBareJidFromJid: function (jid) {\n\t                return jid ? jid.split(\"/\")[0] : null;\n\t            },\n\n\t            /** Function: log\n\t             *  User overrideable logging function.\n\t             *\n\t             *  This function is called whenever the Strophe library calls any\n\t             *  of the logging functions.  The default implementation of this\n\t             *  function does nothing.  If client code wishes to handle the logging\n\t             *  messages, it should override this with\n\t             *  > Strophe.log = function (level, msg) {\n\t     *  >   (user code here)\n\t     *  > };\n\t             *\n\t             *  Please note that data sent and received over the wire is logged\n\t             *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n\t             *\n\t             *  The different levels and their meanings are\n\t             *\n\t             *    DEBUG - Messages useful for debugging purposes.\n\t             *    INFO - Informational messages.  This is mostly information like\n\t             *      'disconnect was called' or 'SASL auth succeeded'.\n\t             *    WARN - Warnings about potential problems.  This is mostly used\n\t             *      to report transient connection errors like request timeouts.\n\t             *    ERROR - Some error occurred.\n\t             *    FATAL - A non-recoverable fatal error occurred.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) level - The log level of the log message.  This will\n\t             *      be one of the values in Strophe.LogLevel.\n\t             *    (String) msg - The log message.\n\t             */\n\t            /* jshint ignore:start */\n\t            log: function (level, msg) {\n\t                return;\n\t            },\n\t            /* jshint ignore:end */\n\n\t            /** Function: debug\n\t             *  Log a message at the Strophe.LogLevel.DEBUG level.\n\t             *\n\t             *  Parameters:\n\t             *    (String) msg - The log message.\n\t             */\n\t            debug: function (msg) {\n\t                this.log(this.LogLevel.DEBUG, msg);\n\t            },\n\n\t            /** Function: info\n\t             *  Log a message at the Strophe.LogLevel.INFO level.\n\t             *\n\t             *  Parameters:\n\t             *    (String) msg - The log message.\n\t             */\n\t            info: function (msg) {\n\t                this.log(this.LogLevel.INFO, msg);\n\t            },\n\n\t            /** Function: warn\n\t             *  Log a message at the Strophe.LogLevel.WARN level.\n\t             *\n\t             *  Parameters:\n\t             *    (String) msg - The log message.\n\t             */\n\t            warn: function (msg) {\n\t                this.log(this.LogLevel.WARN, msg);\n\t            },\n\n\t            /** Function: error\n\t             *  Log a message at the Strophe.LogLevel.ERROR level.\n\t             *\n\t             *  Parameters:\n\t             *    (String) msg - The log message.\n\t             */\n\t            error: function (msg) {\n\t                this.log(this.LogLevel.ERROR, msg);\n\t            },\n\n\t            /** Function: fatal\n\t             *  Log a message at the Strophe.LogLevel.FATAL level.\n\t             *\n\t             *  Parameters:\n\t             *    (String) msg - The log message.\n\t             */\n\t            fatal: function (msg) {\n\t                this.log(this.LogLevel.FATAL, msg);\n\t            },\n\n\t            /** Function: serialize\n\t             *  Render a DOM element and all descendants to a String.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - A DOM element.\n\t             *\n\t             *  Returns:\n\t             *    The serialized element tree as a String.\n\t             */\n\t            serialize: function (elem) {\n\t                var result;\n\n\t                if (!elem) {\n\t                    return null;\n\t                }\n\n\t                if (typeof(elem.tree) === \"function\") {\n\t                    elem = elem.tree();\n\t                }\n\n\t                var nodeName = elem.nodeName;\n\t                var i, child;\n\n\t                if (elem.getAttribute(\"_realname\")) {\n\t                    nodeName = elem.getAttribute(\"_realname\");\n\t                }\n\n\t                result = \"<\" + nodeName;\n\t                for (i = 0; i < elem.attributes.length; i++) {\n\t                    if (elem.attributes[i].nodeName != \"_realname\") {\n\t                        result += \" \" + elem.attributes[i].nodeName +\n\t                            \"='\" + Strophe.xmlescape(elem.attributes[i].value) + \"'\";\n\t                    }\n\t                }\n\n\t                if (elem.childNodes.length > 0) {\n\t                    result += \">\";\n\t                    for (i = 0; i < elem.childNodes.length; i++) {\n\t                        child = elem.childNodes[i];\n\t                        switch (child.nodeType) {\n\t                            case Strophe.ElementType.NORMAL:\n\t                                // normal element, so recurse\n\t                                result += Strophe.serialize(child);\n\t                                break;\n\t                            case Strophe.ElementType.TEXT:\n\t                                // text element to escape values\n\t                                result += Strophe.xmlescape(child.nodeValue);\n\t                                break;\n\t                            case Strophe.ElementType.CDATA:\n\t                                // cdata section so don't escape values\n\t                                result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n\t                        }\n\t                    }\n\t                    result += \"</\" + nodeName + \">\";\n\t                } else {\n\t                    result += \"/>\";\n\t                }\n\n\t                return result;\n\t            },\n\n\t            /** PrivateVariable: _requestId\n\t             *  _Private_ variable that keeps track of the request ids for\n\t             *  connections.\n\t             */\n\t            _requestId: 0,\n\n\t            /** PrivateVariable: Strophe.connectionPlugins\n\t             *  _Private_ variable Used to store plugin names that need\n\t             *  initialization on Strophe.Connection construction.\n\t             */\n\t            _connectionPlugins: {},\n\n\t            /** Function: addConnectionPlugin\n\t             *  Extends the Strophe.Connection object with the given plugin.\n\t             *\n\t             *  Parameters:\n\t             *    (String) name - The name of the extension.\n\t             *    (Object) ptype - The plugin's prototype.\n\t             */\n\t            addConnectionPlugin: function (name, ptype) {\n\t                Strophe._connectionPlugins[name] = ptype;\n\t            }\n\t        };\n\n\t        /** Class: Strophe.Builder\n\t         *  XML DOM builder.\n\t         *\n\t         *  This object provides an interface similar to JQuery but for building\n\t         *  DOM elements easily and rapidly.  All the functions except for toString()\n\t         *  and tree() return the object, so calls can be chained.  Here's an\n\t         *  example using the $iq() builder helper.\n\t         *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n\t         *  >     .c('query', {xmlns: 'strophe:example'})\n\t         *  >     .c('example')\n\t         *  >     .toString()\n\t         *  The above generates this XML fragment\n\t         *  > <iq to='you' from='me' type='get' id='1'>\n\t         *  >   <query xmlns='strophe:example'>\n\t         *  >     <example/>\n\t         *  >   </query>\n\t         *  > </iq>\n\t         *  The corresponding DOM manipulations to get a similar fragment would be\n\t         *  a lot more tedious and probably involve several helper variables.\n\t         *\n\t         *  Since adding children makes new operations operate on the child, up()\n\t         *  is provided to traverse up the tree.  To add two children, do\n\t         *  > builder.c('child1', ...).up().c('child2', ...)\n\t         *  The next operation on the Builder will be relative to the second child.\n\t         */\n\n\t        /** Constructor: Strophe.Builder\n\t         *  Create a Strophe.Builder object.\n\t         *\n\t         *  The attributes should be passed in object notation.  For example\n\t         *  > var b = new Builder('message', {to: 'you', from: 'me'});\n\t         *  or\n\t         *  > var b = new Builder('messsage', {'xml:lang': 'en'});\n\t         *\n\t         *  Parameters:\n\t         *    (String) name - The name of the root element.\n\t         *    (Object) attrs - The attributes for the root element in object notation.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Builder.\n\t         */\n\t        Strophe.Builder = function (name, attrs) {\n\t            // Set correct namespace for jabber:client elements\n\t            if (name == \"presence\" || name == \"message\" || name == \"iq\") {\n\t                if (attrs && !attrs.xmlns) {\n\t                    attrs.xmlns = Strophe.NS.CLIENT;\n\t                } else if (!attrs) {\n\t                    attrs = {xmlns: Strophe.NS.CLIENT};\n\t                }\n\t            }\n\n\t            // Holds the tree being built.\n\t            this.nodeTree = Strophe.xmlElement(name, attrs);\n\n\t            // Points to the current operation node.\n\t            this.node = this.nodeTree;\n\t        };\n\n\t        Strophe.Builder.prototype = {\n\t            /** Function: tree\n\t             *  Return the DOM tree.\n\t             *\n\t             *  This function returns the current DOM tree as an element object.  This\n\t             *  is suitable for passing to functions like Strophe.Connection.send().\n\t             *\n\t             *  Returns:\n\t             *    The DOM tree as a element object.\n\t             */\n\t            tree: function () {\n\t                return this.nodeTree;\n\t            },\n\n\t            /** Function: toString\n\t             *  Serialize the DOM tree to a String.\n\t             *\n\t             *  This function returns a string serialization of the current DOM\n\t             *  tree.  It is often used internally to pass data to a\n\t             *  Strophe.Request object.\n\t             *\n\t             *  Returns:\n\t             *    The serialized DOM tree in a String.\n\t             */\n\t            toString: function () {\n\t                return Strophe.serialize(this.nodeTree);\n\t            },\n\n\t            /** Function: up\n\t             *  Make the current parent element the new current element.\n\t             *\n\t             *  This function is often used after c() to traverse back up the tree.\n\t             *  For example, to add two children to the same element\n\t             *  > builder.c('child1', {}).up().c('child2', {});\n\t             *\n\t             *  Returns:\n\t             *    The Stophe.Builder object.\n\t             */\n\t            up: function () {\n\t                this.node = this.node.parentNode;\n\t                return this;\n\t            },\n\n\t            /** Function: attrs\n\t             *  Add or modify attributes of the current element.\n\t             *\n\t             *  The attributes should be passed in object notation.  This function\n\t             *  does not move the current element pointer.\n\t             *\n\t             *  Parameters:\n\t             *    (Object) moreattrs - The attributes to add/modify in object notation.\n\t             *\n\t             *  Returns:\n\t             *    The Strophe.Builder object.\n\t             */\n\t            attrs: function (moreattrs) {\n\t                for (var k in moreattrs) {\n\t                    if (moreattrs.hasOwnProperty(k)) {\n\t                        if (moreattrs[k] === undefined) {\n\t                            this.node.removeAttribute(k);\n\t                        } else {\n\t                            this.node.setAttribute(k, moreattrs[k]);\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\n\t            /** Function: c\n\t             *  Add a child to the current element and make it the new current\n\t             *  element.\n\t             *\n\t             *  This function moves the current element pointer to the child,\n\t             *  unless text is provided.  If you need to add another child, it\n\t             *  is necessary to use up() to go back to the parent in the tree.\n\t             *\n\t             *  Parameters:\n\t             *    (String) name - The name of the child.\n\t             *    (Object) attrs - The attributes of the child in object notation.\n\t             *    (String) text - The text to add to the child.\n\t             *\n\t             *  Returns:\n\t             *    The Strophe.Builder object.\n\t             */\n\t            c: function (name, attrs, text) {\n\t                var child = Strophe.xmlElement(name, attrs, text);\n\t                this.node.appendChild(child);\n\t                if (typeof text !== \"string\" && typeof text !== \"number\") {\n\t                    this.node = child;\n\t                }\n\t                return this;\n\t            },\n\n\t            /** Function: cnode\n\t             *  Add a child to the current element and make it the new current\n\t             *  element.\n\t             *\n\t             *  This function is the same as c() except that instead of using a\n\t             *  name and an attributes object to create the child it uses an\n\t             *  existing DOM element object.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - A DOM element.\n\t             *\n\t             *  Returns:\n\t             *    The Strophe.Builder object.\n\t             */\n\t            cnode: function (elem) {\n\t                var impNode;\n\t                var xmlGen = Strophe.xmlGenerator();\n\t                try {\n\t                    impNode = (xmlGen.importNode !== undefined);\n\t                }\n\t                catch (e) {\n\t                    impNode = false;\n\t                }\n\t                var newElem = impNode ?\n\t                    xmlGen.importNode(elem, true) :\n\t                    Strophe.copyElement(elem);\n\t                this.node.appendChild(newElem);\n\t                this.node = newElem;\n\t                return this;\n\t            },\n\n\t            /** Function: t\n\t             *  Add a child text element.\n\t             *\n\t             *  This *does not* make the child the new current element since there\n\t             *  are no children of text elements.\n\t             *\n\t             *  Parameters:\n\t             *    (String) text - The text data to append to the current element.\n\t             *\n\t             *  Returns:\n\t             *    The Strophe.Builder object.\n\t             */\n\t            t: function (text) {\n\t                var child = Strophe.xmlTextNode(text);\n\t                this.node.appendChild(child);\n\t                return this;\n\t            },\n\n\t            /** Function: h\n\t             *  Replace current element contents with the HTML passed in.\n\t             *\n\t             *  This *does not* make the child the new current element\n\t             *\n\t             *  Parameters:\n\t             *    (String) html - The html to insert as contents of current element.\n\t             *\n\t             *  Returns:\n\t             *    The Strophe.Builder object.\n\t             */\n\t            h: function (html) {\n\t                var fragment = document.createElement('body');\n\n\t                // force the browser to try and fix any invalid HTML tags\n\t                fragment.innerHTML = html;\n\n\t                // copy cleaned html into an xml dom\n\t                var xhtml = Strophe.createHtml(fragment);\n\n\t                while (xhtml.childNodes.length > 0) {\n\t                    this.node.appendChild(xhtml.childNodes[0]);\n\t                }\n\t                return this;\n\t            }\n\t        };\n\n\t        /** PrivateClass: Strophe.Handler\n\t         *  _Private_ helper class for managing stanza handlers.\n\t         *\n\t         *  A Strophe.Handler encapsulates a user provided callback function to be\n\t         *  executed when matching stanzas are received by the connection.\n\t         *  Handlers can be either one-off or persistant depending on their\n\t         *  return value. Returning true will cause a Handler to remain active, and\n\t         *  returning false will remove the Handler.\n\t         *\n\t         *  Users will not use Strophe.Handler objects directly, but instead they\n\t         *  will use Strophe.Connection.addHandler() and\n\t         *  Strophe.Connection.deleteHandler().\n\t         */\n\n\t        /** PrivateConstructor: Strophe.Handler\n\t         *  Create and initialize a new Strophe.Handler.\n\t         *\n\t         *  Parameters:\n\t         *    (Function) handler - A function to be executed when the handler is run.\n\t         *    (String) ns - The namespace to match.\n\t         *    (String) name - The element name to match.\n\t         *    (String) type - The element type to match.\n\t         *    (String) id - The element id attribute to match.\n\t         *    (String) from - The element from attribute to match.\n\t         *    (Object) options - Handler options\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Handler object.\n\t         */\n\t        Strophe.Handler = function (handler, ns, name, type, id, from, options) {\n\t            this.handler = handler;\n\t            this.ns = ns;\n\t            this.name = name;\n\t            this.type = type;\n\t            this.id = id;\n\t            this.options = options || {matchBare: false};\n\n\t            // default matchBare to false if undefined\n\t            if (!this.options.matchBare) {\n\t                this.options.matchBare = false;\n\t            }\n\n\t            if (this.options.matchBare) {\n\t                this.from = from ? Strophe.getBareJidFromJid(from) : null;\n\t            } else {\n\t                this.from = from;\n\t            }\n\n\t            // whether the handler is a user handler or a system handler\n\t            this.user = true;\n\t        };\n\n\t        Strophe.Handler.prototype = {\n\t            /** PrivateFunction: isMatch\n\t             *  Tests if a stanza matches the Strophe.Handler.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The XML element to test.\n\t             *\n\t             *  Returns:\n\t             *    true if the stanza matches and false otherwise.\n\t             */\n\t            isMatch: function (elem) {\n\t                var nsMatch;\n\t                var from = null;\n\n\t                if (this.options.matchBare) {\n\t                    from = Strophe.getBareJidFromJid(elem.getAttribute('from'));\n\t                } else {\n\t                    from = elem.getAttribute('from');\n\t                }\n\n\t                nsMatch = false;\n\t                if (!this.ns) {\n\t                    nsMatch = true;\n\t                } else {\n\t                    var that = this;\n\t                    Strophe.forEachChild(elem, null, function (elem) {\n\t                        if (elem.getAttribute(\"xmlns\") == that.ns) {\n\t                            nsMatch = true;\n\t                        }\n\t                    });\n\n\t                    nsMatch = nsMatch || elem.getAttribute(\"xmlns\") == this.ns;\n\t                }\n\n\t                var elem_type = elem.getAttribute(\"type\");\n\t                if (nsMatch &&\n\t                    (!this.name || Strophe.isTagEqual(elem, this.name)) &&\n\t                    (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) != -1 : elem_type == this.type)) &&\n\t                    (!this.id || elem.getAttribute(\"id\") == this.id) &&\n\t                    (!this.from || from == this.from)) {\n\t                    return true;\n\t                }\n\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: run\n\t             *  Run the callback on a matching stanza.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The DOM element that triggered the\n\t             *      Strophe.Handler.\n\t             *\n\t             *  Returns:\n\t             *    A boolean indicating if the handler should remain active.\n\t             */\n\t            run: function (elem) {\n\t                var result = null;\n\t                try {\n\t                    result = this.handler(elem);\n\t                } catch (e) {\n\t                    if (e.sourceURL) {\n\t                        Strophe.fatal(\"error: \" + this.handler +\n\t                            \" \" + e.sourceURL + \":\" +\n\t                            e.line + \" - \" + e.name + \": \" + e.message);\n\t                    } else if (e.fileName) {\n\t                        if (typeof(console) != \"undefined\") {\n\t                            console.trace();\n\t                            console.error(this.handler, \" - error - \", e, e.message);\n\t                        }\n\t                        Strophe.fatal(\"error: \" + this.handler + \" \" +\n\t                            e.fileName + \":\" + e.lineNumber + \" - \" +\n\t                            e.name + \": \" + e.message);\n\t                    } else {\n\t                        Strophe.fatal(\"error: \" + e.message + \"\\n\" + e.stack);\n\t                    }\n\n\t                    throw e;\n\t                }\n\n\t                return result;\n\t            },\n\n\t            /** PrivateFunction: toString\n\t             *  Get a String representation of the Strophe.Handler object.\n\t             *\n\t             *  Returns:\n\t             *    A String.\n\t             */\n\t            toString: function () {\n\t                return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" +\n\t                    this.id + \",\" + this.ns + \")}\";\n\t            }\n\t        };\n\n\t        /** PrivateClass: Strophe.TimedHandler\n\t         *  _Private_ helper class for managing timed handlers.\n\t         *\n\t         *  A Strophe.TimedHandler encapsulates a user provided callback that\n\t         *  should be called after a certain period of time or at regular\n\t         *  intervals.  The return value of the callback determines whether the\n\t         *  Strophe.TimedHandler will continue to fire.\n\t         *\n\t         *  Users will not use Strophe.TimedHandler objects directly, but instead\n\t         *  they will use Strophe.Connection.addTimedHandler() and\n\t         *  Strophe.Connection.deleteTimedHandler().\n\t         */\n\n\t        /** PrivateConstructor: Strophe.TimedHandler\n\t         *  Create and initialize a new Strophe.TimedHandler object.\n\t         *\n\t         *  Parameters:\n\t         *    (Integer) period - The number of milliseconds to wait before the\n\t         *      handler is called.\n\t         *    (Function) handler - The callback to run when the handler fires.  This\n\t         *      function should take no arguments.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.TimedHandler object.\n\t         */\n\t        Strophe.TimedHandler = function (period, handler) {\n\t            this.period = period;\n\t            this.handler = handler;\n\n\t            this.lastCalled = new Date().getTime();\n\t            this.user = true;\n\t        };\n\n\t        Strophe.TimedHandler.prototype = {\n\t            /** PrivateFunction: run\n\t             *  Run the callback for the Strophe.TimedHandler.\n\t             *\n\t             *  Returns:\n\t             *    true if the Strophe.TimedHandler should be called again, and false\n\t             *      otherwise.\n\t             */\n\t            run: function () {\n\t                this.lastCalled = new Date().getTime();\n\t                return this.handler();\n\t            },\n\n\t            /** PrivateFunction: reset\n\t             *  Reset the last called time for the Strophe.TimedHandler.\n\t             */\n\t            reset: function () {\n\t                this.lastCalled = new Date().getTime();\n\t            },\n\n\t            /** PrivateFunction: toString\n\t             *  Get a string representation of the Strophe.TimedHandler object.\n\t             *\n\t             *  Returns:\n\t             *    The string representation.\n\t             */\n\t            toString: function () {\n\t                return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n\t            }\n\t        };\n\n\t        /** Class: Strophe.Connection\n\t         *  XMPP Connection manager.\n\t         *\n\t         *  This class is the main part of Strophe.  It manages a BOSH or websocket\n\t         *  connection to an XMPP server and dispatches events to the user callbacks\n\t         *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n\t         *  and legacy authentication.\n\t         *\n\t         *  After creating a Strophe.Connection object, the user will typically\n\t         *  call connect() with a user supplied callback to handle connection level\n\t         *  events like authentication failure, disconnection, or connection\n\t         *  complete.\n\t         *\n\t         *  The user will also have several event handlers defined by using\n\t         *  addHandler() and addTimedHandler().  These will allow the user code to\n\t         *  respond to interesting stanzas or do something periodically with the\n\t         *  connection. These handlers will be active once authentication is\n\t         *  finished.\n\t         *\n\t         *  To send data to the connection, use send().\n\t         */\n\n\t        /** Constructor: Strophe.Connection\n\t         *  Create and initialize a Strophe.Connection object.\n\t         *\n\t         *  The transport-protocol for this connection will be chosen automatically\n\t         *  based on the given service parameter. URLs starting with \"ws://\" or\n\t         *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n\t         *  or without a protocol will use BOSH.\n\t         *\n\t         *  To make Strophe connect to the current host you can leave out the protocol\n\t         *  and host part and just pass the path, e.g.\n\t         *\n\t         *  > var conn = new Strophe.Connection(\"/http-bind/\");\n\t         *\n\t         *  Options common to both Websocket and BOSH:\n\t         *  ------------------------------------------\n\t         *\n\t         *  The \"cookies\" option allows you to pass in cookies to be added to the\n\t         *  document. These cookies will then be included in the BOSH XMLHttpRequest\n\t         *  or in the websocket connection.\n\t         *\n\t         *  The passed in value must be a map of cookie names and string values:\n\t         *\n\t         * { \"myCookie\": {\n\t *      \"value\": \"1234\",\n\t *      \"domain\": \".example.org\",\n\t *      \"path\": \"/\",\n\t *      \"expires\": expirationDate\n\t *      }\n\t *  }\n\t         *\n\t         *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n\t         *  Those cookies need to be set under those domains, for example they can be\n\t         *  set server-side by making a XHR call to that domain to ask it to set any\n\t         *  necessary cookies.\n\t         *\n\t         *  WebSocket options:\n\t         *  ------------------\n\t         *\n\t         *  If you want to connect to the current host with a WebSocket connection you\n\t         *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n\t         *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n\t         *  for Secure WebSocket.\n\t         *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n\t         *\n\t         *  > var conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n\t         *\n\t         *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n\t         *  of the current site.\n\t         *\n\t         *  Also because downgrading security is not permitted by browsers, when using\n\t         *  relative URLs both BOSH and WebSocket connections will use their secure\n\t         *  variants if the current connection to the site is also secure (https).\n\t         *\n\t         *  BOSH options:\n\t         *  -------------\n\t         *\n\t         *  By adding \"sync\" to the options, you can control if requests will\n\t         *  be made synchronously or not. The default behaviour is asynchronous.\n\t         *  If you want to make requests synchronous, make \"sync\" evaluate to true:\n\t         *  > var conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n\t         *\n\t         *  You can also toggle this on an already established connection:\n\t         *  > conn.options.sync = true;\n\t         *\n\t         *  The \"customHeaders\" option can be used to provide custom HTTP headers to be\n\t         *  included in the XMLHttpRequests made.\n\t         *\n\t         *  The \"keepalive\" option can be used to instruct Strophe to maintain the\n\t         *  current BOSH session across interruptions such as webpage reloads.\n\t         *\n\t         *  It will do this by caching the sessions tokens in sessionStorage, and when\n\t         *  \"restore\" is called it will check whether there are cached tokens with\n\t         *  which it can resume an existing session.\n\t         *\n\t         *  The \"withCredentials\" option should receive a Boolean value and is used to\n\t         *  indicate wether cookies should be included in ajax requests (by default\n\t         *  they're not).\n\t         *  Set this value to true if you are connecting to a BOSH service\n\t         *  and for some reason need to send cookies to it.\n\t         *  In order for this to work cross-domain, the server must also enable\n\t         *  credentials by setting the Access-Control-Allow-Credentials response header\n\t         *  to \"true\". For most usecases however this setting should be false (which\n\t         *  is the default).\n\t         *  Additionally, when using Access-Control-Allow-Credentials, the\n\t         *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n\t         *  instead must be restricted to actual domains.\n\t         *\n\t         *  The \"contentType\" option can be set to change the default Content-Type\n\t         *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n\t         *  CORS preflight requests that are sent to the server.\n\t         *\n\t         *  Parameters:\n\t         *    (String) service - The BOSH or WebSocket service URL.\n\t         *    (Object) options - A hash of configuration options\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Connection object.\n\t         */\n\t        Strophe.Connection = function (service, options) {\n\t            // The service URL\n\t            this.service = service;\n\t            // Configuration options\n\t            this.options = options || {};\n\t            var proto = this.options.protocol || \"\";\n\n\t            // Select protocal based on service or options\n\t            if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 ||\n\t                proto.indexOf(\"ws\") === 0) {\n\t                this._proto = new Strophe.Websocket(this);\n\t            } else {\n\t                this._proto = new Strophe.Bosh(this);\n\t            }\n\n\t            /* The connected JID. */\n\t            this.jid = \"\";\n\t            /* the JIDs domain */\n\t            this.domain = null;\n\t            /* stream:features */\n\t            this.features = null;\n\n\t            // SASL\n\t            this._sasl_data = {};\n\t            this.do_session = false;\n\t            this.do_bind = false;\n\n\t            // handler lists\n\t            this.timedHandlers = [];\n\t            this.handlers = [];\n\t            this.removeTimeds = [];\n\t            this.removeHandlers = [];\n\t            this.addTimeds = [];\n\t            this.addHandlers = [];\n\n\t            this._authentication = {};\n\t            this._idleTimeout = null;\n\t            this._disconnectTimeout = null;\n\n\t            this.authenticated = false;\n\t            this.connected = false;\n\t            this.disconnecting = false;\n\t            this.do_authentication = true;\n\t            this.paused = false;\n\t            this.restored = false;\n\n\t            this._data = [];\n\t            this._uniqueId = 0;\n\n\t            this._sasl_success_handler = null;\n\t            this._sasl_failure_handler = null;\n\t            this._sasl_challenge_handler = null;\n\n\t            // Max retries before disconnecting\n\t            this.maxRetries = 5;\n\n\t            // Call onIdle callback every 1/10th of a second\n\t            // XXX: setTimeout should be called only with function expressions (23974bc1)\n\t            this._idleTimeout = setTimeout(function () {\n\t                this._onIdle();\n\t            }.bind(this), 100);\n\n\t            utils.addCookies(this.options.cookies);\n\n\t            // initialize plugins\n\t            for (var k in Strophe._connectionPlugins) {\n\t                if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n\t                    var ptype = Strophe._connectionPlugins[k];\n\t                    // jslint complaints about the below line, but this is fine\n\t                    var F = function () {\n\t                    }; // jshint ignore:line\n\t                    F.prototype = ptype;\n\t                    this[k] = new F();\n\t                    this[k].init(this);\n\t                }\n\t            }\n\t        };\n\n\t        Strophe.Connection.prototype = {\n\t            /** Function: reset\n\t             *  Reset the connection.\n\t             *\n\t             *  This function should be called after a connection is disconnected\n\t             *  before that connection is reused.\n\t             */\n\t            reset: function () {\n\t                this._proto._reset();\n\n\t                // SASL\n\t                this.do_session = false;\n\t                this.do_bind = false;\n\n\t                // handler lists\n\t                this.timedHandlers = [];\n\t                this.handlers = [];\n\t                this.removeTimeds = [];\n\t                this.removeHandlers = [];\n\t                this.addTimeds = [];\n\t                this.addHandlers = [];\n\t                this._authentication = {};\n\n\t                this.authenticated = false;\n\t                this.connected = false;\n\t                this.disconnecting = false;\n\t                this.restored = false;\n\n\t                this._data = [];\n\t                this._requests = [];\n\t                this._uniqueId = 0;\n\t            },\n\n\t            /** Function: pause\n\t             *  Pause the request manager.\n\t             *\n\t             *  This will prevent Strophe from sending any more requests to the\n\t             *  server.  This is very useful for temporarily pausing\n\t             *  BOSH-Connections while a lot of send() calls are happening quickly.\n\t             *  This causes Strophe to send the data in a single request, saving\n\t             *  many request trips.\n\t             */\n\t            pause: function () {\n\t                this.paused = true;\n\t            },\n\n\t            /** Function: resume\n\t             *  Resume the request manager.\n\t             *\n\t             *  This resumes after pause() has been called.\n\t             */\n\t            resume: function () {\n\t                this.paused = false;\n\t            },\n\n\t            /** Function: getUniqueId\n\t             *  Generate a unique ID for use in <iq/> elements.\n\t             *\n\t             *  All <iq/> stanzas are required to have unique id attributes.  This\n\t             *  function makes creating these easy.  Each connection instance has\n\t             *  a counter which starts from zero, and the value of this counter\n\t             *  plus a colon followed by the suffix becomes the unique id. If no\n\t             *  suffix is supplied, the counter is used as the unique id.\n\t             *\n\t             *  Suffixes are used to make debugging easier when reading the stream\n\t             *  data, and their use is recommended.  The counter resets to 0 for\n\t             *  every new connection for the same reason.  For connections to the\n\t             *  same server that authenticate the same way, all the ids should be\n\t             *  the same, which makes it easy to see changes.  This is useful for\n\t             *  automated testing as well.\n\t             *\n\t             *  Parameters:\n\t             *    (String) suffix - A optional suffix to append to the id.\n\t             *\n\t             *  Returns:\n\t             *    A unique string to be used for the id attribute.\n\t             */\n\t            getUniqueId: function (suffix) {\n\t                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t                    var r = Math.random() * 16 | 0,\n\t                        v = c == 'x' ? r : r & 0x3 | 0x8;\n\t                    return v.toString(16);\n\t                });\n\t                if (typeof(suffix) == \"string\" || typeof(suffix) == \"number\") {\n\t                    return uuid + \":\" + suffix;\n\t                } else {\n\t                    return uuid + \"\";\n\t                }\n\t            },\n\n\t            /** Function: connect\n\t             *  Starts the connection process.\n\t             *\n\t             *  As the connection process proceeds, the user supplied callback will\n\t             *  be triggered multiple times with status updates.  The callback\n\t             *  should take two arguments - the status code and the error condition.\n\t             *\n\t             *  The status code will be one of the values in the Strophe.Status\n\t             *  constants.  The error condition will be one of the conditions\n\t             *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n\t             *\n\t             *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n\t             *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n\t             *  of the optional parameters.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - The user's JID.  This may be a bare JID,\n\t             *      or a full JID.  If a node is not supplied, SASL ANONYMOUS\n\t             *      authentication will be attempted.\n\t             *    (String) pass - The user's password.\n\t             *    (Function) callback - The connect callback function.\n\t             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n\t             *      time the server will wait before returning an empty result for\n\t             *      a request.  The default setting of 60 seconds is recommended.\n\t             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n\t             *      number of connections the server will hold at one time.  This\n\t             *      should almost always be set to 1 (the default).\n\t             *    (String) route - The optional route value.\n\t             *    (String) authcid - The optional alternative authentication identity\n\t             *      (username) if intending to impersonate another user.\n\t             *      When using the SASL-EXTERNAL authentication mechanism, for example\n\t             *      with client certificates, then the authcid value is used to\n\t             *      determine whether an authorization JID (authzid) should be sent to\n\t             *      the server. The authzid should not be sent to the server if the\n\t             *      authzid and authcid are the same. So to prevent it from being sent\n\t             *      (for example when the JID is already contained in the client\n\t             *      certificate), set authcid to that same JID. See XEP-178 for more\n\t             *      details.\n\t             */\n\t            connect: function (jid, pass, callback, wait, hold, route, authcid) {\n\t                this.jid = jid;\n\t                /** Variable: authzid\n\t                 *  Authorization identity.\n\t                 */\n\t                this.authzid = Strophe.getBareJidFromJid(this.jid);\n\n\t                /** Variable: authcid\n\t                 *  Authentication identity (User name).\n\t                 */\n\t                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n\n\t                /** Variable: pass\n\t                 *  Authentication identity (User password).\n\t                 */\n\t                this.pass = pass;\n\n\t                /** Variable: servtype\n\t                 *  Digest MD5 compatibility.\n\t                 */\n\t                this.servtype = \"xmpp\";\n\n\t                this.connect_callback = callback;\n\t                this.disconnecting = false;\n\t                this.connected = false;\n\t                this.authenticated = false;\n\t                this.restored = false;\n\n\t                // parse jid for domain\n\t                this.domain = Strophe.getDomainFromJid(this.jid);\n\n\t                this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n\t                this._proto._connect(wait, hold, route);\n\t            },\n\n\t            /** Function: attach\n\t             *  Attach to an already created and authenticated BOSH session.\n\t             *\n\t             *  This function is provided to allow Strophe to attach to BOSH\n\t             *  sessions which have been created externally, perhaps by a Web\n\t             *  application.  This is often used to support auto-login type features\n\t             *  without putting user credentials into the page.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - The full JID that is bound by the session.\n\t             *    (String) sid - The SID of the BOSH session.\n\t             *    (String) rid - The current RID of the BOSH session.  This RID\n\t             *      will be used by the next request.\n\t             *    (Function) callback The connect callback function.\n\t             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n\t             *      time the server will wait before returning an empty result for\n\t             *      a request.  The default setting of 60 seconds is recommended.\n\t             *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n\t             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n\t             *      number of connections the server will hold at one time.  This\n\t             *      should almost always be set to 1 (the default).\n\t             *    (Integer) wind - The optional HTTBIND window value.  This is the\n\t             *      allowed range of request ids that are valid.  The default is 5.\n\t             */\n\t            attach: function (jid, sid, rid, callback, wait, hold, wind) {\n\t                if (this._proto instanceof Strophe.Bosh) {\n\t                    this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n\t                } else {\n\t                    throw {\n\t                        name: 'StropheSessionError',\n\t                        message: 'The \"attach\" method can only be used with a BOSH connection.'\n\t                    };\n\t                }\n\t            },\n\n\t            /** Function: restore\n\t             *  Attempt to restore a cached BOSH session.\n\t             *\n\t             *  This function is only useful in conjunction with providing the\n\t             *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n\t             *\n\t             *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n\t             *  RID (Request ID) and SID (Session ID) and then when this function is\n\t             *  called, it will attempt to restore the session from those cached\n\t             *  tokens.\n\t             *\n\t             *  This function must therefore be called instead of connect or attach.\n\t             *\n\t             *  For an example on how to use it, please see examples/restore.js\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n\t             *    (Function) callback - The connect callback function.\n\t             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n\t             *      time the server will wait before returning an empty result for\n\t             *      a request.  The default setting of 60 seconds is recommended.\n\t             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n\t             *      number of connections the server will hold at one time.  This\n\t             *      should almost always be set to 1 (the default).\n\t             *    (Integer) wind - The optional HTTBIND window value.  This is the\n\t             *      allowed range of request ids that are valid.  The default is 5.\n\t             */\n\t            restore: function (jid, callback, wait, hold, wind) {\n\t                if (this._sessionCachingSupported()) {\n\t                    this._proto._restore(jid, callback, wait, hold, wind);\n\t                } else {\n\t                    throw {\n\t                        name: 'StropheSessionError',\n\t                        message: 'The \"restore\" method can only be used with a BOSH connection.'\n\t                    };\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _sessionCachingSupported\n\t             * Checks whether sessionStorage and JSON are supported and whether we're\n\t             * using BOSH.\n\t             */\n\t            _sessionCachingSupported: function () {\n\t                if (this._proto instanceof Strophe.Bosh) {\n\t                    if (!JSON) {\n\t                        return false;\n\t                    }\n\t                    try {\n\t                        window.sessionStorage.setItem('_strophe_', '_strophe_');\n\t                        window.sessionStorage.removeItem('_strophe_');\n\t                    } catch (e) {\n\t                        return false;\n\t                    }\n\t                    return true;\n\t                }\n\t                return false;\n\t            },\n\n\t            /** Function: xmlInput\n\t             *  User overrideable function that receives XML data coming into the\n\t             *  connection.\n\t             *\n\t             *  The default function does nothing.  User code can override this with\n\t             *  > Strophe.Connection.xmlInput = function (elem) {\n\t     *  >   (user code)\n\t     *  > };\n\t             *\n\t             *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n\t             *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n\t             *\n\t             *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n\t             *  <Strophe.Bosh.strip> if you want to strip this tag.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The XML data received by the connection.\n\t             */\n\t            /* jshint unused:false */\n\t            xmlInput: function (elem) {\n\t                return;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** Function: xmlOutput\n\t             *  User overrideable function that receives XML data sent to the\n\t             *  connection.\n\t             *\n\t             *  The default function does nothing.  User code can override this with\n\t             *  > Strophe.Connection.xmlOutput = function (elem) {\n\t     *  >   (user code)\n\t     *  > };\n\t             *\n\t             *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n\t             *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n\t             *\n\t             *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n\t             *  <Strophe.Bosh.strip> if you want to strip this tag.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The XMLdata sent by the connection.\n\t             */\n\t            /* jshint unused:false */\n\t            xmlOutput: function (elem) {\n\t                return;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** Function: rawInput\n\t             *  User overrideable function that receives raw data coming into the\n\t             *  connection.\n\t             *\n\t             *  The default function does nothing.  User code can override this with\n\t             *  > Strophe.Connection.rawInput = function (data) {\n\t     *  >   (user code)\n\t     *  > };\n\t             *\n\t             *  Parameters:\n\t             *    (String) data - The data received by the connection.\n\t             */\n\t            /* jshint unused:false */\n\t            rawInput: function (data) {\n\t                return;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** Function: rawOutput\n\t             *  User overrideable function that receives raw data sent to the\n\t             *  connection.\n\t             *\n\t             *  The default function does nothing.  User code can override this with\n\t             *  > Strophe.Connection.rawOutput = function (data) {\n\t     *  >   (user code)\n\t     *  > };\n\t             *\n\t             *  Parameters:\n\t             *    (String) data - The data sent by the connection.\n\t             */\n\t            /* jshint unused:false */\n\t            rawOutput: function (data) {\n\t                return;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** Function: nextValidRid\n\t             *  User overrideable function that receives the new valid rid.\n\t             *\n\t             *  The default function does nothing. User code can override this with\n\t             *  > Strophe.Connection.nextValidRid = function (rid) {\n\t     *  >    (user code)\n\t     *  > };\n\t             *\n\t             *  Parameters:\n\t             *    (Number) rid - The next valid rid\n\t             */\n\t            /* jshint unused:false */\n\t            nextValidRid: function (rid) {\n\t                return;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** Function: send\n\t             *  Send a stanza.\n\t             *\n\t             *  This function is called to push data onto the send queue to\n\t             *  go out over the wire.  Whenever a request is sent to the BOSH\n\t             *  server, all pending data is sent and the queue is flushed.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement |\n\t             *     [XMLElement] |\n\t             *     Strophe.Builder) elem - The stanza to send.\n\t             */\n\t            send: function (elem) {\n\t                if (elem === null) {\n\t                    return;\n\t                }\n\t                if (typeof(elem.sort) === \"function\") {\n\t                    for (var i = 0; i < elem.length; i++) {\n\t                        this._queueData(elem[i]);\n\t                    }\n\t                } else if (typeof(elem.tree) === \"function\") {\n\t                    this._queueData(elem.tree());\n\t                } else {\n\t                    this._queueData(elem);\n\t                }\n\n\t                this._proto._send();\n\t            },\n\n\t            /** Function: flush\n\t             *  Immediately send any pending outgoing data.\n\t             *\n\t             *  Normally send() queues outgoing data until the next idle period\n\t             *  (100ms), which optimizes network use in the common cases when\n\t             *  several send()s are called in succession. flush() can be used to\n\t             *  immediately send all pending data.\n\t             */\n\t            flush: function () {\n\t                // cancel the pending idle period and run the idle function\n\t                // immediately\n\t                clearTimeout(this._idleTimeout);\n\t                this._onIdle();\n\t            },\n\n\t            /** Function: sendIQ\n\t             *  Helper function to send IQ stanzas.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The stanza to send.\n\t             *    (Function) callback - The callback function for a successful request.\n\t             *    (Function) errback - The callback function for a failed or timed\n\t             *      out request.  On timeout, the stanza will be null.\n\t             *    (Integer) timeout - The time specified in milliseconds for a\n\t             *      timeout to occur.\n\t             *\n\t             *  Returns:\n\t             *    The id used to send the IQ.\n\t             */\n\t            sendIQ: function (elem, callback, errback, timeout) {\n\t                var timeoutHandler = null;\n\t                var that = this;\n\n\t                if (typeof(elem.tree) === \"function\") {\n\t                    elem = elem.tree();\n\t                }\n\t                var id = elem.getAttribute('id');\n\n\t                // inject id if not found\n\t                if (!id) {\n\t                    id = this.getUniqueId(\"sendIQ\");\n\t                    elem.setAttribute(\"id\", id);\n\t                }\n\n\t                var expectedFrom = elem.getAttribute(\"to\");\n\t                var fulljid = this.jid;\n\n\t                var handler = this.addHandler(function (stanza) {\n\t                    // remove timeout handler if there is one\n\t                    if (timeoutHandler) {\n\t                        that.deleteTimedHandler(timeoutHandler);\n\t                    }\n\n\t                    var acceptable = false;\n\t                    var from = stanza.getAttribute(\"from\");\n\t                    if (from === expectedFrom ||\n\t                        (!expectedFrom &&\n\t                        (from === Strophe.getBareJidFromJid(fulljid) ||\n\t                        from === Strophe.getDomainFromJid(fulljid) ||\n\t                        from === fulljid))) {\n\t                        acceptable = true;\n\t                    }\n\n\t                    if (!acceptable) {\n\t                        throw {\n\t                            name: \"StropheError\",\n\t                            message: \"Got answer to IQ from wrong jid:\" + from +\n\t                            \"\\nExpected jid: \" + expectedFrom\n\t                        };\n\t                    }\n\n\t                    var iqtype = stanza.getAttribute('type');\n\t                    if (iqtype == 'result') {\n\t                        if (callback) {\n\t                            callback(stanza);\n\t                        }\n\t                    } else if (iqtype == 'error') {\n\t                        if (errback) {\n\t                            errback(stanza);\n\t                        }\n\t                    } else {\n\t                        throw {\n\t                            name: \"StropheError\",\n\t                            message: \"Got bad IQ type of \" + iqtype\n\t                        };\n\t                    }\n\t                }, null, 'iq', ['error', 'result'], id);\n\n\t                // if timeout specified, setup timeout handler.\n\t                if (timeout) {\n\t                    timeoutHandler = this.addTimedHandler(timeout, function () {\n\t                        // get rid of normal handler\n\t                        that.deleteHandler(handler);\n\t                        // call errback on timeout with null stanza\n\t                        if (errback) {\n\t                            errback(null);\n\t                        }\n\t                        return false;\n\t                    });\n\t                }\n\t                this.send(elem);\n\t                return id;\n\t            },\n\n\t            /** PrivateFunction: _queueData\n\t             *  Queue outgoing data for later sending.  Also ensures that the data\n\t             *  is a DOMElement.\n\t             */\n\t            _queueData: function (element) {\n\t                if (element === null || !element.tagName || !element.childNodes) {\n\t                    throw {\n\t                        name: \"StropheError\",\n\t                        message: \"Cannot queue non-DOMElement.\"\n\t                    };\n\t                }\n\t                this._data.push(element);\n\t            },\n\n\t            /** PrivateFunction: _sendRestart\n\t             *  Send an xmpp:restart stanza.\n\t             */\n\t            _sendRestart: function () {\n\t                this._data.push(\"restart\");\n\t                this._proto._sendRestart();\n\t                // XXX: setTimeout should be called only with function expressions (23974bc1)\n\t                this._idleTimeout = setTimeout(function () {\n\t                    this._onIdle();\n\t                }.bind(this), 100);\n\t            },\n\n\t            /** Function: addTimedHandler\n\t             *  Add a timed handler to the connection.\n\t             *\n\t             *  This function adds a timed handler.  The provided handler will\n\t             *  be called every period milliseconds until it returns false,\n\t             *  the connection is terminated, or the handler is removed.  Handlers\n\t             *  that wish to continue being invoked should return true.\n\t             *\n\t             *  Because of method binding it is necessary to save the result of\n\t             *  this function if you wish to remove a handler with\n\t             *  deleteTimedHandler().\n\t             *\n\t             *  Note that user handlers are not active until authentication is\n\t             *  successful.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) period - The period of the handler.\n\t             *    (Function) handler - The callback function.\n\t             *\n\t             *  Returns:\n\t             *    A reference to the handler that can be used to remove it.\n\t             */\n\t            addTimedHandler: function (period, handler) {\n\t                var thand = new Strophe.TimedHandler(period, handler);\n\t                this.addTimeds.push(thand);\n\t                return thand;\n\t            },\n\n\t            /** Function: deleteTimedHandler\n\t             *  Delete a timed handler for a connection.\n\t             *\n\t             *  This function removes a timed handler from the connection.  The\n\t             *  handRef parameter is *not* the function passed to addTimedHandler(),\n\t             *  but is the reference returned from addTimedHandler().\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.TimedHandler) handRef - The handler reference.\n\t             */\n\t            deleteTimedHandler: function (handRef) {\n\t                // this must be done in the Idle loop so that we don't change\n\t                // the handlers during iteration\n\t                this.removeTimeds.push(handRef);\n\t            },\n\n\t            /** Function: addHandler\n\t             *  Add a stanza handler for the connection.\n\t             *\n\t             *  This function adds a stanza handler to the connection.  The\n\t             *  handler callback will be called for any stanza that matches\n\t             *  the parameters.  Note that if multiple parameters are supplied,\n\t             *  they must all match for the handler to be invoked.\n\t             *\n\t             *  The handler will receive the stanza that triggered it as its argument.\n\t             *  *The handler should return true if it is to be invoked again;\n\t             *  returning false will remove the handler after it returns.*\n\t             *\n\t             *  As a convenience, the ns parameters applies to the top level element\n\t             *  and also any of its immediate children.  This is primarily to make\n\t             *  matching /iq/query elements easy.\n\t             *\n\t             *  The options argument contains handler matching flags that affect how\n\t             *  matches are determined. Currently the only flag is matchBare (a\n\t             *  boolean). When matchBare is true, the from parameter and the from\n\t             *  attribute on the stanza will be matched as bare JIDs instead of\n\t             *  full JIDs. To use this, pass {matchBare: true} as the value of\n\t             *  options. The default value for matchBare is false.\n\t             *\n\t             *  The return value should be saved if you wish to remove the handler\n\t             *  with deleteHandler().\n\t             *\n\t             *  Parameters:\n\t             *    (Function) handler - The user callback.\n\t             *    (String) ns - The namespace to match.\n\t             *    (String) name - The stanza name to match.\n\t             *    (String) type - The stanza type attribute to match.\n\t             *    (String) id - The stanza id attribute to match.\n\t             *    (String) from - The stanza from attribute to match.\n\t             *    (String) options - The handler options\n\t             *\n\t             *  Returns:\n\t             *    A reference to the handler that can be used to remove it.\n\t             */\n\t            addHandler: function (handler, ns, name, type, id, from, options) {\n\t                var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n\t                this.addHandlers.push(hand);\n\t                return hand;\n\t            },\n\n\t            /** Function: deleteHandler\n\t             *  Delete a stanza handler for a connection.\n\t             *\n\t             *  This function removes a stanza handler from the connection.  The\n\t             *  handRef parameter is *not* the function passed to addHandler(),\n\t             *  but is the reference returned from addHandler().\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Handler) handRef - The handler reference.\n\t             */\n\t            deleteHandler: function (handRef) {\n\t                // this must be done in the Idle loop so that we don't change\n\t                // the handlers during iteration\n\t                this.removeHandlers.push(handRef);\n\t                // If a handler is being deleted while it is being added,\n\t                // prevent it from getting added\n\t                var i = this.addHandlers.indexOf(handRef);\n\t                if (i >= 0) {\n\t                    this.addHandlers.splice(i, 1);\n\t                }\n\t            },\n\n\t            /** Function: disconnect\n\t             *  Start the graceful disconnection process.\n\t             *\n\t             *  This function starts the disconnection process.  This process starts\n\t             *  by sending unavailable presence and sending BOSH body of type\n\t             *  terminate.  A timeout handler makes sure that disconnection happens\n\t             *  even if the BOSH server does not respond.\n\t             *  If the Connection object isn't connected, at least tries to abort all pending requests\n\t             *  so the connection object won't generate successful requests (which were already opened).\n\t             *\n\t             *  The user supplied connection callback will be notified of the\n\t             *  progress as this process happens.\n\t             *\n\t             *  Parameters:\n\t             *    (String) reason - The reason the disconnect is occuring.\n\t             */\n\t            disconnect: function (reason) {\n\t                this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n\t                Strophe.info(\"Disconnect was called because: \" + reason);\n\t                if (this.connected) {\n\t                    var pres = false;\n\t                    this.disconnecting = true;\n\t                    if (this.authenticated) {\n\t                        pres = $pres({\n\t                            xmlns: Strophe.NS.CLIENT,\n\t                            type: 'unavailable'\n\t                        });\n\t                    }\n\t                    // setup timeout handler\n\t                    this._disconnectTimeout = this._addSysTimedHandler(\n\t                        3000, this._onDisconnectTimeout.bind(this));\n\t                    this._proto._disconnect(pres);\n\t                } else {\n\t                    Strophe.info(\"Disconnect was called before Strophe connected to the server\");\n\t                    this._proto._abortAllRequests();\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _changeConnectStatus\n\t             *  _Private_ helper function that makes sure plugins and the user's\n\t             *  callback are notified of connection status changes.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) status - the new connection status, one of the values\n\t             *      in Strophe.Status\n\t             *    (String) condition - the error condition or null\n\t             */\n\t            _changeConnectStatus: function (status, condition) {\n\t                // notify all plugins listening for status changes\n\t                for (var k in Strophe._connectionPlugins) {\n\t                    if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n\t                        var plugin = this[k];\n\t                        if (plugin.statusChanged) {\n\t                            try {\n\t                                plugin.statusChanged(status, condition);\n\t                            } catch (err) {\n\t                                Strophe.error(\"\" + k + \" plugin caused an exception \" +\n\t                                    \"changing status: \" + err);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\n\t                // notify the user's callback\n\t                if (this.connect_callback) {\n\t                    try {\n\t                        this.connect_callback(status, condition);\n\t                    } catch (e) {\n\t                        Strophe.error(\"User connection callback caused an \" +\n\t                            \"exception: \" + e);\n\t                    }\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _doDisconnect\n\t             *  _Private_ function to disconnect.\n\t             *\n\t             *  This is the last piece of the disconnection logic.  This resets the\n\t             *  connection and alerts the user's connection callback.\n\t             */\n\t            _doDisconnect: function (condition) {\n\t                if (typeof this._idleTimeout == \"number\") {\n\t                    clearTimeout(this._idleTimeout);\n\t                }\n\n\t                // Cancel Disconnect Timeout\n\t                if (this._disconnectTimeout !== null) {\n\t                    this.deleteTimedHandler(this._disconnectTimeout);\n\t                    this._disconnectTimeout = null;\n\t                }\n\n\t                Strophe.info(\"_doDisconnect was called\");\n\t                this._proto._doDisconnect();\n\n\t                this.authenticated = false;\n\t                this.disconnecting = false;\n\t                this.restored = false;\n\n\t                // delete handlers\n\t                this.handlers = [];\n\t                this.timedHandlers = [];\n\t                this.removeTimeds = [];\n\t                this.removeHandlers = [];\n\t                this.addTimeds = [];\n\t                this.addHandlers = [];\n\n\t                // tell the parent we disconnected\n\t                this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\t                this.connected = false;\n\t            },\n\n\t            /** PrivateFunction: _dataRecv\n\t             *  _Private_ handler to processes incoming data from the the connection.\n\t             *\n\t             *  Except for _connect_cb handling the initial connection request,\n\t             *  this function handles the incoming data for all requests.  This\n\t             *  function also fires stanza handlers that match each incoming\n\t             *  stanza.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Request) req - The request that has data ready.\n\t             *    (string) req - The stanza a raw string (optiona).\n\t             */\n\t            _dataRecv: function (req, raw) {\n\t                Strophe.info(\"_dataRecv called\");\n\t                WebIM && WebIM.config.isDebug && Strophe.info(JSON.stringify(req));\n\t                var elem = this._proto._reqToData(req);\n\t                if (elem === null) {\n\t                    return;\n\t                }\n\n\t                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n\t                    if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n\t                        this.xmlInput(elem.childNodes[0]);\n\t                    } else {\n\t                        this.xmlInput(elem);\n\t                    }\n\t                }\n\t                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n\t                    if (raw) {\n\t                        this.rawInput(raw);\n\t                    } else {\n\t                        this.rawInput(Strophe.serialize(elem));\n\t                    }\n\t                }\n\n\t                // remove handlers scheduled for deletion\n\t                var i, hand;\n\t                while (this.removeHandlers.length > 0) {\n\t                    hand = this.removeHandlers.pop();\n\t                    i = this.handlers.indexOf(hand);\n\t                    if (i >= 0) {\n\t                        this.handlers.splice(i, 1);\n\t                    }\n\t                }\n\n\t                // add handlers scheduled for addition\n\t                while (this.addHandlers.length > 0) {\n\t                    this.handlers.push(this.addHandlers.pop());\n\t                }\n\n\t                // handle graceful disconnect\n\t                if (this.disconnecting && this._proto._emptyQueue()) {\n\t                    this._doDisconnect();\n\t                    return;\n\t                }\n\n\t                var type = elem.getAttribute(\"type\");\n\t                var cond, conflict;\n\t                if (type !== null && type == \"terminate\") {\n\t                    // Don't process stanzas that come in after disconnect\n\t                    if (this.disconnecting) {\n\t                        return;\n\t                    }\n\n\t                    // an error occurred\n\t                    cond = elem.getAttribute(\"condition\");\n\t                    conflict = elem.getElementsByTagName(\"conflict\");\n\t                    if (cond !== null) {\n\t                        if (cond == \"remote-stream-error\" && conflict.length > 0) {\n\t                            cond = \"conflict\";\n\t                        }\n\t                        this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n\t                    } else {\n\t                        this._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n\t                    }\n\t                    this._doDisconnect(cond);\n\t                    return;\n\t                }\n\n\t                // send each incoming stanza through the handler chain\n\t                var that = this;\n\t                Strophe.forEachChild(elem, null, function (child) {\n\t                    var i, newList;\n\t                    // process handlers\n\t                    newList = that.handlers;\n\t                    that.handlers = [];\n\t                    for (i = 0; i < newList.length; i++) {\n\t                        var hand = newList[i];\n\t                        // encapsulate 'handler.run' not to lose the whole handler list if\n\t                        // one of the handlers throws an exception\n\t                        try {\n\t                            if (hand.isMatch(child) &&\n\t                                (that.authenticated || !hand.user)) {\n\t                                if (hand.run(child)) {\n\t                                    that.handlers.push(hand);\n\t                                }\n\t                            } else {\n\t                                that.handlers.push(hand);\n\t                            }\n\t                        } catch (e) {\n\t                            // if the handler throws an exception, we consider it as false\n\t                            Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n\t                        }\n\t                    }\n\t                });\n\t            },\n\n\n\t            /** Attribute: mechanisms\n\t             *  SASL Mechanisms available for Conncection.\n\t             */\n\t            mechanisms: {},\n\n\t            /** PrivateFunction: _connect_cb\n\t             *  _Private_ handler for initial connection request.\n\t             *\n\t             *  This handler is used to process the initial connection request\n\t             *  response from the BOSH server. It is used to set up authentication\n\t             *  handlers and start the authentication process.\n\t             *\n\t             *  SASL authentication will be attempted if available, otherwise\n\t             *  the code will fall back to legacy authentication.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Request) req - The current request.\n\t             *    (Function) _callback - low level (xmpp) connect callback function.\n\t             *      Useful for plugins with their own xmpp connect callback (when their)\n\t             *      want to do something special).\n\t             */\n\t            _connect_cb: function (req, _callback, raw) {\n\t                Strophe.info(\"_connect_cb was called\");\n\n\t                this.connected = true;\n\n\t                var bodyWrap;\n\t                try {\n\t                    bodyWrap = this._proto._reqToData(req);\n\t                } catch (e) {\n\t                    if (e != \"badformat\") {\n\t                        throw e;\n\t                    }\n\t                    this._changeConnectStatus(Strophe.Status.CONNFAIL, 'bad-format');\n\t                    this._doDisconnect('bad-format');\n\t                }\n\t                if (!bodyWrap) {\n\t                    return;\n\t                }\n\n\t                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n\t                    if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n\t                        this.xmlInput(bodyWrap.childNodes[0]);\n\t                    } else {\n\t                        this.xmlInput(bodyWrap);\n\t                    }\n\t                }\n\t                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n\t                    if (raw) {\n\t                        this.rawInput(raw);\n\t                    } else {\n\t                        this.rawInput(Strophe.serialize(bodyWrap));\n\t                    }\n\t                }\n\n\t                var conncheck = this._proto._connect_cb(bodyWrap);\n\t                if (conncheck === Strophe.Status.CONNFAIL) {\n\t                    return;\n\t                }\n\n\t                this._authentication.sasl_scram_sha1 = false;\n\t                this._authentication.sasl_plain = false;\n\t                this._authentication.sasl_digest_md5 = false;\n\t                this._authentication.sasl_anonymous = false;\n\t                this._authentication.legacy_auth = false;\n\n\t                // Check for the stream:features tag\n\t                var hasFeatures;\n\t                if (bodyWrap.getElementsByTagNameNS) {\n\t                    hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n\t                } else {\n\t                    hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n\t                }\n\t                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\t                var matched = [];\n\t                var i, mech, found_authentication = false;\n\t                if (!hasFeatures) {\n\t                    this._proto._no_auth_received(_callback);\n\t                    return;\n\t                }\n\t                if (mechanisms.length > 0) {\n\t                    for (i = 0; i < mechanisms.length; i++) {\n\t                        mech = Strophe.getText(mechanisms[i]);\n\t                        if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n\t                    }\n\t                }\n\t                this._authentication.legacy_auth =\n\t                    bodyWrap.getElementsByTagName(\"auth\").length > 0;\n\t                found_authentication = this._authentication.legacy_auth ||\n\t                    matched.length > 0;\n\t                if (!found_authentication) {\n\t                    this._proto._no_auth_received(_callback);\n\t                    return;\n\t                }\n\t                if (this.do_authentication !== false)\n\t                    this.authenticate(matched);\n\t            },\n\n\t            /** Function: authenticate\n\t             * Set up authentication\n\t             *\n\t             *  Contiunues the initial connection request by setting up authentication\n\t             *  handlers and start the authentication process.\n\t             *\n\t             *  SASL authentication will be attempted if available, otherwise\n\t             *  the code will fall back to legacy authentication.\n\t             *\n\t             */\n\t            authenticate: function (matched) {\n\t                var i;\n\t                // Sorting matched mechanisms according to priority.\n\t                for (i = 0; i < matched.length - 1; ++i) {\n\t                    var higher = i;\n\t                    for (var j = i + 1; j < matched.length; ++j) {\n\t                        if (matched[j].prototype.priority > matched[higher].prototype.priority) {\n\t                            higher = j;\n\t                        }\n\t                    }\n\t                    if (higher != i) {\n\t                        var swap = matched[i];\n\t                        matched[i] = matched[higher];\n\t                        matched[higher] = swap;\n\t                    }\n\t                }\n\n\t                // run each mechanism\n\t                var mechanism_found = false;\n\t                for (i = 0; i < matched.length; ++i) {\n\t                    if (!matched[i].prototype.test(this)) continue;\n\n\t                    this._sasl_success_handler = this._addSysHandler(\n\t                        this._sasl_success_cb.bind(this), null,\n\t                        \"success\", null, null);\n\t                    this._sasl_failure_handler = this._addSysHandler(\n\t                        this._sasl_failure_cb.bind(this), null,\n\t                        \"failure\", null, null);\n\t                    this._sasl_challenge_handler = this._addSysHandler(\n\t                        this._sasl_challenge_cb.bind(this), null,\n\t                        \"challenge\", null, null);\n\n\t                    this._sasl_mechanism = new matched[i]();\n\t                    this._sasl_mechanism.onStart(this);\n\n\t                    var request_auth_exchange = $build(\"auth\", {\n\t                        xmlns: Strophe.NS.SASL,\n\t                        mechanism: this._sasl_mechanism.name\n\t                    });\n\n\t                    if (this._sasl_mechanism.isClientFirst) {\n\t                        var response = this._sasl_mechanism.onChallenge(this, null);\n\t                        request_auth_exchange.t(Base64.encode(response));\n\t                    }\n\t                    this.send(request_auth_exchange.tree());\n\t                    mechanism_found = true;\n\t                    break;\n\t                }\n\n\t                if (!mechanism_found) {\n\t                    // if none of the mechanism worked\n\t                    if (Strophe.getNodeFromJid(this.jid) === null) {\n\t                        // we don't have a node, which is required for non-anonymous\n\t                        // client connections\n\t                        this._changeConnectStatus(Strophe.Status.CONNFAIL,\n\t                            'x-strophe-bad-non-anon-jid');\n\t                        this.disconnect('x-strophe-bad-non-anon-jid');\n\t                    } else {\n\t                        // fall back to legacy authentication\n\t                        this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\t                        this._addSysHandler(this._auth1_cb.bind(this), null, null,\n\t                            null, \"_auth_1\");\n\t                        this.send($iq({\n\t                            type: \"get\",\n\t                            to: this.domain,\n\t                            id: \"_auth_1\"\n\t                        }).c(\"query\", {\n\t                            xmlns: Strophe.NS.AUTH\n\t                        }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n\t                    }\n\t                }\n\t            },\n\n\t            _sasl_challenge_cb: function (elem) {\n\t                var challenge = Base64.decode(Strophe.getText(elem));\n\t                var response = this._sasl_mechanism.onChallenge(this, challenge);\n\t                var stanza = $build('response', {\n\t                    xmlns: Strophe.NS.SASL\n\t                });\n\t                if (response !== \"\") {\n\t                    stanza.t(Base64.encode(response));\n\t                }\n\t                this.send(stanza.tree());\n\t                return true;\n\t            },\n\n\t            /** PrivateFunction: _auth1_cb\n\t             *  _Private_ handler for legacy authentication.\n\t             *\n\t             *  This handler is called in response to the initial <iq type='get'/>\n\t             *  for legacy authentication.  It builds an authentication <iq/> and\n\t             *  sends it, creating a handler (calling back to _auth2_cb()) to\n\t             *  handle the result\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The stanza that triggered the callback.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            /* jshint unused:false */\n\t            _auth1_cb: function (elem) {\n\t                // build plaintext auth iq\n\t                var iq = $iq({type: \"set\", id: \"_auth_2\"})\n\t                    .c('query', {xmlns: Strophe.NS.AUTH})\n\t                    .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\n\t                    .up()\n\t                    .c('password').t(this.pass);\n\n\t                if (!Strophe.getResourceFromJid(this.jid)) {\n\t                    // since the user has not supplied a resource, we pick\n\t                    // a default one here.  unlike other auth methods, the server\n\t                    // cannot do this for us.\n\t                    this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n\t                }\n\t                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n\t                this._addSysHandler(this._auth2_cb.bind(this), null,\n\t                    null, null, \"_auth_2\");\n\t                this.send(iq.tree());\n\t                return false;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** PrivateFunction: _sasl_success_cb\n\t             *  _Private_ handler for succesful SASL authentication.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The matching stanza.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _sasl_success_cb: function (elem) {\n\t                if (this._sasl_data[\"server-signature\"]) {\n\t                    var serverSignature;\n\t                    var success = Base64.decode(Strophe.getText(elem));\n\t                    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\t                    var matches = success.match(attribMatch);\n\t                    if (matches[1] == \"v\") {\n\t                        serverSignature = matches[2];\n\t                    }\n\n\t                    if (serverSignature != this._sasl_data[\"server-signature\"]) {\n\t                        // remove old handlers\n\t                        this.deleteHandler(this._sasl_failure_handler);\n\t                        this._sasl_failure_handler = null;\n\t                        if (this._sasl_challenge_handler) {\n\t                            this.deleteHandler(this._sasl_challenge_handler);\n\t                            this._sasl_challenge_handler = null;\n\t                        }\n\n\t                        this._sasl_data = {};\n\t                        return this._sasl_failure_cb(null);\n\t                    }\n\t                }\n\n\t                Strophe.info(\"SASL authentication succeeded.\");\n\n\t                if (this._sasl_mechanism) {\n\t                    this._sasl_mechanism.onSuccess();\n\t                }\n\n\t                // remove old handlers\n\t                this.deleteHandler(this._sasl_failure_handler);\n\t                this._sasl_failure_handler = null;\n\t                if (this._sasl_challenge_handler) {\n\t                    this.deleteHandler(this._sasl_challenge_handler);\n\t                    this._sasl_challenge_handler = null;\n\t                }\n\n\t                var streamfeature_handlers = [];\n\t                var wrapper = function (handlers, elem) {\n\t                    while (handlers.length) {\n\t                        this.deleteHandler(handlers.pop());\n\t                    }\n\t                    this._sasl_auth1_cb.bind(this)(elem);\n\t                    return false;\n\t                };\n\t                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n\t                    wrapper.bind(this)(streamfeature_handlers, elem);\n\t                }.bind(this), null, \"stream:features\", null, null));\n\t                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n\t                    wrapper.bind(this)(streamfeature_handlers, elem);\n\t                }.bind(this), Strophe.NS.STREAM, \"features\", null, null));\n\n\t                // we must send an xmpp:restart now\n\t                this._sendRestart();\n\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: _sasl_auth1_cb\n\t             *  _Private_ handler to start stream binding.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The matching stanza.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _sasl_auth1_cb: function (elem) {\n\t                // save stream:features for future usage\n\t                this.features = elem;\n\t                var i, child;\n\t                for (i = 0; i < elem.childNodes.length; i++) {\n\t                    child = elem.childNodes[i];\n\t                    if (child.nodeName == 'bind') {\n\t                        this.do_bind = true;\n\t                    }\n\n\t                    if (child.nodeName == 'session') {\n\t                        this.do_session = true;\n\t                    }\n\t                }\n\n\t                if (!this.do_bind) {\n\t                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\t                    return false;\n\t                } else {\n\t                    this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n\t                        null, \"_bind_auth_2\");\n\n\t                    var resource = Strophe.getResourceFromJid(this.jid);\n\t                    if (resource) {\n\t                        this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n\t                            .c('bind', {xmlns: Strophe.NS.BIND})\n\t                            .c('resource', {}).t(resource).tree());\n\t                    } else {\n\t                        this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n\t                            .c('bind', {xmlns: Strophe.NS.BIND})\n\t                            .tree());\n\t                    }\n\t                }\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: _sasl_bind_cb\n\t             *  _Private_ handler for binding result and session start.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The matching stanza.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _sasl_bind_cb: function (elem) {\n\t                if (elem.getAttribute(\"type\") == \"error\") {\n\t                    Strophe.info(\"SASL binding failed.\");\n\t                    var conflict = elem.getElementsByTagName(\"conflict\"), condition;\n\t                    if (conflict.length > 0) {\n\t                        condition = 'conflict';\n\t                    }\n\t                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition);\n\t                    return false;\n\t                }\n\n\t                // TODO - need to grab errors\n\t                var bind = elem.getElementsByTagName(\"bind\");\n\t                var jidNode;\n\t                if (bind.length > 0) {\n\t                    // Grab jid\n\t                    jidNode = bind[0].getElementsByTagName(\"jid\");\n\t                    if (jidNode.length > 0) {\n\t                        this.jid = Strophe.getText(jidNode[0]);\n\n\t                        if (this.do_session) {\n\t                            this._addSysHandler(this._sasl_session_cb.bind(this),\n\t                                null, null, null, \"_session_auth_2\");\n\n\t                            this.send($iq({type: \"set\", id: \"_session_auth_2\"})\n\t                                .c('session', {xmlns: Strophe.NS.SESSION})\n\t                                .tree());\n\t                        } else {\n\t                            this.authenticated = true;\n\t                            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n\t                        }\n\t                    }\n\t                } else {\n\t                    Strophe.info(\"SASL binding failed.\");\n\t                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\t                    return false;\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _sasl_session_cb\n\t             *  _Private_ handler to finish successful SASL connection.\n\t             *\n\t             *  This sets Connection.authenticated to true on success, which\n\t             *  starts the processing of user handlers.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The matching stanza.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _sasl_session_cb: function (elem) {\n\t                if (elem.getAttribute(\"type\") == \"result\") {\n\t                    this.authenticated = true;\n\t                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n\t                } else if (elem.getAttribute(\"type\") == \"error\") {\n\t                    Strophe.info(\"Session creation failed.\");\n\t                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\t                    return false;\n\t                }\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: _sasl_failure_cb\n\t             *  _Private_ handler for SASL authentication failure.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The matching stanza.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            /* jshint unused:false */\n\t            _sasl_failure_cb: function (elem) {\n\t                // delete unneeded handlers\n\t                if (this._sasl_success_handler) {\n\t                    this.deleteHandler(this._sasl_success_handler);\n\t                    this._sasl_success_handler = null;\n\t                }\n\t                if (this._sasl_challenge_handler) {\n\t                    this.deleteHandler(this._sasl_challenge_handler);\n\t                    this._sasl_challenge_handler = null;\n\t                }\n\n\t                if (this._sasl_mechanism)\n\t                    this._sasl_mechanism.onFailure();\n\t                this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\t                return false;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** PrivateFunction: _auth2_cb\n\t             *  _Private_ handler to finish legacy authentication.\n\t             *\n\t             *  This handler is called when the result from the jabber:iq:auth\n\t             *  <iq/> stanza is returned.\n\t             *\n\t             *  Parameters:\n\t             *    (XMLElement) elem - The stanza that triggered the callback.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _auth2_cb: function (elem) {\n\t                if (elem.getAttribute(\"type\") == \"result\") {\n\t                    this.authenticated = true;\n\t                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n\t                } else if (elem.getAttribute(\"type\") == \"error\") {\n\t                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\t                    this.disconnect('authentication failed');\n\t                }\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: _addSysTimedHandler\n\t             *  _Private_ function to add a system level timed handler.\n\t             *\n\t             *  This function is used to add a Strophe.TimedHandler for the\n\t             *  library code.  System timed handlers are allowed to run before\n\t             *  authentication is complete.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) period - The period of the handler.\n\t             *    (Function) handler - The callback function.\n\t             */\n\t            _addSysTimedHandler: function (period, handler) {\n\t                var thand = new Strophe.TimedHandler(period, handler);\n\t                thand.user = false;\n\t                this.addTimeds.push(thand);\n\t                return thand;\n\t            },\n\n\t            /** PrivateFunction: _addSysHandler\n\t             *  _Private_ function to add a system level stanza handler.\n\t             *\n\t             *  This function is used to add a Strophe.Handler for the\n\t             *  library code.  System stanza handlers are allowed to run before\n\t             *  authentication is complete.\n\t             *\n\t             *  Parameters:\n\t             *    (Function) handler - The callback function.\n\t             *    (String) ns - The namespace to match.\n\t             *    (String) name - The stanza name to match.\n\t             *    (String) type - The stanza type attribute to match.\n\t             *    (String) id - The stanza id attribute to match.\n\t             */\n\t            _addSysHandler: function (handler, ns, name, type, id) {\n\t                var hand = new Strophe.Handler(handler, ns, name, type, id);\n\t                hand.user = false;\n\t                this.addHandlers.push(hand);\n\t                return hand;\n\t            },\n\n\t            /** PrivateFunction: _onDisconnectTimeout\n\t             *  _Private_ timeout handler for handling non-graceful disconnection.\n\t             *\n\t             *  If the graceful disconnect process does not complete within the\n\t             *  time allotted, this handler finishes the disconnect anyway.\n\t             *\n\t             *  Returns:\n\t             *    false to remove the handler.\n\t             */\n\t            _onDisconnectTimeout: function () {\n\t                Strophe.info(\"_onDisconnectTimeout was called\");\n\t                this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\t                this._proto._onDisconnectTimeout();\n\t                // actually disconnect\n\t                this._doDisconnect();\n\t                return false;\n\t            },\n\n\t            /** PrivateFunction: _onIdle\n\t             *  _Private_ handler to process events during idle cycle.\n\t             *\n\t             *  This handler is called every 100ms to fire timed handlers that\n\t             *  are ready and keep poll requests going.\n\t             */\n\t            _onIdle: function () {\n\t                var i, thand, since, newList;\n\n\t                // add timed handlers scheduled for addition\n\t                // NOTE: we add before remove in the case a timed handler is\n\t                // added and then deleted before the next _onIdle() call.\n\t                while (this.addTimeds.length > 0) {\n\t                    this.timedHandlers.push(this.addTimeds.pop());\n\t                }\n\n\t                // remove timed handlers that have been scheduled for deletion\n\t                while (this.removeTimeds.length > 0) {\n\t                    thand = this.removeTimeds.pop();\n\t                    i = this.timedHandlers.indexOf(thand);\n\t                    if (i >= 0) {\n\t                        this.timedHandlers.splice(i, 1);\n\t                    }\n\t                }\n\n\t                // call ready timed handlers\n\t                var now = new Date().getTime();\n\t                newList = [];\n\t                for (i = 0; i < this.timedHandlers.length; i++) {\n\t                    thand = this.timedHandlers[i];\n\t                    if (this.authenticated || !thand.user) {\n\t                        since = thand.lastCalled + thand.period;\n\t                        if (since - now <= 0) {\n\t                            if (thand.run()) {\n\t                                newList.push(thand);\n\t                            }\n\t                        } else {\n\t                            newList.push(thand);\n\t                        }\n\t                    }\n\t                }\n\t                this.timedHandlers = newList;\n\n\t                clearTimeout(this._idleTimeout);\n\n\t                this._proto._onIdle();\n\n\t                // reactivate the timer only if connected\n\t                if (this.connected) {\n\t                    // XXX: setTimeout should be called only with function expressions (23974bc1)\n\t                    this._idleTimeout = setTimeout(function () {\n\t                        this._onIdle();\n\t                    }.bind(this), 100);\n\t                }\n\t            }\n\t        };\n\n\t        /** Class: Strophe.SASLMechanism\n\t         *\n\t         *  encapsulates SASL authentication mechanisms.\n\t         *\n\t         *  User code may override the priority for each mechanism or disable it completely.\n\t         *  See <priority> for information about changing priority and <test> for informatian on\n\t         *  how to disable a mechanism.\n\t         *\n\t         *  By default, all mechanisms are enabled and the priorities are\n\t         *\n\t         *  EXTERNAL - 60\n\t         *  OAUTHBEARER - 50\n\t         *  SCRAM-SHA1 - 40\n\t         *  DIGEST-MD5 - 30\n\t         *  PLAIN - 20\n\t         *  ANONYMOUS - 10\n\t         */\n\n\t        /**\n\t         * PrivateConstructor: Strophe.SASLMechanism\n\t         * SASL auth mechanism abstraction.\n\t         *\n\t         *  Parameters:\n\t         *    (String) name - SASL Mechanism name.\n\t         *    (Boolean) isClientFirst - If client should send response first without challenge.\n\t         *    (Number) priority - Priority.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.SASLMechanism object.\n\t         */\n\t        Strophe.SASLMechanism = function (name, isClientFirst, priority) {\n\t            /** PrivateVariable: name\n\t             *  Mechanism name.\n\t             */\n\t            this.name = name;\n\t            /** PrivateVariable: isClientFirst\n\t             *  If client sends response without initial server challenge.\n\t             */\n\t            this.isClientFirst = isClientFirst;\n\t            /** Variable: priority\n\t             *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n\t             *  Users may override this to prioritize mechanisms differently.\n\t             *\n\t             *  In the default configuration the priorities are\n\t             *\n\t             *  SCRAM-SHA1 - 40\n\t             *  DIGEST-MD5 - 30\n\t             *  Plain - 20\n\t             *\n\t             *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n\t             *\n\t             *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n\t             *\n\t             *  See <SASL mechanisms> for a list of available mechanisms.\n\t             *\n\t             */\n\t            this.priority = priority;\n\t        };\n\n\t        Strophe.SASLMechanism.prototype = {\n\t            /**\n\t             *  Function: test\n\t             *  Checks if mechanism able to run.\n\t             *  To disable a mechanism, make this return false;\n\t             *\n\t             *  To disable plain authentication run\n\t             *  > Strophe.SASLPlain.test = function() {\n\t   *  >   return false;\n\t   *  > }\n\t             *\n\t             *  See <SASL mechanisms> for a list of available mechanisms.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Connection) connection - Target Connection.\n\t             *\n\t             *  Returns:\n\t             *    (Boolean) If mechanism was able to run.\n\t             */\n\t            /* jshint unused:false */\n\t            test: function (connection) {\n\t                return true;\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** PrivateFunction: onStart\n\t             *  Called before starting mechanism on some connection.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Connection) connection - Target Connection.\n\t             */\n\t            onStart: function (connection) {\n\t                this._connection = connection;\n\t            },\n\n\t            /** PrivateFunction: onChallenge\n\t             *  Called by protocol implementation on incoming challenge. If client is\n\t             *  first (isClientFirst == true) challenge will be null on the first call.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Connection) connection - Target Connection.\n\t             *    (String) challenge - current challenge to handle.\n\t             *\n\t             *  Returns:\n\t             *    (String) Mechanism response.\n\t             */\n\t            /* jshint unused:false */\n\t            onChallenge: function (connection, challenge) {\n\t                throw new Error(\"You should implement challenge handling!\");\n\t            },\n\t            /* jshint unused:true */\n\n\t            /** PrivateFunction: onFailure\n\t             *  Protocol informs mechanism implementation about SASL failure.\n\t             */\n\t            onFailure: function () {\n\t                this._connection = null;\n\t            },\n\n\t            /** PrivateFunction: onSuccess\n\t             *  Protocol informs mechanism implementation about SASL success.\n\t             */\n\t            onSuccess: function () {\n\t                this._connection = null;\n\t            }\n\t        };\n\n\t        /** Constants: SASL mechanisms\n\t         *  Available authentication mechanisms\n\t         *\n\t         *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n\t         *  Strophe.SASLPlain - SASL PLAIN authentication.\n\t         *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n\t         *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n\t         *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n\t         *  Strophe.SASLExternal - SASL EXTERNAL authentication\n\t         */\n\n\t// Building SASL callbacks\n\n\t        /** PrivateConstructor: SASLAnonymous\n\t         *  SASL ANONYMOUS authentication.\n\t         */\n\t        Strophe.SASLAnonymous = function () {\n\t        };\n\n\t        Strophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 10);\n\n\t        Strophe.SASLAnonymous.prototype.test = function (connection) {\n\t            return connection.authcid === null;\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLAnonymous.prototype.name] = Strophe.SASLAnonymous;\n\n\t        /** PrivateConstructor: SASLPlain\n\t         *  SASL PLAIN authentication.\n\t         */\n\t        Strophe.SASLPlain = function () {\n\t        };\n\n\t        Strophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 20);\n\n\t        Strophe.SASLPlain.prototype.test = function (connection) {\n\t            return connection.authcid !== null;\n\t        };\n\n\t        Strophe.SASLPlain.prototype.onChallenge = function (connection) {\n\t            var auth_str = connection.authzid;\n\t            auth_str = auth_str + \"\\u0000\";\n\t            auth_str = auth_str + connection.authcid;\n\t            auth_str = auth_str + \"\\u0000\";\n\t            auth_str = auth_str + connection.pass;\n\t            return utils.utf16to8(auth_str);\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLPlain.prototype.name] = Strophe.SASLPlain;\n\n\t        /** PrivateConstructor: SASLSHA1\n\t         *  SASL SCRAM SHA 1 authentication.\n\t         */\n\t        Strophe.SASLSHA1 = function () {\n\t        };\n\n\t        Strophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 40);\n\n\t        Strophe.SASLSHA1.prototype.test = function (connection) {\n\t            return connection.authcid !== null;\n\t        };\n\n\t        Strophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n\t            var cnonce = test_cnonce || MD5.hexdigest(Math.random() * 1234567890);\n\t            var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n\t            auth_str += \",r=\";\n\t            auth_str += cnonce;\n\n\t            connection._sasl_data.cnonce = cnonce;\n\t            connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n\n\t            auth_str = \"n,,\" + auth_str;\n\n\t            this.onChallenge = function (connection, challenge) {\n\t                var nonce, salt, iter, Hi, U, U_old, i, k, pass;\n\t                var clientKey, serverKey, clientSignature;\n\t                var responseText = \"c=biws,\";\n\t                var authMessage = connection._sasl_data[\"client-first-message-bare\"] + \",\" +\n\t                    challenge + \",\";\n\t                var cnonce = connection._sasl_data.cnonce;\n\t                var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n\t                while (challenge.match(attribMatch)) {\n\t                    var matches = challenge.match(attribMatch);\n\t                    challenge = challenge.replace(matches[0], \"\");\n\t                    switch (matches[1]) {\n\t                        case \"r\":\n\t                            nonce = matches[2];\n\t                            break;\n\t                        case \"s\":\n\t                            salt = matches[2];\n\t                            break;\n\t                        case \"i\":\n\t                            iter = matches[2];\n\t                            break;\n\t                    }\n\t                }\n\n\t                if (nonce.substr(0, cnonce.length) !== cnonce) {\n\t                    connection._sasl_data = {};\n\t                    return connection._sasl_failure_cb();\n\t                }\n\n\t                responseText += \"r=\" + nonce;\n\t                authMessage += responseText;\n\n\t                salt = Base64.decode(salt);\n\t                salt += \"\\x00\\x00\\x00\\x01\";\n\n\t                pass = utils.utf16to8(connection.pass);\n\t                Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n\t                for (i = 1; i < iter; i++) {\n\t                    U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n\t                    for (k = 0; k < 5; k++) {\n\t                        Hi[k] ^= U[k];\n\t                    }\n\t                    U_old = U;\n\t                }\n\t                Hi = SHA1.binb2str(Hi);\n\n\t                clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n\t                serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n\t                clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n\t                connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n\t                for (k = 0; k < 5; k++) {\n\t                    clientKey[k] ^= clientSignature[k];\n\t                }\n\n\t                responseText += \",p=\" + Base64.encode(SHA1.binb2str(clientKey));\n\t                return responseText;\n\t            }.bind(this);\n\n\t            return auth_str;\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLSHA1.prototype.name] = Strophe.SASLSHA1;\n\n\t        /** PrivateConstructor: SASLMD5\n\t         *  SASL DIGEST MD5 authentication.\n\t         */\n\t        Strophe.SASLMD5 = function () {\n\t        };\n\n\t        Strophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 30);\n\n\t        Strophe.SASLMD5.prototype.test = function (connection) {\n\t            return connection.authcid !== null;\n\t        };\n\n\t        /** PrivateFunction: _quote\n\t         *  _Private_ utility function to backslash escape and quote strings.\n\t         *\n\t         *  Parameters:\n\t         *    (String) str - The string to be quoted.\n\t         *\n\t         *  Returns:\n\t         *    quoted string\n\t         */\n\t        Strophe.SASLMD5.prototype._quote = function (str) {\n\t            return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"';\n\t            //\" end string workaround for emacs\n\t        };\n\n\n\t        Strophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n\t            var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n\t            var cnonce = test_cnonce || MD5.hexdigest(\"\" + (Math.random() * 1234567890));\n\t            var realm = \"\";\n\t            var host = null;\n\t            var nonce = \"\";\n\t            var qop = \"\";\n\t            var matches;\n\n\t            while (challenge.match(attribMatch)) {\n\t                matches = challenge.match(attribMatch);\n\t                challenge = challenge.replace(matches[0], \"\");\n\t                matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\t                switch (matches[1]) {\n\t                    case \"realm\":\n\t                        realm = matches[2];\n\t                        break;\n\t                    case \"nonce\":\n\t                        nonce = matches[2];\n\t                        break;\n\t                    case \"qop\":\n\t                        qop = matches[2];\n\t                        break;\n\t                    case \"host\":\n\t                        host = matches[2];\n\t                        break;\n\t                }\n\t            }\n\n\t            var digest_uri = connection.servtype + \"/\" + connection.domain;\n\t            if (host !== null) {\n\t                digest_uri = digest_uri + \"/\" + host;\n\t            }\n\n\t            var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n\t            var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n\t            var A2 = 'AUTHENTICATE:' + digest_uri;\n\n\t            var responseText = \"\";\n\t            responseText += 'charset=utf-8,';\n\t            responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n\t            responseText += 'realm=' + this._quote(realm) + ',';\n\t            responseText += 'nonce=' + this._quote(nonce) + ',';\n\t            responseText += 'nc=00000001,';\n\t            responseText += 'cnonce=' + this._quote(cnonce) + ',';\n\t            responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n\t            responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" +\n\t                    nonce + \":00000001:\" +\n\t                    cnonce + \":auth:\" +\n\t                    MD5.hexdigest(A2)) + \",\";\n\t            responseText += 'qop=auth';\n\n\t            this.onChallenge = function () {\n\t                return \"\";\n\t            };\n\n\t            return responseText;\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLMD5.prototype.name] = Strophe.SASLMD5;\n\n\t        /** PrivateConstructor: SASLOAuthBearer\n\t         *  SASL OAuth Bearer authentication.\n\t         */\n\t        Strophe.SASLOAuthBearer = function () {\n\t        };\n\n\t        Strophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 50);\n\n\t        Strophe.SASLOAuthBearer.prototype.test = function (connection) {\n\t            return connection.authcid !== null;\n\t        };\n\n\t        Strophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n\t            var auth_str = 'n,a=';\n\t            auth_str = auth_str + connection.authzid;\n\t            auth_str = auth_str + ',';\n\t            auth_str = auth_str + \"\\u0001\";\n\t            auth_str = auth_str + 'auth=Bearer ';\n\t            auth_str = auth_str + connection.pass;\n\t            auth_str = auth_str + \"\\u0001\";\n\t            auth_str = auth_str + \"\\u0001\";\n\t            return utils.utf16to8(auth_str);\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLOAuthBearer.prototype.name] = Strophe.SASLOAuthBearer;\n\n\n\t        /** PrivateConstructor: SASLExternal\n\t         *  SASL EXTERNAL authentication.\n\t         *\n\t         *  The EXTERNAL mechanism allows a client to request the server to use\n\t         *  credentials established by means external to the mechanism to\n\t         *  authenticate the client. The external means may be, for instance,\n\t         *  TLS services.\n\t         */\n\t        Strophe.SASLExternal = function () {\n\t        };\n\t        Strophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 60);\n\n\t        Strophe.SASLExternal.prototype.onChallenge = function (connection) {\n\t            /** According to XEP-178, an authzid SHOULD NOT be presented when the\n\t             * authcid contained or implied in the client certificate is the JID (i.e.\n\t             * authzid) with which the user wants to log in as.\n\t             *\n\t             * To NOT send the authzid, the user should therefore set the authcid equal\n\t             * to the JID when instantiating a new Strophe.Connection object.\n\t             */\n\t            return connection.authcid === connection.authzid ? '' : connection.authzid;\n\t        };\n\n\t        Strophe.Connection.prototype.mechanisms[Strophe.SASLExternal.prototype.name] = Strophe.SASLExternal;\n\n\t        return {\n\t            Strophe: Strophe,\n\t            $build: $build,\n\t            $msg: $msg,\n\t            $iq: $iq,\n\t            $pres: $pres,\n\t            SHA1: SHA1,\n\t            Base64: Base64,\n\t            MD5: MD5,\n\t        };\n\t    }));\n\n\t    /*\n\t     This program is distributed under the terms of the MIT license.\n\t     Please see the LICENSE file for details.\n\n\t     Copyright 2006-2008, OGG, LLC\n\t     */\n\n\t    /* jshint undef: true, unused: true:, noarg: true, latedef: true */\n\t    /* global define, window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject, Strophe, $build */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_5__], __WEBPACK_LOCAL_MODULE_6__ = (function (core) {\n\t                return factory(\n\t                    core.Strophe,\n\t                    core.$build\n\t                );\n\t            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n\t        } else {\n\t            // Browser globals\n\t            return factory(Strophe, $build);\n\t        }\n\t    }(this, function (Strophe, $build) {\n\n\t        /** PrivateClass: Strophe.Request\n\t         *  _Private_ helper class that provides a cross implementation abstraction\n\t         *  for a BOSH related XMLHttpRequest.\n\t         *\n\t         *  The Strophe.Request class is used internally to encapsulate BOSH request\n\t         *  information.  It is not meant to be used from user's code.\n\t         */\n\n\t        /** PrivateConstructor: Strophe.Request\n\t         *  Create and initialize a new Strophe.Request object.\n\t         *\n\t         *  Parameters:\n\t         *    (XMLElement) elem - The XML data to be sent in the request.\n\t         *    (Function) func - The function that will be called when the\n\t         *      XMLHttpRequest readyState changes.\n\t         *    (Integer) rid - The BOSH rid attribute associated with this request.\n\t         *    (Integer) sends - The number of times this same request has been\n\t         *      sent.\n\t         */\n\t        Strophe.Request = function (elem, func, rid, sends) {\n\t            this.id = ++Strophe._requestId;\n\t            this.xmlData = elem;\n\t            this.data = Strophe.serialize(elem);\n\t            // save original function in case we need to make a new request\n\t            // from this one.\n\t            this.origFunc = func;\n\t            this.func = func;\n\t            this.rid = rid;\n\t            this.date = NaN;\n\t            this.sends = sends || 0;\n\t            this.abort = false;\n\t            this.dead = null;\n\n\t            this.age = function () {\n\t                if (!this.date) {\n\t                    return 0;\n\t                }\n\t                var now = new Date();\n\t                return (now - this.date) / 1000;\n\t            };\n\t            this.timeDead = function () {\n\t                if (!this.dead) {\n\t                    return 0;\n\t                }\n\t                var now = new Date();\n\t                return (now - this.dead) / 1000;\n\t            };\n\t            this.xhr = this._newXHR();\n\t        };\n\n\t        Strophe.Request.prototype = {\n\t            /** PrivateFunction: getResponse\n\t             *  Get a response from the underlying XMLHttpRequest.\n\t             *\n\t             *  This function attempts to get a response from the request and checks\n\t             *  for errors.\n\t             *\n\t             *  Throws:\n\t             *    \"parsererror\" - A parser error occured.\n\t             *    \"badformat\" - The entity has sent XML that cannot be processed.\n\t             *\n\t             *  Returns:\n\t             *    The DOM element tree of the response.\n\t             */\n\t            getResponse: function () {\n\t                var node = null;\n\t                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n\t                    node = this.xhr.responseXML.documentElement;\n\t                    if (node.tagName == \"parsererror\") {\n\t                        Strophe.error(\"invalid response received\");\n\t                        Strophe.error(\"responseText: \" + this.xhr.responseText);\n\t                        Strophe.error(\"responseXML: \" +\n\t                            Strophe.serialize(this.xhr.responseXML));\n\t                        throw \"parsererror\";\n\t                    }\n\t                } else if (this.xhr.responseText) {\n\t                    Strophe.error(\"invalid response received\");\n\t                    Strophe.error(\"responseText: \" + this.xhr.responseText);\n\t                    throw \"badformat\";\n\t                }\n\n\t                return node;\n\t            },\n\n\t            /** PrivateFunction: _newXHR\n\t             *  _Private_ helper function to create XMLHttpRequests.\n\t             *\n\t             *  This function creates XMLHttpRequests across all implementations.\n\t             *\n\t             *  Returns:\n\t             *    A new XMLHttpRequest.\n\t             */\n\t            _newXHR: function () {\n\t                var xhr = null;\n\t                if (window.XMLHttpRequest) {\n\t                    xhr = new XMLHttpRequest();\n\t                    if (xhr.overrideMimeType) {\n\t                        xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n\t                    }\n\t                } else if (window.ActiveXObject) {\n\t                    xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n\t                }\n\t                // use Function.bind() to prepend ourselves as an argument\n\t                xhr.onreadystatechange = this.func.bind(null, this);\n\t                return xhr;\n\t            }\n\t        };\n\n\t        /** Class: Strophe.Bosh\n\t         *  _Private_ helper class that handles BOSH Connections\n\t         *\n\t         *  The Strophe.Bosh class is used internally by Strophe.Connection\n\t         *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n\t         */\n\n\t        /** File: bosh.js\n\t         *  A JavaScript library to enable BOSH in Strophejs.\n\t         *\n\t         *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n\t         *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n\t         *  More information on BOSH can be found in XEP 124.\n\t         */\n\n\t        /** PrivateConstructor: Strophe.Bosh\n\t         *  Create and initialize a Strophe.Bosh object.\n\t         *\n\t         *  Parameters:\n\t         *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.Bosh object.\n\t         */\n\t        Strophe.Bosh = function (connection) {\n\t            this._conn = connection;\n\t            /* request id for body tags */\n\t            this.rid = Math.floor(Math.random() * 4294967295);\n\t            /* The current session ID. */\n\t            this.sid = null;\n\n\t            // default BOSH values\n\t            this.hold = 1;\n\t            this.wait = 60;\n\t            this.window = 5;\n\t            this.errors = 0;\n\n\t            this._requests = [];\n\t        };\n\n\t        Strophe.Bosh.prototype = {\n\t            /** Variable: strip\n\t             *\n\t             *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n\t             *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n\t             *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n\t             *\n\t             *  > Strophe.Bosh.prototype.strip = \"body\";\n\t             *\n\t             *  This will enable stripping of the body tag in both\n\t             *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n\t             */\n\t            strip: null,\n\n\t            /** PrivateFunction: _buildBody\n\t             *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n\t             *\n\t             *  Returns:\n\t             *    A Strophe.Builder with a <body/> element.\n\t             */\n\t            _buildBody: function () {\n\t                var bodyWrap = $build('body', {\n\t                    rid: this.rid++,\n\t                    xmlns: Strophe.NS.HTTPBIND\n\t                });\n\t                if (this.sid !== null) {\n\t                    bodyWrap.attrs({sid: this.sid});\n\t                }\n\t                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n\t                    this._cacheSession();\n\t                }\n\t                return bodyWrap;\n\t            },\n\n\t            /** PrivateFunction: _reset\n\t             *  Reset the connection.\n\t             *\n\t             *  This function is called by the reset function of the Strophe Connection\n\t             */\n\t            _reset: function () {\n\t                this.rid = Math.floor(Math.random() * 4294967295);\n\t                this.sid = null;\n\t                this.errors = 0;\n\t                if (this._conn._sessionCachingSupported()) {\n\t                    window.sessionStorage.removeItem('strophe-bosh-session');\n\t                }\n\n\t                this._conn.nextValidRid(this.rid);\n\t            },\n\n\t            /** PrivateFunction: _connect\n\t             *  _Private_ function that initializes the BOSH connection.\n\t             *\n\t             *  Creates and sends the Request that initializes the BOSH connection.\n\t             */\n\t            _connect: function (wait, hold, route) {\n\t                this.wait = wait || this.wait;\n\t                this.hold = hold || this.hold;\n\t                this.errors = 0;\n\n\t                // build the body tag\n\t                var body = this._buildBody().attrs({\n\t                    to: this._conn.domain,\n\t                    \"xml:lang\": \"en\",\n\t                    wait: this.wait,\n\t                    hold: this.hold,\n\t                    content: \"text/xml; charset=utf-8\",\n\t                    ver: \"1.6\",\n\t                    \"xmpp:version\": \"1.0\",\n\t                    \"xmlns:xmpp\": Strophe.NS.BOSH\n\t                });\n\n\t                if (route) {\n\t                    body.attrs({\n\t                        route: route\n\t                    });\n\t                }\n\n\t                var _connect_cb = this._conn._connect_cb;\n\n\t                this._requests.push(\n\t                    new Strophe.Request(body.tree(),\n\t                        this._onRequestStateChange.bind(\n\t                            this, _connect_cb.bind(this._conn)),\n\t                        body.tree().getAttribute(\"rid\")));\n\t                this._throttledRequestHandler();\n\t            },\n\n\t            /** PrivateFunction: _attach\n\t             *  Attach to an already created and authenticated BOSH session.\n\t             *\n\t             *  This function is provided to allow Strophe to attach to BOSH\n\t             *  sessions which have been created externally, perhaps by a Web\n\t             *  application.  This is often used to support auto-login type features\n\t             *  without putting user credentials into the page.\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - The full JID that is bound by the session.\n\t             *    (String) sid - The SID of the BOSH session.\n\t             *    (String) rid - The current RID of the BOSH session.  This RID\n\t             *      will be used by the next request.\n\t             *    (Function) callback The connect callback function.\n\t             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n\t             *      time the server will wait before returning an empty result for\n\t             *      a request.  The default setting of 60 seconds is recommended.\n\t             *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n\t             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n\t             *      number of connections the server will hold at one time.  This\n\t             *      should almost always be set to 1 (the default).\n\t             *    (Integer) wind - The optional HTTBIND window value.  This is the\n\t             *      allowed range of request ids that are valid.  The default is 5.\n\t             */\n\t            _attach: function (jid, sid, rid, callback, wait, hold, wind) {\n\t                this._conn.jid = jid;\n\t                this.sid = sid;\n\t                this.rid = rid;\n\n\t                this._conn.connect_callback = callback;\n\n\t                this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n\n\t                this._conn.authenticated = true;\n\t                this._conn.connected = true;\n\n\t                this.wait = wait || this.wait;\n\t                this.hold = hold || this.hold;\n\t                this.window = wind || this.window;\n\n\t                this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n\t            },\n\n\t            /** PrivateFunction: _restore\n\t             *  Attempt to restore a cached BOSH session\n\t             *\n\t             *  Parameters:\n\t             *    (String) jid - The full JID that is bound by the session.\n\t             *      This parameter is optional but recommended, specifically in cases\n\t             *      where prebinded BOSH sessions are used where it's important to know\n\t             *      that the right session is being restored.\n\t             *    (Function) callback The connect callback function.\n\t             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n\t             *      time the server will wait before returning an empty result for\n\t             *      a request.  The default setting of 60 seconds is recommended.\n\t             *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n\t             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n\t             *      number of connections the server will hold at one time.  This\n\t             *      should almost always be set to 1 (the default).\n\t             *    (Integer) wind - The optional HTTBIND window value.  This is the\n\t             *      allowed range of request ids that are valid.  The default is 5.\n\t             */\n\t            _restore: function (jid, callback, wait, hold, wind) {\n\t                var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\t                if (typeof session !== \"undefined\" &&\n\t                    session !== null &&\n\t                    session.rid &&\n\t                    session.sid &&\n\t                    session.jid &&\n\t                    (typeof jid === \"undefined\" || jid === null || Strophe.getBareJidFromJid(session.jid) == Strophe.getBareJidFromJid(jid))) {\n\t                    this._conn.restored = true;\n\t                    this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n\t                } else {\n\t                    throw {name: \"StropheSessionError\", message: \"_restore: no restoreable session.\"};\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _cacheSession\n\t             *  _Private_ handler for the beforeunload event.\n\t             *\n\t             *  This handler is used to process the Bosh-part of the initial request.\n\t             *  Parameters:\n\t             *    (Strophe.Request) bodyWrap - The received stanza.\n\t             */\n\t            _cacheSession: function () {\n\t                if (this._conn.authenticated) {\n\t                    if (this._conn.jid && this.rid && this.sid) {\n\t                        window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n\t                            'jid': this._conn.jid,\n\t                            'rid': this.rid,\n\t                            'sid': this.sid\n\t                        }));\n\t                    }\n\t                } else {\n\t                    window.sessionStorage.removeItem('strophe-bosh-session');\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _connect_cb\n\t             *  _Private_ handler for initial connection request.\n\t             *\n\t             *  This handler is used to process the Bosh-part of the initial request.\n\t             *  Parameters:\n\t             *    (Strophe.Request) bodyWrap - The received stanza.\n\t             */\n\t            _connect_cb: function (bodyWrap) {\n\t                var typ = bodyWrap.getAttribute(\"type\");\n\t                var cond, conflict;\n\t                if (typ !== null && typ == \"terminate\") {\n\t                    // an error occurred\n\t                    cond = bodyWrap.getAttribute(\"condition\");\n\t                    Strophe.error(\"BOSH-Connection failed: \" + cond);\n\t                    conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\t                    if (cond !== null) {\n\t                        if (cond == \"remote-stream-error\" && conflict.length > 0) {\n\t                            cond = \"conflict\";\n\t                        }\n\t                        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n\t                    } else {\n\t                        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n\t                    }\n\t                    this._conn._doDisconnect(cond);\n\t                    return Strophe.Status.CONNFAIL;\n\t                }\n\n\t                // check to make sure we don't overwrite these if _connect_cb is\n\t                // called multiple times in the case of missing stream:features\n\t                if (!this.sid) {\n\t                    this.sid = bodyWrap.getAttribute(\"sid\");\n\t                }\n\t                var wind = bodyWrap.getAttribute('requests');\n\t                if (wind) {\n\t                    this.window = parseInt(wind, 10);\n\t                }\n\t                var hold = bodyWrap.getAttribute('hold');\n\t                if (hold) {\n\t                    this.hold = parseInt(hold, 10);\n\t                }\n\t                var wait = bodyWrap.getAttribute('wait');\n\t                if (wait) {\n\t                    this.wait = parseInt(wait, 10);\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _disconnect\n\t             *  _Private_ part of Connection.disconnect for Bosh\n\t             *\n\t             *  Parameters:\n\t             *    (Request) pres - This stanza will be sent before disconnecting.\n\t             */\n\t            _disconnect: function (pres) {\n\t                this._sendTerminate(pres);\n\t            },\n\n\t            /** PrivateFunction: _doDisconnect\n\t             *  _Private_ function to disconnect.\n\t             *\n\t             *  Resets the SID and RID.\n\t             */\n\t            _doDisconnect: function () {\n\t                this.sid = null;\n\t                this.rid = Math.floor(Math.random() * 4294967295);\n\t                if (this._conn._sessionCachingSupported()) {\n\t                    window.sessionStorage.removeItem('strophe-bosh-session');\n\t                }\n\n\t                this._conn.nextValidRid(this.rid);\n\t            },\n\n\t            /** PrivateFunction: _emptyQueue\n\t             * _Private_ function to check if the Request queue is empty.\n\t             *\n\t             *  Returns:\n\t             *    True, if there are no Requests queued, False otherwise.\n\t             */\n\t            _emptyQueue: function () {\n\t                return this._requests.length === 0;\n\t            },\n\n\t            /** PrivateFunction: _hitError\n\t             *  _Private_ function to handle the error count.\n\t             *\n\t             *  Requests are resent automatically until their error count reaches\n\t             *  5.  Each time an error is encountered, this function is called to\n\t             *  increment the count and disconnect if the count is too high.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) reqStatus - The request status.\n\t             */\n\t            _hitError: function (reqStatus) {\n\t                this.errors++;\n\t                Strophe.warn(\"request errored, status: \" + reqStatus +\n\t                    \", number of errors: \" + this.errors);\n\t                if (this.errors > 4) {\n\t                    this._conn._onDisconnectTimeout();\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _no_auth_received\n\t             *\n\t             * Called on stream start/restart when no stream:features\n\t             * has been received and sends a blank poll request.\n\t             */\n\t            _no_auth_received: function (_callback) {\n\t                if (_callback) {\n\t                    _callback = _callback.bind(this._conn);\n\t                } else {\n\t                    _callback = this._conn._connect_cb.bind(this._conn);\n\t                }\n\t                var body = this._buildBody();\n\t                this._requests.push(\n\t                    new Strophe.Request(body.tree(),\n\t                        this._onRequestStateChange.bind(\n\t                            this, _callback.bind(this._conn)),\n\t                        body.tree().getAttribute(\"rid\")));\n\t                this._throttledRequestHandler();\n\t            },\n\n\t            /** PrivateFunction: _onDisconnectTimeout\n\t             *  _Private_ timeout handler for handling non-graceful disconnection.\n\t             *\n\t             *  Cancels all remaining Requests and clears the queue.\n\t             */\n\t            _onDisconnectTimeout: function () {\n\t                this._abortAllRequests();\n\t            },\n\n\t            /** PrivateFunction: _abortAllRequests\n\t             *  _Private_ helper function that makes sure all pending requests are aborted.\n\t             */\n\t            _abortAllRequests: function _abortAllRequests() {\n\t                var req;\n\t                while (this._requests.length > 0) {\n\t                    req = this._requests.pop();\n\t                    req.abort = true;\n\t                    req.xhr.abort();\n\t                    // jslint complains, but this is fine. setting to empty func\n\t                    // is necessary for IE6\n\t                    req.xhr.onreadystatechange = function () {\n\t                    }; // jshint ignore:line\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _onIdle\n\t             *  _Private_ handler called by Strophe.Connection._onIdle\n\t             *\n\t             *  Sends all queued Requests or polls with empty Request if there are none.\n\t             */\n\t            _onIdle: function () {\n\t                var data = this._conn._data;\n\n\t                // if no requests are in progress, poll\n\t                if (this._conn.authenticated && this._requests.length === 0 &&\n\t                    data.length === 0 && !this._conn.disconnecting) {\n\t                    Strophe.info(\"no requests during idle cycle, sending \" +\n\t                        \"blank request\");\n\t                    data.push(null);\n\t                }\n\n\t                if (this._conn.paused) {\n\t                    return;\n\t                }\n\n\t                if (this._requests.length < 2 && data.length > 0) {\n\t                    var body = this._buildBody();\n\t                    for (var i = 0; i < data.length; i++) {\n\t                        if (data[i] !== null) {\n\t                            if (data[i] === \"restart\") {\n\t                                body.attrs({\n\t                                    to: this._conn.domain,\n\t                                    \"xml:lang\": \"en\",\n\t                                    \"xmpp:restart\": \"true\",\n\t                                    \"xmlns:xmpp\": Strophe.NS.BOSH\n\t                                });\n\t                            } else {\n\t                                body.cnode(data[i]).up();\n\t                            }\n\t                        }\n\t                    }\n\t                    delete this._conn._data;\n\t                    this._conn._data = [];\n\t                    this._requests.push(\n\t                        new Strophe.Request(body.tree(),\n\t                            this._onRequestStateChange.bind(\n\t                                this, this._conn._dataRecv.bind(this._conn)),\n\t                            body.tree().getAttribute(\"rid\")));\n\t                    this._throttledRequestHandler();\n\t                }\n\n\t                if (this._requests.length > 0) {\n\t                    var time_elapsed = this._requests[0].age();\n\t                    if (this._requests[0].dead !== null) {\n\t                        if (this._requests[0].timeDead() >\n\t                            Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n\t                            this._throttledRequestHandler();\n\t                        }\n\t                    }\n\n\t                    if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n\t                        Strophe.warn(\"Request \" +\n\t                            this._requests[0].id +\n\t                            \" timed out, over \" + Math.floor(Strophe.TIMEOUT * this.wait) +\n\t                            \" seconds since last activity\");\n\t                        this._throttledRequestHandler();\n\t                    }\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _onRequestStateChange\n\t             *  _Private_ handler for Strophe.Request state changes.\n\t             *\n\t             *  This function is called when the XMLHttpRequest readyState changes.\n\t             *  It contains a lot of error handling logic for the many ways that\n\t             *  requests can fail, and calls the request callback when requests\n\t             *  succeed.\n\t             *\n\t             *  Parameters:\n\t             *    (Function) func - The handler for the request.\n\t             *    (Strophe.Request) req - The request that is changing readyState.\n\t             */\n\t            _onRequestStateChange: function (func, req) {\n\t                Strophe.debug(\"request id \" + req.id +\n\t                    \".\" + req.sends + \" state changed to \" +\n\t                    req.xhr.readyState);\n\n\t                if (req.abort) {\n\t                    req.abort = false;\n\t                    return;\n\t                }\n\n\t                // request complete\n\t                var reqStatus;\n\t                if (req.xhr.readyState == 4) {\n\t                    reqStatus = 0;\n\t                    try {\n\t                        reqStatus = req.xhr.status;\n\t                    } catch (e) {\n\t                        // ignore errors from undefined status attribute.  works\n\t                        // around a browser bug\n\t                    }\n\n\t                    if (typeof(reqStatus) == \"undefined\") {\n\t                        reqStatus = 0;\n\t                    }\n\n\t                    if (this.disconnecting) {\n\t                        if (reqStatus >= 400) {\n\t                            this._hitError(reqStatus);\n\t                            return;\n\t                        }\n\t                    }\n\n\t                    var reqIs0 = (this._requests[0] == req);\n\t                    var reqIs1 = (this._requests[1] == req);\n\n\t                    if ((reqStatus > 0 && reqStatus < 500) || req.sends > 5) {\n\t                        // remove from internal queue\n\t                        this._removeRequest(req);\n\t                        Strophe.debug(\"request id \" +\n\t                            req.id +\n\t                            \" should now be removed\");\n\t                    }\n\n\t                    // request succeeded\n\t                    if (reqStatus == 200) {\n\t                        // if request 1 finished, or request 0 finished and request\n\t                        // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n\t                        // restart the other - both will be in the first spot, as the\n\t                        // completed request has been removed from the queue already\n\t                        if (reqIs1 ||\n\t                            (reqIs0 && this._requests.length > 0 &&\n\t                            this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\n\t                            this._restartRequest(0);\n\t                        }\n\n\t                        this._conn.nextValidRid(Number(req.rid) + 1);\n\n\t                        // call handler\n\t                        Strophe.debug(\"request id \" +\n\t                            req.id + \".\" +\n\t                            req.sends + \" got 200\");\n\t                        func(req);\n\t                        this.errors = 0;\n\t                    } else {\n\t                        Strophe.error(\"request id \" +\n\t                            req.id + \".\" +\n\t                            req.sends + \" error \" + reqStatus +\n\t                            \" happened\");\n\t                        if (reqStatus === 0 ||\n\t                            (reqStatus >= 400 && reqStatus < 600) ||\n\t                            reqStatus >= 12000) {\n\t                            this._hitError(reqStatus);\n\t                            if (reqStatus >= 400 && reqStatus < 500) {\n\t                                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n\t                                this._conn._doDisconnect();\n\t                            }\n\t                        }\n\t                    }\n\n\t                    if (!((reqStatus > 0 && reqStatus < 500) ||\n\t                        req.sends > 5)) {\n\t                        this._throttledRequestHandler();\n\t                    }\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _processRequest\n\t             *  _Private_ function to process a request in the queue.\n\t             *\n\t             *  This function takes requests off the queue and sends them and\n\t             *  restarts dead requests.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) i - The index of the request in the queue.\n\t             */\n\t            _processRequest: function (i) {\n\t                var self = this;\n\t                var req = this._requests[i];\n\t                var reqStatus = -1;\n\n\t                try {\n\t                    if (req.xhr.readyState == 4) {\n\t                        reqStatus = req.xhr.status;\n\t                    }\n\t                } catch (e) {\n\t                    Strophe.error(\"caught an error in _requests[\" + i +\n\t                        \"], reqStatus: \" + reqStatus);\n\t                }\n\n\t                if (typeof(reqStatus) == \"undefined\") {\n\t                    reqStatus = -1;\n\t                }\n\n\t                // make sure we limit the number of retries\n\t                if (req.sends > this._conn.maxRetries) {\n\t                    this._conn._onDisconnectTimeout();\n\t                    return;\n\t                }\n\n\t                var time_elapsed = req.age();\n\t                var primaryTimeout = (!isNaN(time_elapsed) &&\n\t                time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\n\t                var secondaryTimeout = (req.dead !== null &&\n\t                req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\n\t                var requestCompletedWithServerError = (req.xhr.readyState == 4 &&\n\t                (reqStatus < 1 ||\n\t                reqStatus >= 500));\n\t                if (primaryTimeout || secondaryTimeout ||\n\t                    requestCompletedWithServerError) {\n\t                    if (secondaryTimeout) {\n\t                        Strophe.error(\"Request \" +\n\t                            this._requests[i].id +\n\t                            \" timed out (secondary), restarting\");\n\t                    }\n\t                    req.abort = true;\n\t                    req.xhr.abort();\n\t                    // setting to null fails on IE6, so set to empty function\n\t                    req.xhr.onreadystatechange = function () {\n\t                    };\n\t                    this._requests[i] = new Strophe.Request(req.xmlData,\n\t                        req.origFunc,\n\t                        req.rid,\n\t                        req.sends);\n\t                    req = this._requests[i];\n\t                }\n\n\t                if (req.xhr.readyState === 0) {\n\t                    Strophe.debug(\"request id \" + req.id +\n\t                        \".\" + req.sends + \" posting\");\n\n\t                    try {\n\t                        var contentType = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n\t                        req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\t                        req.xhr.setRequestHeader && req.xhr.setRequestHeader(\"Content-Type\", contentType);\n\t                        if (this._conn.options.withCredentials) {\n\t                            req.xhr.withCredentials = true;\n\t                        }\n\t                    } catch (e2) {\n\t                        Strophe.error(\"XHR open failed.\");\n\t                        if (!this._conn.connected) {\n\t                            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,\n\t                                \"bad-service\");\n\t                        }\n\t                        this._conn.disconnect();\n\t                        return;\n\t                    }\n\n\t                    // Fires the XHR request -- may be invoked immediately\n\t                    // or on a gradually expanding retry window for reconnects\n\t                    var sendFunc = function () {\n\t                        req.date = new Date();\n\t                        if (self._conn.options.customHeaders) {\n\t                            var headers = self._conn.options.customHeaders;\n\t                            for (var header in headers) {\n\t                                if (headers.hasOwnProperty(header)) {\n\t                                    req.xhr.setRequestHeader(header, headers[header]);\n\t                                }\n\t                            }\n\t                        }\n\t                        req.xhr.send(req.data);\n\t                    };\n\n\t                    // Implement progressive backoff for reconnects --\n\t                    // First retry (send == 1) should also be instantaneous\n\t                    if (req.sends > 1) {\n\t                        // Using a cube of the retry number creates a nicely\n\t                        // expanding retry window\n\t                        var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\n\t                                Math.pow(req.sends, 3)) * 1000;\n\n\t                        // XXX: setTimeout should be called only with function expressions (23974bc1)\n\t                        setTimeout(function () {\n\t                            sendFunc();\n\t                        }, backoff);\n\t                    } else {\n\t                        sendFunc();\n\t                    }\n\n\t                    req.sends++;\n\n\t                    if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n\t                        if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n\t                            this._conn.xmlOutput(req.xmlData.childNodes[0]);\n\t                        } else {\n\t                            this._conn.xmlOutput(req.xmlData);\n\t                        }\n\t                    }\n\t                    if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n\t                        this._conn.rawOutput(req.data);\n\t                    }\n\t                } else {\n\t                    Strophe.debug(\"_processRequest: \" +\n\t                        (i === 0 ? \"first\" : \"second\") +\n\t                        \" request has readyState of \" +\n\t                        req.xhr.readyState);\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _removeRequest\n\t             *  _Private_ function to remove a request from the queue.\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Request) req - The request to remove.\n\t             */\n\t            _removeRequest: function (req) {\n\t                Strophe.debug(\"removing request\");\n\n\t                var i;\n\t                for (i = this._requests.length - 1; i >= 0; i--) {\n\t                    if (req == this._requests[i]) {\n\t                        this._requests.splice(i, 1);\n\t                    }\n\t                }\n\n\t                // IE6 fails on setting to null, so set to empty function\n\t                req.xhr.onreadystatechange = function () {\n\t                };\n\n\t                this._throttledRequestHandler();\n\t            },\n\n\t            /** PrivateFunction: _restartRequest\n\t             *  _Private_ function to restart a request that is presumed dead.\n\t             *\n\t             *  Parameters:\n\t             *    (Integer) i - The index of the request in the queue.\n\t             */\n\t            _restartRequest: function (i) {\n\t                var req = this._requests[i];\n\t                if (req.dead === null) {\n\t                    req.dead = new Date();\n\t                }\n\n\t                this._processRequest(i);\n\t            },\n\n\t            /** PrivateFunction: _reqToData\n\t             * _Private_ function to get a stanza out of a request.\n\t             *\n\t             * Tries to extract a stanza out of a Request Object.\n\t             * When this fails the current connection will be disconnected.\n\t             *\n\t             *  Parameters:\n\t             *    (Object) req - The Request.\n\t             *\n\t             *  Returns:\n\t             *    The stanza that was passed.\n\t             */\n\t            _reqToData: function (req) {\n\t                try {\n\t                    return req.getResponse();\n\t                } catch (e) {\n\t                    if (e != \"parsererror\") {\n\t                        throw e;\n\t                    }\n\t                    this._conn.disconnect(\"strophe-parsererror\");\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _sendTerminate\n\t             *  _Private_ function to send initial disconnect sequence.\n\t             *\n\t             *  This is the first step in a graceful disconnect.  It sends\n\t             *  the BOSH server a terminate body and includes an unavailable\n\t             *  presence if authentication has completed.\n\t             */\n\t            _sendTerminate: function (pres) {\n\t                Strophe.info(\"_sendTerminate was called\");\n\t                var body = this._buildBody().attrs({type: \"terminate\"});\n\n\t                if (pres) {\n\t                    body.cnode(pres.tree());\n\t                }\n\n\t                var req = new Strophe.Request(body.tree(),\n\t                    this._onRequestStateChange.bind(\n\t                        this, this._conn._dataRecv.bind(this._conn)),\n\t                    body.tree().getAttribute(\"rid\"));\n\n\t                this._requests.push(req);\n\t                this._throttledRequestHandler();\n\t            },\n\n\t            /** PrivateFunction: _send\n\t             *  _Private_ part of the Connection.send function for BOSH\n\t             *\n\t             * Just triggers the RequestHandler to send the messages that are in the queue\n\t             */\n\t            _send: function () {\n\t                clearTimeout(this._conn._idleTimeout);\n\t                this._throttledRequestHandler();\n\n\t                // XXX: setTimeout should be called only with function expressions (23974bc1)\n\t                this._conn._idleTimeout = setTimeout(function () {\n\t                    this._onIdle();\n\t                }.bind(this._conn), 100);\n\t            },\n\n\t            /** PrivateFunction: _sendRestart\n\t             *\n\t             *  Send an xmpp:restart stanza.\n\t             */\n\t            _sendRestart: function () {\n\t                this._throttledRequestHandler();\n\t                clearTimeout(this._conn._idleTimeout);\n\t            },\n\n\t            /** PrivateFunction: _throttledRequestHandler\n\t             *  _Private_ function to throttle requests to the connection window.\n\t             *\n\t             *  This function makes sure we don't send requests so fast that the\n\t             *  request ids overflow the connection window in the case that one\n\t             *  request died.\n\t             */\n\t            _throttledRequestHandler: function () {\n\t                if (!this._requests) {\n\t                    Strophe.debug(\"_throttledRequestHandler called with \" +\n\t                        \"undefined requests\");\n\t                } else {\n\t                    Strophe.debug(\"_throttledRequestHandler called with \" +\n\t                        this._requests.length + \" requests\");\n\t                }\n\n\t                if (!this._requests || this._requests.length === 0) {\n\t                    return;\n\t                }\n\n\t                if (this._requests.length > 0) {\n\t                    this._processRequest(0);\n\t                }\n\n\t                if (this._requests.length > 1 &&\n\t                    Math.abs(this._requests[0].rid -\n\t                        this._requests[1].rid) < this.window) {\n\t                    this._processRequest(1);\n\t                }\n\t            }\n\t        };\n\t        return Strophe;\n\t    }));\n\n\t    /*\n\t     This program is distributed under the terms of the MIT license.\n\t     Please see the LICENSE file for details.\n\n\t     Copyright 2006-2008, OGG, LLC\n\t     */\n\n\t    /* jshint undef: true, unused: true:, noarg: true, latedef: true */\n\t    /* global define, window, clearTimeout, WebSocket, DOMParser, Strophe, $build */\n\n\t    (function (root, factory) {\n\t        if (true) {\n\t            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_5__], __WEBPACK_LOCAL_MODULE_7__ = (function (core) {\n\t                return factory(\n\t                    core.Strophe,\n\t                    core.$build\n\t                );\n\t            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n\t        } else {\n\t            // Browser globals\n\t            return factory(Strophe, $build);\n\t        }\n\t    }(this, function (Strophe, $build) {\n\n\t        /** Class: Strophe.WebSocket\n\t         *  _Private_ helper class that handles WebSocket Connections\n\t         *\n\t         *  The Strophe.WebSocket class is used internally by Strophe.Connection\n\t         *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n\t         */\n\n\t        /** File: websocket.js\n\t         *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n\t         *\n\t         *  This file implements XMPP over WebSockets for Strophejs.\n\t         *  If a Connection is established with a Websocket url (ws://...)\n\t         *  Strophe will use WebSockets.\n\t         *  For more information on XMPP-over-WebSocket see RFC 7395:\n\t         *  http://tools.ietf.org/html/rfc7395\n\t         *\n\t         *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n\t         */\n\n\t        /** PrivateConstructor: Strophe.Websocket\n\t         *  Create and initialize a Strophe.WebSocket object.\n\t         *  Currently only sets the connection Object.\n\t         *\n\t         *  Parameters:\n\t         *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n\t         *\n\t         *  Returns:\n\t         *    A new Strophe.WebSocket object.\n\t         */\n\t        Strophe.Websocket = function (connection) {\n\t            this._conn = connection;\n\t            this.strip = \"wrapper\";\n\n\t            var service = connection.service;\n\t            if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n\t                // If the service is not an absolute URL, assume it is a path and put the absolute\n\t                // URL together from options, current URL and the path.\n\t                var new_service = \"\";\n\n\t                if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n\t                    new_service += \"ws\";\n\t                } else {\n\t                    new_service += \"wss\";\n\t                }\n\n\t                new_service += \"://\" + window.location.host;\n\n\t                if (service.indexOf(\"/\") !== 0) {\n\t                    new_service += window.location.pathname + service;\n\t                } else {\n\t                    new_service += service;\n\t                }\n\n\t                connection.service = new_service;\n\t            }\n\t        };\n\n\t        Strophe.Websocket.prototype = {\n\t            /** PrivateFunction: _buildStream\n\t             *  _Private_ helper function to generate the <stream> start tag for WebSockets\n\t             *\n\t             *  Returns:\n\t             *    A Strophe.Builder with a <stream> element.\n\t             */\n\t            _buildStream: function () {\n\t                return $build(\"open\", {\n\t                    \"xmlns\": Strophe.NS.FRAMING,\n\t                    \"to\": this._conn.domain,\n\t                    \"version\": '1.0'\n\t                });\n\t            },\n\n\t            /** PrivateFunction: _check_streamerror\n\t             * _Private_ checks a message for stream:error\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Request) bodyWrap - The received stanza.\n\t             *    connectstatus - The ConnectStatus that will be set on error.\n\t             *  Returns:\n\t             *     true if there was a streamerror, false otherwise.\n\t             */\n\t            _check_streamerror: function (bodyWrap, connectstatus) {\n\t                var errors;\n\t                if (bodyWrap.getElementsByTagNameNS) {\n\t                    errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"error\");\n\t                } else {\n\t                    errors = bodyWrap.getElementsByTagName(\"stream:error\");\n\t                }\n\t                if (errors.length === 0) {\n\t                    return false;\n\t                }\n\t                var error = errors[0];\n\n\t                var condition = \"\";\n\t                var text = \"\";\n\n\t                var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\t                for (var i = 0; i < error.childNodes.length; i++) {\n\t                    var e = error.childNodes[i];\n\t                    if (e.getAttribute(\"xmlns\") !== ns) {\n\t                        break;\n\t                    }\n\t                    if (e.nodeName === \"text\") {\n\t                        text = e.textContent;\n\t                    } else {\n\t                        condition = e.nodeName;\n\t                    }\n\t                }\n\n\t                var errorString = \"WebSocket stream error: \";\n\n\t                if (condition) {\n\t                    errorString += condition;\n\t                } else {\n\t                    errorString += \"unknown\";\n\t                }\n\n\t                if (text) {\n\t                    errorString += \" - \" + condition;\n\t                }\n\n\t                Strophe.error(errorString);\n\n\t                // close the connection on stream_error\n\t                this._conn._changeConnectStatus(connectstatus, condition);\n\t                this._conn._doDisconnect();\n\t                return true;\n\t            },\n\n\t            /** PrivateFunction: _reset\n\t             *  Reset the connection.\n\t             *\n\t             *  This function is called by the reset function of the Strophe Connection.\n\t             *  Is not needed by WebSockets.\n\t             */\n\t            _reset: function () {\n\t                return;\n\t            },\n\n\t            /** PrivateFunction: _connect\n\t             *  _Private_ function called by Strophe.Connection.connect\n\t             *\n\t             *  Creates a WebSocket for a connection and assigns Callbacks to it.\n\t             *  Does nothing if there already is a WebSocket.\n\t             */\n\t            _connect: function () {\n\t                // Ensure that there is no open WebSocket from a previous Connection.\n\t                this._closeSocket();\n\n\t                // Create the new WobSocket\n\t                this.socket = new WebSocket(this._conn.service, \"xmpp\");\n\t                this.socket.onopen = this._onOpen.bind(this);\n\t                this.socket.onerror = this._onError.bind(this);\n\t                this.socket.onclose = this._onClose.bind(this);\n\t                this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n\t            },\n\n\t            /** PrivateFunction: _connect_cb\n\t             *  _Private_ function called by Strophe.Connection._connect_cb\n\t             *\n\t             * checks for stream:error\n\t             *\n\t             *  Parameters:\n\t             *    (Strophe.Request) bodyWrap - The received stanza.\n\t             */\n\t            _connect_cb: function (bodyWrap) {\n\t                var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\n\t                if (error) {\n\t                    return Strophe.Status.CONNFAIL;\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _handleStreamStart\n\t             * _Private_ function that checks the opening <open /> tag for errors.\n\t             *\n\t             * Disconnects if there is an error and returns false, true otherwise.\n\t             *\n\t             *  Parameters:\n\t             *    (Node) message - Stanza containing the <open /> tag.\n\t             */\n\t            _handleStreamStart: function (message) {\n\t                var error = false;\n\n\t                // Check for errors in the <open /> tag\n\t                var ns = message.getAttribute(\"xmlns\");\n\t                if (typeof ns !== \"string\") {\n\t                    error = \"Missing xmlns in <open />\";\n\t                } else if (ns !== Strophe.NS.FRAMING) {\n\t                    error = \"Wrong xmlns in <open />: \" + ns;\n\t                }\n\n\t                var ver = message.getAttribute(\"version\");\n\t                if (typeof ver !== \"string\") {\n\t                    error = \"Missing version in <open />\";\n\t                } else if (ver !== \"1.0\") {\n\t                    error = \"Wrong version in <open />: \" + ver;\n\t                }\n\n\t                if (error) {\n\t                    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n\t                    this._conn._doDisconnect();\n\t                    return false;\n\t                }\n\n\t                return true;\n\t            },\n\n\t            /** PrivateFunction: _connect_cb_wrapper\n\t             * _Private_ function that handles the first connection messages.\n\t             *\n\t             * On receiving an opening stream tag this callback replaces itself with the real\n\t             * message handler. On receiving a stream error the connection is terminated.\n\t             */\n\t            _connect_cb_wrapper: function (message) {\n\t                if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n\n\t                    // Strip the XML Declaration, if there is one\n\t                    var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n\t                    if (data === '') return;\n\n\t                    var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\t                    this._conn.xmlInput(streamStart);\n\t                    this._conn.rawInput(message.data);\n\n\t                    //_handleStreamSteart will check for XML errors and disconnect on error\n\t                    if (this._handleStreamStart(streamStart)) {\n\t                        //_connect_cb will check for stream:error and disconnect on error\n\t                        this._connect_cb(streamStart);\n\t                    }\n\t                } else if (message.data.indexOf(\"<close \") === 0) { //'<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />') {\n\t                    this._conn.rawInput(message.data);\n\t                    this._conn.xmlInput(message);\n\t                    var see_uri = message.getAttribute(\"see-other-uri\");\n\t                    if (see_uri) {\n\t                        this._conn._changeConnectStatus(Strophe.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\t                        this._conn.reset();\n\t                        this._conn.service = see_uri;\n\t                        this._connect();\n\t                    } else {\n\t                        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"Received closing stream\");\n\t                        this._conn._doDisconnect();\n\t                    }\n\t                } else {\n\t                    var string = this._streamWrap(message.data);\n\t                    var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n\t                    this.socket.onmessage = this._onMessage.bind(this);\n\t                    this._conn._connect_cb(elem, null, message.data);\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _disconnect\n\t             *  _Private_ function called by Strophe.Connection.disconnect\n\t             *\n\t             *  Disconnects and sends a last stanza if one is given\n\t             *\n\t             *  Parameters:\n\t             *    (Request) pres - This stanza will be sent before disconnecting.\n\t             */\n\t            _disconnect: function (pres) {\n\t                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n\t                    if (pres) {\n\t                        this._conn.send(pres);\n\t                    }\n\t                    var close = $build(\"close\", {\"xmlns\": Strophe.NS.FRAMING});\n\t                    this._conn.xmlOutput(close);\n\t                    var closeString = Strophe.serialize(close);\n\t                    this._conn.rawOutput(closeString);\n\t                    try {\n\t                        this.socket.send(closeString);\n\t                    } catch (e) {\n\t                        Strophe.info(\"Couldn't send <close /> tag.\");\n\t                    }\n\t                }\n\t                this._conn._doDisconnect();\n\t            },\n\n\t            /** PrivateFunction: _doDisconnect\n\t             *  _Private_ function to disconnect.\n\t             *\n\t             *  Just closes the Socket for WebSockets\n\t             */\n\t            _doDisconnect: function () {\n\t                Strophe.info(\"WebSockets _doDisconnect was called\");\n\t                this._closeSocket();\n\t            },\n\n\t            /** PrivateFunction _streamWrap\n\t             *  _Private_ helper function to wrap a stanza in a <stream> tag.\n\t             *  This is used so Strophe can process stanzas from WebSockets like BOSH\n\t             */\n\t            _streamWrap: function (stanza) {\n\t                return \"<wrapper>\" + stanza + '</wrapper>';\n\t            },\n\n\n\t            /** PrivateFunction: _closeSocket\n\t             *  _Private_ function to close the WebSocket.\n\t             *\n\t             *  Closes the socket if it is still open and deletes it\n\t             */\n\t            _closeSocket: function () {\n\t                if (this.socket) {\n\t                    try {\n\t                        this.socket.close();\n\t                    } catch (e) {\n\t                    }\n\t                }\n\t                this.socket = null;\n\t            },\n\n\t            /** PrivateFunction: _emptyQueue\n\t             * _Private_ function to check if the message queue is empty.\n\t             *\n\t             *  Returns:\n\t             *    True, because WebSocket messages are send immediately after queueing.\n\t             */\n\t            _emptyQueue: function () {\n\t                return true;\n\t            },\n\n\t            /** PrivateFunction: _onClose\n\t             * _Private_ function to handle websockets closing.\n\t             *\n\t             * Nothing to do here for WebSockets\n\t             */\n\t            _onClose: function () {\n\t                if (this._conn.connected && !this._conn.disconnecting) {\n\t                    Strophe.error(\"Websocket closed unexpectedly\");\n\t                    this._conn._doDisconnect();\n\t                } else {\n\t                    Strophe.info(\"Websocket closed\");\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _no_auth_received\n\t             *\n\t             * Called on stream start/restart when no stream:features\n\t             * has been received.\n\t             */\n\t            _no_auth_received: function (_callback) {\n\t                Strophe.error(\"Server did not send any auth methods\");\n\t                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"Server did not send any auth methods\");\n\t                if (_callback) {\n\t                    _callback = _callback.bind(this._conn);\n\t                    _callback();\n\t                }\n\t                this._conn._doDisconnect();\n\t            },\n\n\t            /** PrivateFunction: _onDisconnectTimeout\n\t             *  _Private_ timeout handler for handling non-graceful disconnection.\n\t             *\n\t             *  This does nothing for WebSockets\n\t             */\n\t            _onDisconnectTimeout: function () {\n\t            },\n\n\t            /** PrivateFunction: _abortAllRequests\n\t             *  _Private_ helper function that makes sure all pending requests are aborted.\n\t             */\n\t            _abortAllRequests: function () {\n\t            },\n\n\t            /** PrivateFunction: _onError\n\t             * _Private_ function to handle websockets errors.\n\t             *\n\t             * Parameters:\n\t             * (Object) error - The websocket error.\n\t             */\n\t            _onError: function (error) {\n\t                Strophe.error(\"Websocket error \" + error);\n\t                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\t                this._disconnect();\n\t            },\n\n\t            /** PrivateFunction: _onIdle\n\t             *  _Private_ function called by Strophe.Connection._onIdle\n\t             *\n\t             *  sends all queued stanzas\n\t             */\n\t            _onIdle: function () {\n\t                var data = this._conn._data;\n\t                if (data.length > 0 && !this._conn.paused) {\n\t                    for (var i = 0; i < data.length; i++) {\n\t                        if (data[i] !== null) {\n\t                            var stanza, rawStanza;\n\t                            if (data[i] === \"restart\") {\n\t                                stanza = this._buildStream().tree();\n\t                            } else {\n\t                                stanza = data[i];\n\t                            }\n\t                            rawStanza = Strophe.serialize(stanza);\n\t                            this._conn.xmlOutput(stanza);\n\t                            this._conn.rawOutput(rawStanza);\n\t                            this.socket.send(rawStanza);\n\t                        }\n\t                    }\n\t                    this._conn._data = [];\n\t                }\n\t            },\n\n\t            /** PrivateFunction: _onMessage\n\t             * _Private_ function to handle websockets messages.\n\t             *\n\t             * This function parses each of the messages as if they are full documents.\n\t             * [TODO : We may actually want to use a SAX Push parser].\n\t             *\n\t             * Since all XMPP traffic starts with\n\t             *  <stream:stream version='1.0'\n\t             *                 xml:lang='en'\n\t             *                 xmlns='jabber:client'\n\t             *                 xmlns:stream='http://etherx.jabber.org/streams'\n\t             *                 id='3697395463'\n\t             *                 from='SERVER'>\n\t             *\n\t             * The first stanza will always fail to be parsed.\n\t             *\n\t             * Additionally, the seconds stanza will always be <stream:features> with\n\t             * the stream NS defined in the previous stanza, so we need to 'force'\n\t             * the inclusion of the NS in this stanza.\n\t             *\n\t             * Parameters:\n\t             * (string) message - The websocket message.\n\t             */\n\t            _onMessage: function (message) {\n\t                WebIM && WebIM.config.isDebug && Strophe.info(WebIM.utils.ts() + 'recv:', message.data);\n\n\t                var elem, data;\n\t                // check for closing stream\n\t                var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\t                if (message.data === close) {\n\t                    this._conn.rawInput(close);\n\t                    this._conn.xmlInput(message);\n\t                    if (!this._conn.disconnecting) {\n\t                        this._conn._doDisconnect();\n\t                    }\n\t                    return;\n\t                } else if (message.data.search(\"<open \") === 0) {\n\t                    // This handles stream restarts\n\t                    elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\t                    if (!this._handleStreamStart(elem)) {\n\t                        return;\n\t                    }\n\t                } else {\n\t                    data = this._streamWrap(message.data);\n\t                    elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\t                }\n\n\t                if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n\t                    return;\n\t                }\n\n\t                //handle unavailable presence stanza before disconnecting\n\t                if (this._conn.disconnecting &&\n\t                    elem.firstChild.nodeName === \"presence\" &&\n\t                    elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n\t                    this._conn.xmlInput(elem);\n\t                    this._conn.rawInput(Strophe.serialize(elem));\n\t                    // if we are already disconnecting we will ignore the unavailable stanza and\n\t                    // wait for the </stream:stream> tag before we close the connection\n\t                    return;\n\t                }\n\t                this._conn._dataRecv(elem, message.data);\n\t            },\n\n\t            /** PrivateFunction: _onOpen\n\t             * _Private_ function to handle websockets connection setup.\n\t             *\n\t             * The opening stream tag is sent here.\n\t             */\n\t            _onOpen: function () {\n\t                Strophe.info(\"Websocket open\");\n\t                var start = this._buildStream();\n\t                this._conn.xmlOutput(start.tree());\n\n\t                var startString = Strophe.serialize(start);\n\t                this._conn.rawOutput(startString);\n\t                this.socket.send(startString);\n\t            },\n\n\t            /** PrivateFunction: _reqToData\n\t             * _Private_ function to get a stanza out of a request.\n\t             *\n\t             * WebSockets don't use requests, so the passed argument is just returned.\n\t             *\n\t             *  Parameters:\n\t             *    (Object) stanza - The stanza.\n\t             *\n\t             *  Returns:\n\t             *    The stanza that was passed.\n\t             */\n\t            _reqToData: function (stanza) {\n\t                return stanza;\n\t            },\n\n\t            /** PrivateFunction: _send\n\t             *  _Private_ part of the Connection.send function for WebSocket\n\t             *\n\t             * Just flushes the messages that are in the queue\n\t             */\n\t            _send: function () {\n\t                this._conn.flush();\n\t            },\n\n\t            /** PrivateFunction: _sendRestart\n\t             *\n\t             *  Send an xmpp:restart stanza.\n\t             */\n\t            _sendRestart: function () {\n\t                clearTimeout(this._conn._idleTimeout);\n\t                this._conn._onIdle.bind(this._conn)();\n\t            }\n\t        };\n\t        return Strophe;\n\t    }));\n\n\t    (function (root) {\n\t        if (true) {\n\t            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t                __WEBPACK_LOCAL_MODULE_5__,\n\t                __WEBPACK_LOCAL_MODULE_6__,\n\t                __WEBPACK_LOCAL_MODULE_7__\n\t            ], __WEBPACK_LOCAL_MODULE_8__ = (function (wrapper) {\n\t                return wrapper;\n\t            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n\t        }\n\t    })(this);\n\n\t    /* jshint ignore:start */\n\t    if (callback) {\n\t        if (true) {\n\t            //For backwards compatability\n\t            var n_callback = callback;\n\t            if (typeof requirejs === 'function') {\n\t                requirejs([\"strophe\"], function (o) {\n\t                    n_callback(o.Strophe, o.$build, o.$msg, o.$iq, o.$pres);\n\t                });\n\t            } else {\n\t                !/* require */(/* empty */function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__]; (function (o) {\n\t                    n_callback(o.Strophe, o.$build, o.$msg, o.$iq, o.$pres);\n\t                }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}());\n\t            }\n\t        } else {\n\t            return callback(Strophe, $build, $msg, $iq, $pres);\n\t        }\n\t    }\n\n\n\t})(function (Strophe, build, msg, iq, pres) {\n\t    window.Strophe = Strophe;\n\t    window.$build = build;\n\t    window.$msg = msg;\n\t    window.$iq = iq;\n\t    window.$pres = pres;\n\t});\n\t/* jshint ignore:end */\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t;\n\t(function () {\n\t    var connIndex = 0,\n\t        uploadIndex = 100,\n\t        downloadIndex = 200,\n\t        msgIndex = 300,\n\t        statusIndex = 400;\n\n\t    exports.code = {\n\t        WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_OPEN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_AUTH_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_OPEN_USERGRID_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_ATTACH_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_ATTACH_USERGRID_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_REOPEN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_SERVER_CLOSE_ERROR: connIndex++,  //7: client-side network offline (net::ERR_INTERNET_DISCONNECTED)\n\t        WEBIM_CONNCTION_SERVER_ERROR: connIndex++,        //8: offline by multi login\n\t        WEBIM_CONNCTION_IQ_ERROR: connIndex++,\n\n\t        WEBIM_CONNCTION_PING_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_NOTIFYVERSION_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_GETROSTER_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_CROSSDOMAIN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES: connIndex++,\n\t        WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR: connIndex++,\n\t        WEBIM_CONNCTION_DISCONNECTED: connIndex++,    //16: server-side close the websocket connection\n\t        WEBIM_CONNCTION_AJAX_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_JOINROOM_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_GETROOM_ERROR: connIndex++,\n\n\t        WEBIM_CONNCTION_GETROOMINFO_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_GETROOMMEMBER_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_LOAD_CHATROOM_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_JOINCHATROOM_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_QUITCHATROOM_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR: connIndex++,\n\n\t        WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_CALLBACK_INNER_ERROR: connIndex++,\n\t        WEBIM_CONNCTION_CLIENT_OFFLINE: connIndex++,        //32: client offline\n\t        WEBIM_CONNCTION_CLIENT_LOGOUT: connIndex++,        //33: client logout\n\n\n\t        WEBIM_UPLOADFILE_BROWSER_ERROR: uploadIndex++,\n\t        WEBIM_UPLOADFILE_ERROR: uploadIndex++,\n\t        WEBIM_UPLOADFILE_NO_LOGIN: uploadIndex++,\n\t        WEBIM_UPLOADFILE_NO_FILE: uploadIndex++,\n\n\n\t        WEBIM_DOWNLOADFILE_ERROR: downloadIndex++,\n\t        WEBIM_DOWNLOADFILE_NO_LOGIN: downloadIndex++,\n\t        WEBIM_DOWNLOADFILE_BROWSER_ERROR: downloadIndex++,\n\n\n\t        WEBIM_MESSAGE_REC_TEXT: msgIndex++,\n\t        WEBIM_MESSAGE_REC_TEXT_ERROR: msgIndex++,\n\t        WEBIM_MESSAGE_REC_EMOTION: msgIndex++,\n\t        WEBIM_MESSAGE_REC_PHOTO: msgIndex++,\n\t        WEBIM_MESSAGE_REC_AUDIO: msgIndex++,\n\t        WEBIM_MESSAGE_REC_AUDIO_FILE: msgIndex++,\n\t        WEBIM_MESSAGE_REC_VEDIO: msgIndex++,\n\t        WEBIM_MESSAGE_REC_VEDIO_FILE: msgIndex++,\n\t        WEBIM_MESSAGE_REC_FILE: msgIndex++,\n\t        WEBIM_MESSAGE_SED_TEXT: msgIndex++,\n\t        WEBIM_MESSAGE_SED_EMOTION: msgIndex++,\n\t        WEBIM_MESSAGE_SED_PHOTO: msgIndex++,\n\t        WEBIM_MESSAGE_SED_AUDIO: msgIndex++,\n\t        WEBIM_MESSAGE_SED_AUDIO_FILE: msgIndex++,\n\t        WEBIM_MESSAGE_SED_VEDIO: msgIndex++,\n\t        WEBIM_MESSAGE_SED_VEDIO_FILE: msgIndex++,\n\t        WEBIM_MESSAGE_SED_FILE: msgIndex++,\n\n\n\t        STATUS_INIT: statusIndex++,\n\t        STATUS_DOLOGIN_USERGRID: statusIndex++,\n\t        STATUS_DOLOGIN_IM: statusIndex++,\n\t        STATUS_OPENED: statusIndex++,\n\t        STATUS_CLOSING: statusIndex++,\n\t        STATUS_CLOSED: statusIndex++,\n\t        STATUS_ERROR: statusIndex++\n\t    };\n\t}());\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;\n\t(function () {\n\n\t    var EMPTYFN = function () {\n\t    };\n\t    var _code = __webpack_require__(3).code;\n\t    var WEBIM_FILESIZE_LIMIT = 10485760;\n\n\t    var _createStandardXHR = function () {\n\t        try {\n\t            return new window.XMLHttpRequest();\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    };\n\n\t    var _createActiveXHR = function () {\n\t        try {\n\t            return new window.ActiveXObject('Microsoft.XMLHTTP');\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    };\n\n\t    var _xmlrequest = function (crossDomain) {\n\t        crossDomain = crossDomain || true;\n\t        var temp = _createStandardXHR() || _createActiveXHR();\n\n\t        if ('withCredentials' in temp) {\n\t            return temp;\n\t        }\n\t        if (!crossDomain) {\n\t            return temp;\n\t        }\n\t        if (typeof window.XDomainRequest === 'undefined') {\n\t            return temp;\n\t        }\n\t        var xhr = new XDomainRequest();\n\t        xhr.readyState = 0;\n\t        xhr.status = 100;\n\t        xhr.onreadystatechange = EMPTYFN;\n\t        xhr.onload = function () {\n\t            xhr.readyState = 4;\n\t            xhr.status = 200;\n\n\t            var xmlDoc = new ActiveXObject('Microsoft.XMLDOM');\n\t            xmlDoc.async = 'false';\n\t            xmlDoc.loadXML(xhr.responseText);\n\t            xhr.responseXML = xmlDoc;\n\t            xhr.response = xhr.responseText;\n\t            xhr.onreadystatechange();\n\t        };\n\t        xhr.ontimeout = xhr.onerror = function () {\n\t            xhr.readyState = 4;\n\t            xhr.status = 500;\n\t            xhr.onreadystatechange();\n\t        };\n\t        return xhr;\n\t    };\n\n\t    var _hasFlash = (function () {\n\t        if ('ActiveXObject' in window) {\n\t            try {\n\t                return new ActiveXObject('ShockwaveFlash.ShockwaveFlash');\n\t            } catch (ex) {\n\t                return 0;\n\t            }\n\t        } else {\n\t            if (navigator.plugins && navigator.plugins.length > 0) {\n\t                return navigator.plugins['Shockwave Flash'];\n\t            }\n\t        }\n\t        return 0;\n\t    }());\n\n\t    var _tmpUtilXHR = _xmlrequest(),\n\t        _hasFormData = typeof FormData !== 'undefined',\n\t        _hasBlob = typeof Blob !== 'undefined',\n\t        _isCanSetRequestHeader = _tmpUtilXHR.setRequestHeader || false,\n\t        _hasOverrideMimeType = _tmpUtilXHR.overrideMimeType || false,\n\t        _isCanUploadFileAsync = _isCanSetRequestHeader && _hasFormData,\n\t        _isCanUploadFile = _isCanUploadFileAsync || _hasFlash,\n\t        _isCanDownLoadFile = _isCanSetRequestHeader && (_hasBlob || _hasOverrideMimeType);\n\n\t    if (!Object.keys) {\n\t        Object.keys = (function () {\n\t            'use strict';\n\t            var hasOwnProperty = Object.prototype.hasOwnProperty,\n\t                hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n\t                dontEnums = [\n\t                    'toString',\n\t                    'toLocaleString',\n\t                    'valueOf',\n\t                    'hasOwnProperty',\n\t                    'isPrototypeOf',\n\t                    'propertyIsEnumerable',\n\t                    'constructor'\n\t                ],\n\t                dontEnumsLength = dontEnums.length;\n\n\t            return function (obj) {\n\t                if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n\t                    throw new TypeError('Object.keys called on non-object');\n\t                }\n\n\t                var result = [], prop, i;\n\n\t                for (prop in obj) {\n\t                    if (hasOwnProperty.call(obj, prop)) {\n\t                        result.push(prop);\n\t                    }\n\t                }\n\n\t                if (hasDontEnumBug) {\n\t                    for (i = 0; i < dontEnumsLength; i++) {\n\t                        if (hasOwnProperty.call(obj, dontEnums[i])) {\n\t                            result.push(dontEnums[i]);\n\t                        }\n\t                    }\n\t                }\n\t                return result;\n\t            };\n\t        }());\n\t    }\n\n\t    var utils = {\n\t        hasFormData: _hasFormData,\n\n\t        hasBlob: _hasBlob,\n\n\t        emptyfn: EMPTYFN,\n\n\t        isCanSetRequestHeader: _isCanSetRequestHeader,\n\n\t        hasOverrideMimeType: _hasOverrideMimeType,\n\n\t        isCanUploadFileAsync: _isCanUploadFileAsync,\n\n\t        isCanUploadFile: _isCanUploadFile,\n\n\t        isCanDownLoadFile: _isCanDownLoadFile,\n\n\t        isSupportWss: (function () {\n\t            var notSupportList = [\n\t                //1: QQ browser X5 core\n\t                /MQQBrowser[\\/]5([.]\\d+)?\\sTBS/\n\n\t                //2: etc.\n\t                //...\n\t            ];\n\n\t            if (!window.WebSocket) {\n\t                return false;\n\t            }\n\n\t            var ua = window.navigator.userAgent;\n\t            for (var i = 0, l = notSupportList.length; i < l; i++) {\n\t                if (notSupportList[i].test(ua)) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        }()),\n\n\t        getIEVersion: (function () {\n\t            var ua = navigator.userAgent, matches, tridentMap = {'4': 8, '5': 9, '6': 10, '7': 11};\n\n\t            matches = ua.match(/MSIE (\\d+)/i);\n\n\t            if (matches && matches[1]) {\n\t                return +matches[1];\n\t            }\n\t            matches = ua.match(/Trident\\/(\\d+)/i);\n\t            if (matches && matches[1]) {\n\t                return tridentMap[matches[1]] || null;\n\t            }\n\t            return null;\n\t        }()),\n\n\n\t        stringify: function (json) {\n\t            if (typeof JSON !== 'undefined' && JSON.stringify) {\n\t                return JSON.stringify(json);\n\t            } else {\n\t                var s = '',\n\t                    arr = [];\n\n\t                var iterate = function (json) {\n\t                    var isArr = false;\n\n\t                    if (Object.prototype.toString.call(json) === '[object Array]') {\n\t                        arr.push(']', '[');\n\t                        isArr = true;\n\t                    } else if (Object.prototype.toString.call(json) === '[object Object]') {\n\t                        arr.push('}', '{');\n\t                    }\n\n\t                    for (var o in json) {\n\t                        if (Object.prototype.toString.call(json[o]) === '[object Null]') {\n\t                            json[o] = 'null';\n\t                        } else if (Object.prototype.toString.call(json[o]) === '[object Undefined]') {\n\t                            json[o] = 'undefined';\n\t                        }\n\n\t                        if (json[o] && typeof json[o] === 'object') {\n\t                            s += ',' + (isArr ? '' : '\"' + o + '\":' + (isArr ? '\"' : '')) + iterate(json[o]) + '';\n\t                        } else {\n\t                            s += ',\"' + (isArr ? '' : o + '\":\"') + json[o] + '\"';\n\t                        }\n\t                    }\n\n\t                    if (s != '') {\n\t                        s = s.slice(1);\n\t                    }\n\n\t                    return arr.pop() + s + arr.pop();\n\t                };\n\t                return iterate(json);\n\t            }\n\t        },\n\t        registerUser: function (options) {\n\t            var orgName = options.orgName || '';\n\t            var appName = options.appName || '';\n\t            var appKey = options.appKey || '';\n\t            var suc = options.success || EMPTYFN;\n\t            var err = options.error || EMPTYFN;\n\n\t            if (!orgName && !appName && appKey) {\n\t                var devInfos = appKey.split('#');\n\t                if (devInfos.length === 2) {\n\t                    orgName = devInfos[0];\n\t                    appName = devInfos[1];\n\t                }\n\t            }\n\t            if (!orgName && !appName) {\n\t                err({\n\t                    type: _code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\n\t                });\n\t                return;\n\t            }\n\n\n\t            var https = options.https || https;\n\t            var apiUrl = options.apiUrl;\n\t            var restUrl = apiUrl + '/' + orgName + '/' + appName + '/users';\n\n\t            var userjson = {\n\t                username: options.username,\n\t                password: options.password,\n\t                nickname: options.nickname || ''\n\t            };\n\n\t            var userinfo = utils.stringify(userjson);\n\t            var options = {\n\t                url: restUrl,\n\t                dataType: 'json',\n\t                data: userinfo,\n\t                success: suc,\n\t                error: err\n\t            };\n\t            return utils.ajax(options);\n\t        },\n\t        login: function (options) {\n\t            var options = options || {};\n\t            var suc = options.success || EMPTYFN;\n\t            var err = options.error || EMPTYFN;\n\n\t            var appKey = options.appKey || '';\n\t            var devInfos = appKey.split('#');\n\t            if (devInfos.length !== 2) {\n\t                err({\n\t                    type: _code.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\n\t                });\n\t                return false;\n\t            }\n\n\t            var orgName = devInfos[0];\n\t            var appName = devInfos[1];\n\t            var https = https || options.https;\n\t            var user = options.user || '';\n\t            var pwd = options.pwd || '';\n\n\t            var apiUrl = options.apiUrl;\n\n\t            var loginJson = {\n\t                grant_type: 'password',\n\t                username: user,\n\t                password: pwd,\n\t                timestamp: +new Date()\n\t            };\n\t            var loginfo = utils.stringify(loginJson);\n\n\t            var options = {\n\t                url: apiUrl + '/' + orgName + '/' + appName + '/token',\n\t                dataType: 'json',\n\t                data: loginfo,\n\t                success: suc,\n\t                error: err\n\t            };\n\t            return utils.ajax(options);\n\t        },\n\n\t        getFileUrl: function (fileInputId) {\n\n\t            var uri = {\n\t                url: '',\n\t                filename: '',\n\t                filetype: '',\n\t                data: ''\n\t            };\n\n\t            var fileObj = typeof fileInputId === 'string' ? document.getElementById(fileInputId) : fileInputId;\n\n\t            if (!utils.isCanUploadFileAsync || !fileObj) {\n\t                return uri;\n\t            }\n\t            try {\n\t                if (window.URL.createObjectURL) {\n\t                    var fileItems = fileObj.files;\n\t                    if (fileItems.length > 0) {\n\t                        var u = fileItems.item(0);\n\t                        uri.data = u;\n\t                        uri.url = window.URL.createObjectURL(u);\n\t                        uri.filename = u.name || '';\n\t                    }\n\t                } else { // IE\n\t                    var u = document.getElementById(fileInputId).value;\n\t                    uri.url = u;\n\t                    var pos1 = u.lastIndexOf('/');\n\t                    var pos2 = u.lastIndexOf('\\\\');\n\t                    var pos = Math.max(pos1, pos2);\n\t                    if (pos < 0)\n\t                        uri.filename = u;\n\t                    else\n\t                        uri.filename = u.substring(pos + 1);\n\t                }\n\t                var index = uri.filename.lastIndexOf('.');\n\t                if (index != -1) {\n\t                    uri.filetype = uri.filename.substring(index + 1).toLowerCase();\n\t                }\n\t                return uri;\n\n\t            } catch (e) {\n\t                throw e;\n\t            }\n\t        },\n\n\t        getFileSize: function (fileInputId) {\n\t            var file = document.getElementById(fileInputId);\n\t            var fileSize = 0;\n\t            if (file) {\n\t                if (file.files) {\n\t                    if (file.files.length > 0) {\n\t                        fileSize = file.files[0].size;\n\t                    }\n\t                } else if (file.select && 'ActiveXObject' in window) {\n\t                    file.select();\n\t                    var fileobject = new ActiveXObject('Scripting.FileSystemObject');\n\t                    var file = fileobject.GetFile(file.value);\n\t                    fileSize = file.Size;\n\t                }\n\t            }\n\t            return fileSize;\n\t        },\n\n\t        hasFlash: _hasFlash,\n\n\t        trim: function (str) {\n\n\t            str = typeof str === 'string' ? str : '';\n\n\t            return str.trim\n\t                ? str.trim()\n\t                : str.replace(/^\\s|\\s$/g, '');\n\t        },\n\n\t        parseEmoji: function (msg) {\n\t            if (typeof WebIM.Emoji === 'undefined' || typeof WebIM.Emoji.map === 'undefined') {\n\t                return msg;\n\t            } else {\n\t                var emoji = WebIM.Emoji,\n\t                    reg = null;\n\n\t                for (var face in emoji.map) {\n\t                    if (emoji.map.hasOwnProperty(face)) {\n\t                        while (msg.indexOf(face) > -1) {\n\t                            msg = msg.replace(face, '<img class=\"emoji\" src=\"' + emoji.path + emoji.map[face] + '\" />');\n\t                        }\n\t                    }\n\t                }\n\t                return msg;\n\t            }\n\t        },\n\n\t        parseLink: function (msg) {\n\n\t            var reg = /(https?\\:\\/\\/|www\\.)([a-zA-Z0-9-]+(\\.[a-zA-Z0-9]+)+)(\\:[0-9]{2,4})?\\/?((\\.[:_0-9a-zA-Z-]+)|[:_0-9a-zA-Z-]*\\/?)*\\??[:_#@*&%0-9a-zA-Z-/=]*/gm;\n\n\t            msg = msg.replace(reg, function (v) {\n\n\t                var prefix = /^https?/gm.test(v);\n\n\t                return \"<a href='\"\n\t                    + (prefix ? v : '//' + v)\n\t                    + \"' target='_blank'>\"\n\t                    + v\n\t                    + \"</a>\";\n\n\t            });\n\n\t            return msg;\n\n\t        },\n\n\t        parseJSON: function (data) {\n\n\t            if (window.JSON && window.JSON.parse) {\n\t                return window.JSON.parse(data + '');\n\t            }\n\n\t            var requireNonComma,\n\t                depth = null,\n\t                str = utils.trim(data + '');\n\n\t            return str && !utils.trim(\n\t                str.replace(/(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g\n\t                    , function (token, comma, open, close) {\n\n\t                        if (requireNonComma && comma) {\n\t                            depth = 0;\n\t                        }\n\n\t                        if (depth === 0) {\n\t                            return token;\n\t                        }\n\n\t                        requireNonComma = open || comma;\n\t                        depth += !close - !open;\n\t                        return '';\n\t                    })\n\t            )\n\t                ? (Function('return ' + str))()\n\t                : (Function('Invalid JSON: ' + data))();\n\t        },\n\n\t        parseUploadResponse: function (response) {\n\t            return response.indexOf('callback') > -1 ? //lte ie9\n\t                response.slice(9, -1) : response;\n\t        },\n\n\t        parseDownloadResponse: function (response) {\n\t            return ((response && response.type && response.type === 'application/json')\n\t            || 0 > Object.prototype.toString.call(response).indexOf('Blob'))\n\t                ? this.url + '?token=' : window.URL.createObjectURL(response);\n\t        },\n\n\t        uploadFile: function (options) {\n\t            var options = options || {};\n\t            options.onFileUploadProgress = options.onFileUploadProgress || EMPTYFN;\n\t            options.onFileUploadComplete = options.onFileUploadComplete || EMPTYFN;\n\t            options.onFileUploadError = options.onFileUploadError || EMPTYFN;\n\t            options.onFileUploadCanceled = options.onFileUploadCanceled || EMPTYFN;\n\n\t            var acc = options.accessToken || this.context.accessToken;\n\t            if (!acc) {\n\t                options.onFileUploadError({\n\t                    type: _code.WEBIM_UPLOADFILE_NO_LOGIN\n\t                    , id: options.id\n\t                });\n\t                return;\n\t            }\n\n\t            var orgName, appName, devInfos;\n\t            var appKey = options.appKey || this.context.appKey || '';\n\n\t            if (appKey) {\n\t                devInfos = appKey.split('#');\n\t                orgName = devInfos[0];\n\t                appName = devInfos[1];\n\t            }\n\n\t            if (!orgName && !appName) {\n\t                options.onFileUploadError({\n\t                    type: _code.WEBIM_UPLOADFILE_ERROR\n\t                    , id: options.id\n\t                });\n\t                return;\n\t            }\n\n\t            var apiUrl = options.apiUrl;\n\t            var uploadUrl = apiUrl + '/' + orgName + '/' + appName + '/chatfiles';\n\n\t            if (!utils.isCanUploadFileAsync) {\n\t                if (utils.hasFlash && typeof options.flashUpload === 'function') {\n\t                    options.flashUpload && options.flashUpload(uploadUrl, options);\n\t                } else {\n\t                    options.onFileUploadError({\n\t                        type: _code.WEBIM_UPLOADFILE_BROWSER_ERROR\n\t                        , id: options.id\n\t                    });\n\t                }\n\t                return;\n\t            }\n\n\t            var fileSize = options.file.data ? options.file.data.size : undefined;\n\t            if (fileSize > WEBIM_FILESIZE_LIMIT) {\n\t                options.onFileUploadError({\n\t                    type: _code.WEBIM_UPLOADFILE_ERROR\n\t                    , id: options.id\n\t                });\n\t                return;\n\t            } else if (fileSize <= 0) {\n\t                options.onFileUploadError({\n\t                    type: _code.WEBIM_UPLOADFILE_ERROR\n\t                    , id: options.id\n\t                });\n\t                return;\n\t            }\n\n\t            var xhr = utils.xmlrequest();\n\t            var onError = function (e) {\n\t                options.onFileUploadError({\n\t                    type: _code.WEBIM_UPLOADFILE_ERROR,\n\t                    id: options.id,\n\t                    xhr: xhr\n\t                });\n\t            };\n\t            if (xhr.upload) {\n\t                xhr.upload.addEventListener('progress', options.onFileUploadProgress, false);\n\t            }\n\t            if (xhr.addEventListener) {\n\t                xhr.addEventListener('abort', options.onFileUploadCanceled, false);\n\t                xhr.addEventListener('load', function (e) {\n\t                    try {\n\t                        var json = utils.parseJSON(xhr.responseText);\n\t                        try {\n\t                            options.onFileUploadComplete(json);\n\t                        } catch (e) {\n\t                            options.onFileUploadError({\n\t                                type: _code.WEBIM_CONNCTION_CALLBACK_INNER_ERROR\n\t                                , data: e\n\t                            });\n\t                        }\n\t                    } catch (e) {\n\t                        options.onFileUploadError({\n\t                            type: _code.WEBIM_UPLOADFILE_ERROR,\n\t                            data: xhr.responseText,\n\t                            id: options.id,\n\t                            xhr: xhr\n\t                        });\n\t                    }\n\t                }, false);\n\t                xhr.addEventListener('error', onError, false);\n\t            } else if (xhr.onreadystatechange) {\n\t                xhr.onreadystatechange = function () {\n\t                    if (xhr.readyState === 4) {\n\t                        if (ajax.status === 200) {\n\t                            try {\n\t                                var json = utils.parseJSON(xhr.responseText);\n\t                                options.onFileUploadComplete(json);\n\t                            } catch (e) {\n\t                                options.onFileUploadError({\n\t                                    type: _code.WEBIM_UPLOADFILE_ERROR,\n\t                                    data: xhr.responseText,\n\t                                    id: options.id,\n\t                                    xhr: xhr\n\t                                });\n\t                            }\n\t                        } else {\n\t                            options.onFileUploadError({\n\t                                type: _code.WEBIM_UPLOADFILE_ERROR,\n\t                                data: xhr.responseText,\n\t                                id: options.id,\n\t                                xhr: xhr\n\t                            });\n\t                        }\n\t                    } else {\n\t                        xhr.abort();\n\t                        options.onFileUploadCanceled();\n\t                    }\n\t                }\n\t            }\n\n\t            xhr.open('POST', uploadUrl);\n\n\t            xhr.setRequestHeader('restrict-access', 'true');\n\t            xhr.setRequestHeader('Accept', '*/*');// Android QQ browser has some problem with this attribute.\n\t            xhr.setRequestHeader('Authorization', 'Bearer ' + acc);\n\n\t            var formData = new FormData();\n\t            formData.append('file', options.file.data);\n\t            xhr.send(formData);\n\t        },\n\n\n\t        download: function (options) {\n\t            options.onFileDownloadComplete = options.onFileDownloadComplete || EMPTYFN;\n\t            options.onFileDownloadError = options.onFileDownloadError || EMPTYFN;\n\n\t            var accessToken = options.accessToken || this.context.accessToken;\n\t            if (!accessToken) {\n\t                options.onFileDownloadError({\n\t                    type: _code.WEBIM_DOWNLOADFILE_NO_LOGIN,\n\t                    id: options.id\n\t                });\n\t                return;\n\t            }\n\n\t            var onError = function (e) {\n\t                options.onFileDownloadError({\n\t                    type: _code.WEBIM_DOWNLOADFILE_ERROR,\n\t                    id: options.id,\n\t                    xhr: xhr\n\t                });\n\t            };\n\n\t            if (!utils.isCanDownLoadFile) {\n\t                options.onFileDownloadComplete();\n\t                return;\n\t            }\n\t            var xhr = utils.xmlrequest();\n\t            if ('addEventListener' in xhr) {\n\t                xhr.addEventListener('load', function (e) {\n\t                    options.onFileDownloadComplete(xhr.response, xhr);\n\t                }, false);\n\t                xhr.addEventListener('error', onError, false);\n\t            } else if ('onreadystatechange' in xhr) {\n\t                xhr.onreadystatechange = function () {\n\t                    if (xhr.readyState === 4) {\n\t                        if (ajax.status === 200) {\n\t                            options.onFileDownloadComplete(xhr.response, xhr);\n\t                        } else {\n\t                            options.onFileDownloadError({\n\t                                type: _code.WEBIM_DOWNLOADFILE_ERROR,\n\t                                id: options.id,\n\t                                xhr: xhr\n\t                            });\n\t                        }\n\t                    } else {\n\t                        xhr.abort();\n\t                        options.onFileDownloadError({\n\t                            type: _code.WEBIM_DOWNLOADFILE_ERROR,\n\t                            id: options.id,\n\t                            xhr: xhr\n\t                        });\n\t                    }\n\t                }\n\t            }\n\n\t            var method = options.method || 'GET';\n\t            var resType = options.responseType || 'blob';\n\t            var mimeType = options.mimeType || 'text/plain; charset=x-user-defined';\n\t            xhr.open(method, options.url);\n\t            if (typeof Blob !== 'undefined') {\n\t                xhr.responseType = resType;\n\t            } else {\n\t                xhr.overrideMimeType(mimeType);\n\t            }\n\n\t            var innerHeaer = {\n\t                'X-Requested-With': 'XMLHttpRequest',\n\t                'Accept': 'application/octet-stream',\n\t                'share-secret': options.secret,\n\t                'Authorization': 'Bearer ' + accessToken\n\t            };\n\t            var headers = options.headers || {};\n\t            for (var key in headers) {\n\t                innerHeaer[key] = headers[key];\n\t            }\n\t            for (var key in innerHeaer) {\n\t                if (innerHeaer[key]) {\n\t                    xhr.setRequestHeader(key, innerHeaer[key]);\n\t                }\n\t            }\n\t            xhr.send(null);\n\t        },\n\n\t        parseTextMessage: function (message, faces) {\n\t            if (typeof message !== 'string') {\n\t                return;\n\t            }\n\n\t            if (Object.prototype.toString.call(faces) !== '[object Object]') {\n\t                return {\n\t                    isemoji: false,\n\t                    body: [\n\t                        {\n\t                            type: 'txt',\n\t                            data: message\n\t                        }\n\t                    ]\n\t                };\n\t            }\n\n\t            var receiveMsg = message;\n\t            var emessage = [];\n\t            var expr = /\\[[^[\\]]{2,3}\\]/mg;\n\t            var emoji = receiveMsg.match(expr);\n\n\t            if (!emoji || emoji.length < 1) {\n\t                return {\n\t                    isemoji: false,\n\t                    body: [\n\t                        {\n\t                            type: 'txt',\n\t                            data: message\n\t                        }\n\t                    ]\n\t                };\n\t            }\n\t            var isemoji = false;\n\t            for (var i = 0; i < emoji.length; i++) {\n\t                var tmsg = receiveMsg.substring(0, receiveMsg.indexOf(emoji[i])),\n\t                    existEmoji = WebIM.Emoji.map[emoji[i]];\n\n\t                if (tmsg) {\n\t                    emessage.push({\n\t                        type: 'txt',\n\t                        data: tmsg\n\t                    });\n\t                }\n\t                if (!existEmoji) {\n\t                    emessage.push({\n\t                        type: 'txt',\n\t                        data: emoji[i]\n\t                    });\n\t                    continue;\n\t                }\n\t                var emojiStr = WebIM.Emoji.map ? WebIM.Emoji.path + existEmoji : null;\n\n\t                if (emojiStr) {\n\t                    isemoji = true;\n\t                    emessage.push({\n\t                        type: 'emoji',\n\t                        data: emojiStr\n\t                    });\n\t                } else {\n\t                    emessage.push({\n\t                        type: 'txt',\n\t                        data: emoji[i]\n\t                    });\n\t                }\n\t                var restMsgIndex = receiveMsg.indexOf(emoji[i]) + emoji[i].length;\n\t                receiveMsg = receiveMsg.substring(restMsgIndex);\n\t            }\n\t            if (receiveMsg) {\n\t                emessage.push({\n\t                    type: 'txt',\n\t                    data: receiveMsg\n\t                });\n\t            }\n\t            if (isemoji) {\n\t                return {\n\t                    isemoji: isemoji,\n\t                    body: emessage\n\t                };\n\t            }\n\t            return {\n\t                isemoji: false,\n\t                body: [\n\t                    {\n\t                        type: 'txt',\n\t                        data: message\n\t                    }\n\t                ]\n\t            };\n\t        },\n\n\t        xmlrequest: _xmlrequest,\n\n\n\t        ajax: function (options) {\n\t            var dataType = options.dataType || 'text';\n\t            var suc = options.success || EMPTYFN;\n\t            var error = options.error || EMPTYFN;\n\t            var xhr = utils.xmlrequest();\n\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState === 4) {\n\t                    var status = xhr.status || 0;\n\t                    if (status === 200) {\n\t                        try {\n\t                            switch (dataType) {\n\t                                case 'text':\n\t                                    suc(xhr.responseText);\n\t                                    return;\n\t                                case 'json':\n\t                                    var json = utils.parseJSON(xhr.responseText);\n\t                                    suc(json, xhr);\n\t                                    return;\n\t                                case 'xml':\n\t                                    if (xhr.responseXML && xhr.responseXML.documentElement) {\n\t                                        suc(xhr.responseXML.documentElement, xhr);\n\t                                    } else {\n\t                                        error({\n\t                                            type: _code.WEBIM_CONNCTION_AJAX_ERROR,\n\t                                            data: xhr.responseText\n\t                                        });\n\t                                    }\n\t                                    return;\n\t                            }\n\t                            suc(xhr.response || xhr.responseText, xhr);\n\t                        } catch (e) {\n\t                            error({\n\t                                type: _code.WEBIM_CONNCTION_AJAX_ERROR,\n\t                                data: e\n\t                            });\n\t                        }\n\t                        return;\n\t                    } else {\n\t                        error({\n\t                            type: _code.WEBIM_CONNCTION_AJAX_ERROR,\n\t                            data: xhr.responseText\n\t                        });\n\t                        return;\n\t                    }\n\t                }\n\t                if (xhr.readyState === 0) {\n\t                    error({\n\t                        type: _code.WEBIM_CONNCTION_AJAX_ERROR,\n\t                        data: xhr.responseText\n\t                    });\n\t                }\n\t            };\n\n\t            if (options.responseType) {\n\t                if (xhr.responseType) {\n\t                    xhr.responseType = options.responseType;\n\t                }\n\t            }\n\t            if (options.mimeType) {\n\t                if (utils.hasOverrideMimeType) {\n\t                    xhr.overrideMimeType(options.mimeType);\n\t                }\n\t            }\n\n\t            var type = options.type || 'POST',\n\t                data = options.data || null,\n\t                tempData = '';\n\n\t            if (type.toLowerCase() === 'get' && data) {\n\t                for (var o in data) {\n\t                    if (data.hasOwnProperty(o)) {\n\t                        tempData += o + '=' + data[o] + '&';\n\t                    }\n\t                }\n\t                tempData = tempData ? tempData.slice(0, -1) : tempData;\n\t                options.url += (options.url.indexOf('?') > 0 ? '&' : '?') + (tempData ? tempData + '&' : tempData) + '_v=' + new Date().getTime();\n\t                data = null;\n\t                tempData = null;\n\t            }\n\t            xhr.open(type, options.url);\n\n\t            if (utils.isCanSetRequestHeader) {\n\t                var headers = options.headers || {};\n\t                for (var key in headers) {\n\t                    if (headers.hasOwnProperty(key)) {\n\t                        xhr.setRequestHeader(key, headers[key]);\n\t                    }\n\t                }\n\t            }\n\n\t            xhr.send(data);\n\t            return xhr;\n\t        },\n\t        ts: function () {\n\t            var d = new Date();\n\t            var Hours = d.getHours(); //获取当前小时数(0-23)\n\t            var Minutes = d.getMinutes(); //获取当前分钟数(0-59)\n\t            var Seconds = d.getSeconds(); //获取当前秒数(0-59)\n\t            var Milliseconds = d.getMilliseconds(); //获取当前毫秒\n\t            return (Hours < 10 ? \"0\" + Hours : Hours) + ':' + (Minutes < 10 ? \"0\" + Minutes : Minutes) + ':' + (Seconds < 10 ? \"0\" + Seconds : Seconds) + ':' + Milliseconds + ' ';\n\t        },\n\n\t        getObjectKey: function (obj, val) {\n\t            for (var key in obj) {\n\t                if (obj[key] == val) {\n\t                    return key;\n\t                }\n\t            }\n\t            return '';\n\t        }\n\n\t    };\n\n\n\t    exports.utils = utils;\n\t}());\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t    'use strict';\n\n\t    var _utils = __webpack_require__(4).utils;\n\t    var Message = function (type, id) {\n\t        if (!this instanceof Message) {\n\t            return new Message(type);\n\t        }\n\n\t        this._msg = {};\n\n\t        if (typeof Message[type] === 'function') {\n\t            Message[type].prototype.setGroup = this.setGroup;\n\t            this._msg = new Message[type](id);\n\t        }\n\t        return this._msg;\n\t    }\n\t    Message.prototype.setGroup = function (group) {\n\t        this.body.group = group;\n\t    }\n\n\n\t    /*\n\t     * text message\n\t     */\n\t    Message.txt = function (id) {\n\t        this.id = id;\n\t        this.type = 'txt';\n\t        this.body = {};\n\t    };\n\t    Message.txt.prototype.set = function (opt) {\n\t        this.value = opt.msg;\n\t        this.body = {\n\t            id: this.id\n\t            , to: opt.to\n\t            , msg: this.value\n\t            , type: this.type\n\t            , roomType: opt.roomType\n\t            , ext: opt.ext || {}\n\t            , success: opt.success\n\t            , fail: opt.fail\n\t        };\n\n\t        !opt.roomType && delete this.body.roomType;\n\n\t    };\n\n\t    /*\n\t     * cmd message\n\t     */\n\t    Message.cmd = function (id) {\n\t        this.id = id;\n\t        this.type = 'cmd';\n\t        this.body = {};\n\t    };\n\t    Message.cmd.prototype.set = function (opt) {\n\t        this.value = '';\n\n\t        this.body = {\n\t            to: opt.to\n\t            , action: opt.action\n\t            , msg: this.value\n\t            , type: this.type\n\t            , roomType: opt.roomType\n\t            , ext: opt.ext || {}\n\t        };\n\t        !opt.roomType && delete this.body.roomType;\n\t    };\n\n\t    /*\n\t     * loc message\n\t     */\n\t    Message.location = function (id) {\n\t        this.id = id;\n\t        this.type = 'loc';\n\t        this.body = {};\n\t    };\n\t    Message.location.prototype.set = function (opt) {\n\t        this.body = {\n\t            to: opt.to\n\t            , type: this.type\n\t            , roomType: opt.roomType\n\t            , addr: opt.addr\n\t            , lat: opt.lat\n\t            , lng: opt.lng\n\t            , ext: opt.ext || {}\n\t        };\n\t    };\n\n\t    /*\n\t     * img message\n\t     */\n\t    Message.img = function (id) {\n\t        this.id = id;\n\t        this.type = 'img';\n\t        this.body = {};\n\t    };\n\t    Message.img.prototype.set = function (opt) {\n\t        opt.file = opt.file || _utils.getFileUrl(opt.fileInputId);\n\n\t        this.value = opt.file;\n\n\t        this.body = {\n\t            id: this.id,\n\t            file: this.value,\n\t            apiUrl: opt.apiUrl,\n\t            to: opt.to,\n\t            type: this.type,\n\t            ext: opt.ext || {},\n\t            roomType: opt.roomType,\n\t            onFileUploadError: opt.onFileUploadError,\n\t            onFileUploadComplete: opt.onFileUploadComplete,\n\t            success: opt.success,\n\t            fail: opt.fail,\n\t            flashUpload: opt.flashUpload,\n\t            width: opt.width,\n\t            height: opt.height,\n\t            body: opt.body\n\t        };\n\n\t        !opt.roomType && delete this.body.roomType;\n\t    };\n\n\t    /*\n\t     * audio message\n\t     */\n\t    Message.audio = function (id) {\n\t        this.id = id;\n\t        this.type = 'audio';\n\t        this.body = {};\n\t    };\n\t    Message.audio.prototype.set = function (opt) {\n\t        opt.file = opt.file || _utils.getFileUrl(opt.fileInputId);\n\n\t        this.value = opt.file;\n\t        this.filename = opt.filename || this.value.filename;\n\n\t        this.body = {\n\t            id: this.id\n\t            , file: this.value\n\t            , filename: this.filename\n\t            , apiUrl: opt.apiUrl\n\t            , to: opt.to\n\t            , type: this.type\n\t            , ext: opt.ext || {}\n\t            , length: opt.length || 0\n\t            , roomType: opt.roomType\n\t            , file_length: opt.file_length\n\t            , onFileUploadError: opt.onFileUploadError\n\t            , onFileUploadComplete: opt.onFileUploadComplete\n\t            , success: opt.success\n\t            , fail: opt.fail\n\t            , flashUpload: opt.flashUpload\n\t            , body: opt.body\n\t        };\n\t        !opt.roomType && delete this.body.roomType;\n\t    };\n\n\t    /*\n\t     * file message\n\t     */\n\t    Message.file = function (id) {\n\t        this.id = id;\n\t        this.type = 'file';\n\t        this.body = {};\n\t    };\n\t    Message.file.prototype.set = function (opt) {\n\t        opt.file = opt.file || _utils.getFileUrl(opt.fileInputId);\n\n\t        this.value = opt.file;\n\t        this.filename = opt.filename || this.value.filename;\n\n\t        this.body = {\n\t            id: this.id\n\t            , file: this.value\n\t            , filename: this.filename\n\t            , apiUrl: opt.apiUrl\n\t            , to: opt.to\n\t            , type: this.type\n\t            , ext: opt.ext || {}\n\t            , roomType: opt.roomType\n\t            , onFileUploadError: opt.onFileUploadError\n\t            , onFileUploadComplete: opt.onFileUploadComplete\n\t            , success: opt.success\n\t            , fail: opt.fail\n\t            , flashUpload: opt.flashUpload\n\t            , body: opt.body\n\t        };\n\t        !opt.roomType && delete this.body.roomType;\n\t    };\n\n\t    /*\n\t     * video message\n\t     */\n\t    Message.video = function (id) {\n\n\t    };\n\t    Message.video.prototype.set = function (opt) {\n\n\t    };\n\n\t    var _Message = function (message) {\n\n\t        if (!this instanceof _Message) {\n\t            return new _Message(message, conn);\n\t        }\n\n\t        this.msg = message;\n\t    }\n\n\t    _Message.prototype.send = function (conn) {\n\t        var me = this;\n\n\t        var _send = function (message) {\n\n\t            message.ext = message.ext || {};\n\t            message.ext.weichat = message.ext.weichat || {};\n\t            message.ext.weichat.originType = message.ext.weichat.originType || 'webim';\n\n\t            var json = {\n\t                from: conn.context.userId || ''\n\t                , to: message.to\n\t                , bodies: [message.body]\n\t                , ext: message.ext || {}\n\t            };\n\n\t            var jsonstr = _utils.stringify(json);\n\t            var dom = $msg({\n\t                type: message.group || 'chat'\n\t                , to: message.toJid\n\t                , id: message.id\n\t                , xmlns: 'jabber:client'\n\t            }).c('body').t(jsonstr);\n\n\t            if (message.roomType) {\n\t                dom.up().c('roomtype', {xmlns: 'hyphenate:x:roomtype', type: 'chatroom'});\n\t            }\n\n\t            setTimeout(function () {\n\t                if (typeof _msgHash !== 'undefined' && _msgHash[message.id]) {\n\t                    _msgHash[message.id].msg.fail instanceof Function\n\t                    && _msgHash[message.id].msg.fail(message.id);\n\t                }\n\t            }, 60000);\n\t            conn.sendCommand(dom.tree(), message.id);\n\t        }\n\n\n\t        if (me.msg.file) {\n\t            if (me.msg.body && me.msg.body.url) {// Only send msg\n\t                _send(me.msg);\n\t                return;\n\t            }\n\t            var _tmpComplete = me.msg.onFileUploadComplete;\n\t            var _complete = function (data) {\n\n\t                if (data.entities[0]['file-metadata']) {\n\t                    var file_len = data.entities[0]['file-metadata']['content-length'];\n\t                    me.msg.file_length = file_len;\n\t                    me.msg.filetype = data.entities[0]['file-metadata']['content-type'];\n\t                    if (file_len > 204800) {\n\t                        me.msg.thumbnail = true;\n\t                    }\n\t                }\n\n\t                me.msg.body = {\n\t                    type: me.msg.type || 'file'\n\t                    , url: data.uri + '/' + data.entities[0]['uuid']\n\t                    , secret: data.entities[0]['share-secret']\n\t                    , filename: me.msg.file.filename || me.msg.filename\n\t                    , size: {\n\t                        width: me.msg.width || 0\n\t                        , height: me.msg.height || 0\n\t                    }\n\t                    , length: me.msg.length || 0\n\t                    , file_length: me.msg.file_length || 0\n\t                    , filetype: me.msg.filetype\n\t                }\n\n\t                _send(me.msg);\n\t                _tmpComplete instanceof Function && _tmpComplete(data, me.msg.id);\n\t            };\n\n\t            me.msg.onFileUploadComplete = _complete;\n\t            _utils.uploadFile.call(conn, me.msg);\n\t        } else {\n\t            me.msg.body = {\n\t                type: me.msg.type === 'chat' ? 'txt' : me.msg.type\n\t                , msg: me.msg.msg\n\t            };\n\t            if (me.msg.type === 'cmd') {\n\t                me.msg.body.action = me.msg.action;\n\t            } else if (me.msg.type === 'loc') {\n\t                me.msg.body.addr = me.msg.addr;\n\t                me.msg.body.lat = me.msg.lat;\n\t                me.msg.body.lng = me.msg.lng;\n\t            }\n\n\t            _send(me.msg);\n\t        }\n\t    };\n\n\t    exports._msg = _Message;\n\t    exports.message = Message;\n\t}());\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t;(function () {\n\t    function Array_h(length) {\n\t        this.array = length === undefined ? [] : new Array(length);\n\t    }\n\n\t    Array_h.prototype = {\n\t        /**\n\t         * 返回数组长度\n\t         *\n\t         * @return {Number} length [数组长度]\n\t         */\n\t        length: function () {\n\t            return this.array.length;\n\t        },\n\n\t        at: function (index) {\n\t            return this.array[index];\n\t        },\n\n\t        set: function (index, obj) {\n\t            this.array[index] = obj;\n\t        },\n\n\t        /**\n\t         * 向数组的末尾添加一个或多个元素，并返回新的长度。\n\t         *\n\t         * @param  {*} obj [description]\n\t         * @return {Number} length [新数组的长度]\n\t         */\n\t        push: function (obj) {\n\t            return this.array.push(obj);\n\t        },\n\n\t        /**\n\t         * 返回数组中选定的元素\n\t         *\n\t         * @param  {Number} start [开始索引值]\n\t         * @param  {Number} end [结束索引值]\n\t         * @return {Array} newArray  [新的数组]\n\t         */\n\t        slice: function (start, end) {\n\t            return this.array = this.array.slice(start, end);\n\t        },\n\n\t        concat: function (array) {\n\t            this.array = this.array.concat(array);\n\t        },\n\n\t        remove: function (index, count) {\n\t            count = count === undefined ? 1 : count;\n\t            this.array.splice(index, count);\n\t        },\n\n\t        join: function (separator) {\n\t            return this.array.join(separator);\n\t        },\n\n\t        clear: function () {\n\t            this.array.length = 0;\n\t        }\n\t    };\n\n\t    /**\n\t     * 先进先出队列 (First Input First Output)\n\t     *\n\t     * 一种先进先出的数据缓存器\n\t     */\n\t    var Queue = function () {\n\t        this._array_h = new Array_h();\n\t    };\n\n\t    Queue.prototype = {\n\t        _index: 0,\n\n\t        /**\n\t         * 排队\n\t         *\n\t         * @param  {Object} obj [description]\n\t         * @return {[type]}     [description]\n\t         */\n\t        push: function (obj) {\n\t            this._array_h.push(obj);\n\t        },\n\n\t        /**\n\t         * 出队\n\t         *\n\t         * @return {Object} [description]\n\t         */\n\t        pop: function () {\n\t            var ret = null;\n\t            if (this._array_h.length()) {\n\t                ret = this._array_h.at(this._index);\n\t                if (++this._index * 2 >= this._array_h.length()) {\n\t                    this._array_h.slice(this._index);\n\t                    this._index = 0;\n\t                }\n\t            }\n\t            return ret;\n\t        },\n\n\t        /**\n\t         * 返回队列中头部(即最新添加的)的动态对象\n\t         *\n\t         * @return {Object} [description]\n\t         */\n\t        head: function () {\n\t            var ret = null, len = this._array_h.length();\n\t            if (len) {\n\t                ret = this._array_h.at(len - 1);\n\t            }\n\t            return ret;\n\t        },\n\n\t        /**\n\t         * 返回队列中尾部(即最早添加的)的动态对象\n\t         *\n\t         * @return {Object} [description]\n\t         */\n\t        tail: function () {\n\t            var ret = null, len = this._array_h.length();\n\t            if (len) {\n\t                ret = this._array_h.at(this._index);\n\t            }\n\t            return ret;\n\t        },\n\n\t        /**\n\t         * 返回数据队列长度\n\t         *\n\t         * @return {Number} [description]\n\t         */\n\t        length: function () {\n\t            return this._array_h.length() - this._index;\n\t        },\n\n\t        /**\n\t         * 队列是否为空\n\t         *\n\t         * @return {Boolean} [description]\n\t         */\n\t        empty: function () {\n\t            return (this._array_h.length() === 0);\n\t        },\n\n\t        clear: function () {\n\t            this._array_h.clear();\n\t        }\n\t    };\n\t    exports.Queue = Queue;\n\t}());\n\n\n/***/ }\n/******/ ])\n});\n;"]}
